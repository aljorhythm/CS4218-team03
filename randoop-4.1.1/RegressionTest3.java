import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test001");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass6 = findApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = findApplication11.findFolderContent("", strArray16);
        java.lang.String str21 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.lang.Class<?> wildcardClass43 = mkdirApplication32.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication44 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication59 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = findApplication59.findFolderContent("", strArray64);
        java.lang.String str69 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication45.run(strArray64, inputStream70, outputStream71);
        java.lang.String str73 = echoApplication44.constructResult(strArray64);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication32.run(strArray64, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray64);
        java.lang.String str78 = findApplication5.findFolderContent("Could not write to output stream", strArray64);
        try {
            java.lang.String str79 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str29.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided fail_echo_write" + "'", str73.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test002");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        java.lang.Class<?> wildcardClass21 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        mkdirApplication24.createFolder(strArray37);
        java.lang.String str43 = findApplication22.findFolderContent("null output stream provided fail_echo_write", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication56 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        mkdirApplication58.createFolder(strArray71);
        java.lang.String str77 = findApplication56.findFolderContent("null output stream provided fail_echo_write", strArray71);
        java.lang.Class<?> wildcardClass78 = strArray71.getClass();
        java.lang.String str79 = findApplication45.findFolderContent("null output stream provided fail_echo_write", strArray71);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication81 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication83.createFolder(strArray86);
        java.lang.String str88 = findApplication81.findFolderContent("fail_sed_write", strArray86);
        java.lang.String str89 = findApplication45.findFolderContent("null output stream provided\r\nfail_echo_write", strArray86);
        java.lang.String str90 = findApplication22.findFolderContent("Could not write to output stream", strArray86);
        java.lang.Class<?> wildcardClass91 = strArray86.getClass();
        mkdirApplication1.createFolder(strArray86);
        try {
            java.lang.String str93 = catApplication0.catFiles(strArray86);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "" + "'", str88.equals(""));
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test003");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read stream", "", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test004");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.lang.String[] strArray77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided null arguments null output stream provided", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: filesNames is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test005");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        java.lang.String str19 = findApplication12.findFolderContent("fail_sed_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication21.createFolder(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = findApplication58.findFolderContent("", strArray63);
        java.lang.String str68 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication44.run(strArray63, inputStream69, outputStream70);
        java.lang.String str72 = findApplication33.findFolderContent("Could not read stream", strArray63);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication26.run(strArray63, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication21.run(strArray63, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray63.getClass();
        java.lang.String str80 = findApplication12.findFolderContent("", strArray63);
        mkdirApplication5.createFolder(strArray63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        mkdirApplication5.createFolder(strArray85);
        try {
            java.lang.String str90 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test006");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_sed_write", "null output stream provided\r\nfail_echo_write", (int) (byte) 10, "Terminate process.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test007");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication2 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication6 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.lang.Class<?> wildcardClass62 = mkdirApplication51.getClass();
        java.lang.String[] strArray67 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication51.run(strArray67, inputStream68, outputStream69);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication40.run(strArray67, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        echoApplication10.run(strArray67, inputStream74, outputStream75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.String str78 = echoApplication10.constructResult(strArray77);
        java.lang.String str79 = grepApplication6.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
        java.lang.String str80 = grepApplication2.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            catApplication0.run(strArray77, inputStream81, outputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided fail_echo_write" + "'", str39.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test008");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("hi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test009");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("Could not read file");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:20" + "'", str2.equals("03-24-2019 00:08:20"));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test010");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication16.createFolder(strArray19);
        java.lang.String str21 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        java.lang.Class<?> wildcardClass35 = mkdirApplication24.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication36 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        java.lang.String str61 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication37.run(strArray56, inputStream62, outputStream63);
        java.lang.String str65 = echoApplication36.constructResult(strArray56);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication24.run(strArray56, inputStream66, outputStream67);
        java.lang.String str69 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray56);
        java.lang.Class<?> wildcardClass70 = lsApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str21.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null output stream provided fail_echo_write" + "'", str65.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test011");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("Terminate process.", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream4);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test012");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("03-24-2019 00:07:26");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:21" + "'", str2.equals("03-24-2019 00:08:21"));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test013");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String str45 = findApplication15.findFolderContent("null input file provided", strArray39);
        java.lang.String str46 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray52);
        mkdirApplication1.createFolder(strArray52);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            sortApplication0.run(strArray52, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test014");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        java.lang.String str93 = findApplication2.findFolderContent("Exception Caught", strArray73);
        java.lang.String str94 = findApplication0.findFolderContent("C:\\", strArray73);
        java.lang.Class<?> wildcardClass95 = findApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test015");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write hi!", "03-24-2019 00:07:43", (int) (byte) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test016");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication7.findFolderContent("null input file provided", strArray31);
        java.lang.String str38 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray31);
        java.lang.Class<?> wildcardClass39 = strArray31.getClass();
        try {
            java.lang.String str40 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test017");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication61 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = lsApplication61.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        mkdirApplication54.createFolder(strArray67);
        java.lang.String str73 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        java.lang.String str74 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray67);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            sortApplication0.run(strArray67, inputStream75, outputStream76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test018");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null input file provided", "fail_echo_write", (int) (byte) -1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test019");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        java.lang.String str24 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication0.run(strArray19, inputStream25, outputStream26);
        java.lang.Class<?> wildcardClass28 = mkdirApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication42 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        java.lang.String str55 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication31.run(strArray50, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = mkdirApplication31.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = findApplication29.findFolderContent("", strArray61);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication0.run(strArray61, inputStream66, outputStream67);
        java.lang.String[] strArray69 = null;
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            mkdirApplication0.run(strArray69, inputStream70, outputStream71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test020");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass3 = findApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication25.createFolder(strArray28);
        java.lang.String str30 = findApplication23.findFolderContent("fail_sed_write", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.String str79 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication55.run(strArray74, inputStream80, outputStream81);
        java.lang.String str83 = findApplication44.findFolderContent("Could not read stream", strArray74);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication37.run(strArray74, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication32.run(strArray74, inputStream87, outputStream88);
        java.lang.Class<?> wildcardClass90 = strArray74.getClass();
        java.lang.String str91 = findApplication23.findFolderContent("", strArray74);
        mkdirApplication16.createFolder(strArray74);
        mkdirApplication5.createFolder(strArray74);
        java.lang.String str94 = findApplication2.findFolderContent("fail_sed_write", strArray74);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            cdApplication0.run(strArray74, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test021");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication42 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        java.lang.String str55 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication31.run(strArray50, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = mkdirApplication31.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            dateApplication0.run(strArray61, inputStream68, outputStream69);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test022");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication2.run(strArray33, inputStream35, outputStream36);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        try {
            wcApplication0.run(strArray33, inputStream38, outputStream39);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test023");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        java.lang.Class<?> wildcardClass27 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication44.createFolder(strArray47);
        java.lang.String str49 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray47);
        mkdirApplication1.createFolder(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        mkdirApplication1.createFolder(strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            sortApplication0.run(strArray56, inputStream62, outputStream63);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str49.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test024");
        boolean boolean1 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.isSpecialSymbol("03-24-2019 00:07:26");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test025");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "", (int) (byte) -1, "null output stream provided null arguments null output stream provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test026");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read file", "This is a directory Could not read stream Null Pointer Exception Exception Caught", 1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test027");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication24 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication24.constructResult(strArray44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        echoApplication24.run(strArray81, inputStream88, outputStream89);
        java.lang.String str91 = findApplication1.findFolderContent("fail_echo_write:\r\n\r\n\r\nhi!:", strArray81);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            dateApplication0.run(strArray81, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test028");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("fail_echo");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\fail_echo: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test029");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("fail_echo_empty_params");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\fail_echo_empty_params: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test030");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication34.createFolder(strArray37);
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication6.run(strArray37, inputStream39, outputStream40);
        mkdirApplication1.createFolder(strArray37);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        try {
            wcApplication0.run(strArray37, inputStream43, outputStream44);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test031");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication1 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass2 = wcApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        java.lang.Class<?> wildcardClass58 = mkdirApplication47.getClass();
        java.lang.String[] strArray63 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication47.run(strArray63, inputStream64, outputStream65);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication36.run(strArray63, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        echoApplication6.run(strArray63, inputStream70, outputStream71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.String str74 = echoApplication6.constructResult(strArray73);
        java.lang.String str75 = wcApplication1.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            exitApplication0.run(strArray73, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided fail_echo_write" + "'", str35.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test032");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        try {
            java.lang.String str78 = catApplication0.catFiles(strArray59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test033");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("fail_echo");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:22" + "'", str2.equals("03-24-2019 00:08:22"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:22" + "'", str4.equals("03-24-2019 00:08:22"));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test034");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = findApplication42.findFolderContent("Could not read stream", strArray72);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication35.run(strArray72, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication30.run(strArray72, inputStream85, outputStream86);
        java.lang.Class<?> wildcardClass88 = strArray72.getClass();
        java.lang.String str89 = findApplication21.findFolderContent("", strArray72);
        mkdirApplication14.createFolder(strArray72);
        mkdirApplication3.createFolder(strArray72);
        java.lang.String str92 = findApplication1.findFolderContent("Exception Caught", strArray72);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            sortApplication0.run(strArray72, inputStream93, outputStream94);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test035");
        boolean boolean1 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.isInteger("fail_echo_write\r\nhi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test036");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("fail_sed_write", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test037");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "File doesn't exist.", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test038");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_empty_params", "", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test039");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication14 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        java.lang.String str39 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication15.run(strArray34, inputStream40, outputStream41);
        java.lang.String str43 = echoApplication14.constructResult(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        echoApplication14.run(strArray51, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = echoApplication14.constructResult(strArray61);
        java.lang.Class<?> wildcardClass66 = strArray61.getClass();
        java.lang.String str67 = findApplication3.findFolderContent("null output stream provided fail_echo_write", strArray61);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            dateApplication0.run(strArray61, inputStream68, outputStream69);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:23" + "'", str2.equals("03-24-2019 00:08:23"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided fail_echo_write" + "'", str43.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null output stream provided fail_echo_write" + "'", str65.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test040");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication7.findFolderContent("null input file provided", strArray31);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        try {
            pwdApplication0.run(strArray31, inputStream38, outputStream39);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str2.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str6.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test041");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication35.findFolderContent("null output stream provided fail_echo_write", strArray50);
        java.lang.Class<?> wildcardClass57 = strArray50.getClass();
        java.lang.String str58 = findApplication24.findFolderContent("null output stream provided fail_echo_write", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication62.createFolder(strArray65);
        java.lang.String str67 = findApplication60.findFolderContent("fail_sed_write", strArray65);
        java.lang.String str68 = findApplication24.findFolderContent("null output stream provided\r\nfail_echo_write", strArray65);
        java.lang.String str69 = findApplication1.findFolderContent("Could not write to output stream", strArray65);
        java.lang.Class<?> wildcardClass70 = strArray65.getClass();
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            sedApplication0.run(strArray65, inputStream71, outputStream72);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test042");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.Class<?> wildcardClass29 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication32.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication32.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication30.findFolderContent("", strArray62);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication1.run(strArray62, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            catApplication0.run(strArray62, inputStream70, outputStream71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test043");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass4 = findApplication3.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication26.createFolder(strArray29);
        java.lang.String str31 = findApplication24.findFolderContent("fail_sed_write", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication56.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.String str79 = findApplication70.findFolderContent("", strArray75);
        java.lang.String str80 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication56.run(strArray75, inputStream81, outputStream82);
        java.lang.String str84 = findApplication45.findFolderContent("Could not read stream", strArray75);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication38.run(strArray75, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication33.run(strArray75, inputStream88, outputStream89);
        java.lang.Class<?> wildcardClass91 = strArray75.getClass();
        java.lang.String str92 = findApplication24.findFolderContent("", strArray75);
        mkdirApplication17.createFolder(strArray75);
        mkdirApplication6.createFolder(strArray75);
        java.lang.String str95 = findApplication3.findFolderContent("fail_sed_write", strArray75);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            dateApplication0.run(strArray75, inputStream96, outputStream97);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:23" + "'", str2.equals("03-24-2019 00:08:23"));
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "" + "'", str95.equals(""));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test044");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write", "hi!", (int) '4', "null input file provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test045");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication1 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass2 = wcApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        java.lang.Class<?> wildcardClass58 = mkdirApplication47.getClass();
        java.lang.String[] strArray63 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication47.run(strArray63, inputStream64, outputStream65);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication36.run(strArray63, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        echoApplication6.run(strArray63, inputStream70, outputStream71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.String str74 = echoApplication6.constructResult(strArray73);
        java.lang.String str75 = wcApplication1.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            dateApplication0.run(strArray73, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided fail_echo_write" + "'", str35.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test046");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_empty_params", "This is a directory", (int) '#', "fail_echo_write\r\nhi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test047");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        java.lang.String str22 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication37 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = findApplication52.findFolderContent("", strArray57);
        java.lang.String str62 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication38.run(strArray57, inputStream63, outputStream64);
        java.lang.String str66 = echoApplication37.constructResult(strArray57);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication25.run(strArray57, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray57);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            catApplication0.run(strArray57, inputStream71, outputStream72);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str22.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "null output stream provided fail_echo_write" + "'", str66.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test048");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.String str69 = echoApplication1.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication77 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication77.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication70.createFolder(strArray83);
        java.lang.String[] strArray92 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        mkdirApplication70.run(strArray92, inputStream93, outputStream94);
        java.lang.String str96 = echoApplication1.constructResult(strArray92);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            grepApplication0.run(strArray92, inputStream97, outputStream98);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "null output stream provided null arguments null output stream provided" + "'", str96.equals("null output stream provided null arguments null output stream provided"));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test049");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication1 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass2 = wcApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        java.lang.Class<?> wildcardClass58 = mkdirApplication47.getClass();
        java.lang.String[] strArray63 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication47.run(strArray63, inputStream64, outputStream65);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication36.run(strArray63, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        echoApplication6.run(strArray63, inputStream70, outputStream71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.String str74 = echoApplication6.constructResult(strArray73);
        java.lang.String str75 = wcApplication1.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            grepApplication0.run(strArray73, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided fail_echo_write" + "'", str35.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test050");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("Terminate process.", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test051");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = findApplication30.findFolderContent("fail_sed_write", strArray35);
        java.lang.String str38 = findApplication21.findFolderContent("null input file provided", strArray35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication65 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = findApplication65.findFolderContent("", strArray70);
        java.lang.String str75 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication51.run(strArray70, inputStream76, outputStream77);
        java.lang.String str79 = findApplication40.findFolderContent("Could not read stream", strArray70);
        java.lang.String str80 = findApplication21.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray70);
        java.lang.String str81 = findApplication2.findFolderContent("File is null.", strArray70);
        mkdirApplication1.createFolder(strArray70);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            sedApplication0.run(strArray70, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test052");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        java.lang.String str93 = findApplication1.findFolderContent("fail_sed_write", strArray73);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            dateApplication0.run(strArray73, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test053");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        try {
            java.lang.String str14 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray9);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test054");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", "fail_echo_empty_params", (int) (byte) -1, "File is null.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test055");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication1.createFolder(strArray22);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        try {
            exitApplication0.run(strArray22, inputStream30, outputStream31);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test056");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        java.lang.Class<?> wildcardClass14 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication22 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = echoApplication22.constructResult(strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        echoApplication22.run(strArray59, inputStream63, outputStream64);
        mkdirApplication15.createFolder(strArray59);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication2.run(strArray59, inputStream67, outputStream68);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication70 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = lsApplication70.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication2.createFolder(strArray86);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            sortApplication0.run(strArray86, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided fail_echo_write" + "'", str51.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str92.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test057");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream4 = null;
        java.io.OutputStream outputStream5 = null;
        mkdirApplication0.run(strArray3, inputStream4, outputStream5);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication7 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = findApplication10.findFolderContent("", strArray15);
        java.lang.String str20 = lsApplication7.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        java.lang.Class<?> wildcardClass21 = strArray15.getClass();
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication0.run(strArray15, inputStream22, outputStream23);
        java.lang.Class<?> wildcardClass25 = mkdirApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test058");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("fail_echo");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:23" + "'", str2.equals("03-24-2019 00:08:23"));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test059");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication43.run(strArray62, inputStream68, outputStream69);
        java.lang.String str71 = findApplication32.findFolderContent("Could not read stream", strArray62);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication25.run(strArray62, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication20.run(strArray62, inputStream75, outputStream76);
        java.lang.Class<?> wildcardClass78 = strArray62.getClass();
        java.lang.String str79 = findApplication11.findFolderContent("", strArray62);
        mkdirApplication4.createFolder(strArray62);
        java.lang.Class<?> wildcardClass81 = strArray62.getClass();
        java.lang.String str82 = findApplication1.findFolderContent("File is null.", strArray62);
        java.lang.Class<?> wildcardClass83 = strArray62.getClass();
        try {
            java.lang.String str84 = catApplication0.catFiles(strArray62);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test060");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("Terminate process.", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test061");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_empty_params", "", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test062");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication53.createFolder(strArray56);
        java.lang.String str58 = findApplication51.findFolderContent("fail_sed_write", strArray56);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication62.createFolder(strArray65);
        java.lang.String str67 = findApplication60.findFolderContent("fail_sed_write", strArray65);
        java.lang.String str68 = findApplication51.findFolderContent("null input file provided", strArray65);
        java.lang.String str69 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray65);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            grepApplication0.run(strArray65, inputStream70, outputStream71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "fail_echo_write\r\nhi!" + "'", str69.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test063");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("null arguments");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:24" + "'", str2.equals("03-24-2019 00:08:24"));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test064");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        mkdirApplication16.createFolder(strArray29);
        java.lang.String str35 = findApplication14.findFolderContent("null output stream provided fail_echo_write", strArray29);
        java.lang.Class<?> wildcardClass36 = strArray29.getClass();
        java.lang.String str37 = findApplication3.findFolderContent("null output stream provided fail_echo_write", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication41.createFolder(strArray44);
        java.lang.String str46 = findApplication39.findFolderContent("fail_sed_write", strArray44);
        java.lang.String str47 = findApplication3.findFolderContent("null output stream provided\r\nfail_echo_write", strArray44);
        java.lang.String str48 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication51.createFolder(strArray54);
        java.lang.String str56 = findApplication49.findFolderContent("fail_sed_write", strArray54);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication60.createFolder(strArray63);
        java.lang.String str65 = findApplication58.findFolderContent("fail_sed_write", strArray63);
        java.lang.String str66 = findApplication49.findFolderContent("null input file provided", strArray63);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        try {
            lsApplication0.run(strArray63, inputStream67, outputStream68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str48.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test065");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        java.lang.String str77 = findApplication6.findFolderContent("", strArray59);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        try {
            pwdApplication0.run(strArray59, inputStream78, outputStream79);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str2.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test066");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("File is null.", "Null Pointer Exception", (int) '#', "03-24-2019 00:07:43");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test067");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        java.lang.Class<?> wildcardClass27 = strArray23.getClass();
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        try {
            exitApplication0.run(strArray23, inputStream28, outputStream29);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test068");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Could not write to output stream", "fail_echo_write", (int) (byte) 10, "03-24-2019 00:07:43");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test069");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("File is null.", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test070");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("Could not read file", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream4);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test071");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        mkdirApplication32.createFolder(strArray45);
        java.lang.String str51 = findApplication30.findFolderContent("null output stream provided fail_echo_write", strArray45);
        java.lang.Class<?> wildcardClass52 = strArray45.getClass();
        java.lang.String str53 = findApplication19.findFolderContent("null output stream provided fail_echo_write", strArray45);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication57.createFolder(strArray60);
        java.lang.String str62 = findApplication55.findFolderContent("fail_sed_write", strArray60);
        java.lang.String str63 = findApplication19.findFolderContent("null output stream provided\r\nfail_echo_write", strArray60);
        java.lang.String str64 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        java.lang.String str65 = lsApplication3.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray60);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        try {
            dateApplication0.run(strArray60, inputStream66, outputStream67);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:24" + "'", str2.equals("03-24-2019 00:08:24"));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str64.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "fail_echo_write\r\nhi!" + "'", str65.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test072");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Terminate process.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Terminate process.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test073");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "File doesn't exist.", (int) '4', inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test074");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_write hi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_echo_write hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test075");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "", "File doesn't exist.", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test076");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass2 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication5.run(strArray36, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.lang.String str88 = lsApplication41.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray81);
        mkdirApplication5.createFolder(strArray81);
        java.lang.String str90 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray81);
        java.lang.Class<?> wildcardClass91 = strArray81.getClass();
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            wcApplication0.run(strArray81, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str88.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:" + "'", str90.equals("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:"));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test077");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        java.lang.String str18 = findApplication1.findFolderContent("null input file provided", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication44.getClass();
        java.lang.String[] strArray60 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication44.run(strArray60, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication33.run(strArray60, inputStream64, outputStream65);
        java.lang.String str67 = lsApplication20.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication70 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = lsApplication70.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        java.lang.String str93 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        java.lang.String str94 = findApplication1.findFolderContent("03-24-2019 00:07:43", strArray86);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            grepApplication0.run(strArray86, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str67.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str92.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test078");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", "fail_echo_write hi!", (int) 'a', "null input file provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test079");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        java.lang.Class<?> wildcardClass23 = mkdirApplication12.getClass();
        java.lang.String[] strArray28 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication12.run(strArray28, inputStream29, outputStream30);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication1.run(strArray28, inputStream32, outputStream33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        try {
            sedApplication0.run(strArray28, inputStream35, outputStream36);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test080");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        java.lang.String str22 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        java.lang.Class<?> wildcardClass23 = strArray17.getClass();
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication2.run(strArray17, inputStream24, outputStream25);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        try {
            wcApplication0.run(strArray17, inputStream27, outputStream28);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test081");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.lang.String str38 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication41.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication41.run(strArray73, inputStream83, outputStream84);
        java.lang.String str86 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.lang.String str87 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            exitApplication0.run(strArray73, inputStream88, outputStream89);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str38.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null output stream provided fail_echo_write" + "'", str82.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str86.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str87.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test082");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        java.lang.Class<?> wildcardClass22 = mkdirApplication11.getClass();
        java.lang.Class<?> wildcardClass23 = mkdirApplication11.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication31 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication31.constructResult(strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication31.run(strArray68, inputStream72, outputStream73);
        mkdirApplication24.createFolder(strArray68);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication11.run(strArray68, inputStream76, outputStream77);
        mkdirApplication4.createFolder(strArray68);
        java.lang.Class<?> wildcardClass80 = strArray68.getClass();
        try {
            java.lang.String str81 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray68);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided fail_echo_write" + "'", str60.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test083");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication1.constructResult(strArray56);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        try {
            exitApplication0.run(strArray56, inputStream61, outputStream62);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided fail_echo_write" + "'", str52.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided fail_echo_write" + "'", str60.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test084");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test085");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        java.lang.Class<?> wildcardClass78 = strArray59.getClass();
        java.lang.Class<?> wildcardClass79 = strArray59.getClass();
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            exitApplication0.run(strArray59, inputStream80, outputStream81);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test086");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication9.run(strArray46, inputStream50, outputStream51);
        mkdirApplication2.createFolder(strArray46);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        echoApplication1.run(strArray46, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = strArray46.getClass();
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            sedApplication0.run(strArray46, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided fail_echo_write" + "'", str38.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test087");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication43.run(strArray62, inputStream68, outputStream69);
        java.lang.String str71 = findApplication32.findFolderContent("Could not read stream", strArray62);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication25.run(strArray62, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication20.run(strArray62, inputStream75, outputStream76);
        java.lang.Class<?> wildcardClass78 = strArray62.getClass();
        java.lang.String str79 = findApplication11.findFolderContent("", strArray62);
        mkdirApplication4.createFolder(strArray62);
        java.lang.Class<?> wildcardClass81 = strArray62.getClass();
        java.lang.String str82 = findApplication1.findFolderContent("File is null.", strArray62);
        java.lang.Class<?> wildcardClass83 = strArray62.getClass();
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            sedApplication0.run(strArray62, inputStream84, outputStream85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test088");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        java.lang.String str22 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray20);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication25 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication26.run(strArray45, inputStream51, outputStream52);
        java.lang.String str54 = echoApplication25.constructResult(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.lang.String str76 = findApplication55.findFolderContent("null output stream provided fail_echo_write", strArray70);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        echoApplication25.run(strArray70, inputStream77, outputStream78);
        java.lang.String str80 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        try {
            java.lang.String str81 = catApplication0.catFiles(strArray70);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str22.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided fail_echo_write" + "'", str54.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test089");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        java.lang.String str39 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication15.run(strArray34, inputStream40, outputStream41);
        java.lang.String str43 = findApplication4.findFolderContent("Could not read stream", strArray34);
        try {
            java.lang.String str44 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test090");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = findApplication34.findFolderContent("null output stream provided fail_echo_write", strArray49);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        echoApplication4.run(strArray49, inputStream56, outputStream57);
        try {
            java.lang.String str59 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray49);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test091");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = findApplication11.findFolderContent("", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = findApplication11.findFolderContent("Could not read stream", strArray41);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication4.run(strArray41, inputStream51, outputStream52);
        java.lang.Class<?> wildcardClass54 = mkdirApplication4.getClass();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication4.createFolder(strArray56);
        java.lang.String str58 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        try {
            exitApplication0.run(strArray56, inputStream59, outputStream60);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test092");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("Could not write to output stream");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:25" + "'", str2.equals("03-24-2019 00:08:25"));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test093");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication11.createFolder(strArray14);
        java.lang.String str16 = findApplication9.findFolderContent("fail_sed_write", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        java.lang.String str25 = findApplication18.findFolderContent("fail_sed_write", strArray23);
        java.lang.String str26 = findApplication9.findFolderContent("null input file provided", strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication28.createFolder(strArray41);
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication28.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication28.run(strArray81, inputStream88, outputStream89);
        java.lang.String str91 = findApplication9.findFolderContent("fail_echo_empty_params", strArray81);
        mkdirApplication2.createFolder(strArray81);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            catApplication0.run(strArray81, inputStream93, outputStream94);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test094");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication1.run(strArray43, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication56 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = findApplication56.findFolderContent("", strArray61);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication74 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication77 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray80 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication77.run(strArray80, inputStream81, outputStream82);
        java.lang.String str84 = lsApplication74.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray80);
        mkdirApplication67.createFolder(strArray80);
        java.lang.String str86 = findApplication56.findFolderContent("null input file provided", strArray80);
        java.lang.String str87 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray80);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication1.run(strArray80, inputStream88, outputStream89);
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            sortApplication0.run(strArray80, inputStream91, outputStream92);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided fail_echo_write" + "'", str35.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str84.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test095");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication28.createFolder(strArray41);
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication28.run(strArray50, inputStream51, outputStream52);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication2.run(strArray50, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            catApplication0.run(strArray50, inputStream57, outputStream58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray50);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test096");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Null Pointer Exception", "", 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test097");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication8.createFolder(strArray25);
        mkdirApplication1.createFolder(strArray25);
        java.lang.Class<?> wildcardClass32 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication1.createFolder(strArray41);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        try {
            catApplication0.run(strArray41, inputStream48, outputStream49);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test098");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication13.run(strArray20, inputStream21, outputStream22);
        java.lang.Class<?> wildcardClass24 = mkdirApplication13.getClass();
        java.lang.Class<?> wildcardClass25 = mkdirApplication13.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication33 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = findApplication48.findFolderContent("", strArray53);
        java.lang.String str58 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication34.run(strArray53, inputStream59, outputStream60);
        java.lang.String str62 = echoApplication33.constructResult(strArray53);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication63.run(strArray70, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        echoApplication33.run(strArray70, inputStream74, outputStream75);
        mkdirApplication26.createFolder(strArray70);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication13.run(strArray70, inputStream78, outputStream79);
        mkdirApplication6.createFolder(strArray70);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            pwdApplication0.run(strArray70, inputStream82, outputStream83);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\" + "'", str2.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null output stream provided fail_echo_write" + "'", str62.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test099");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication42 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        java.lang.String str55 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication31.run(strArray50, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = mkdirApplication31.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray61, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication71 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = findApplication71.findFolderContent("", strArray76);
        java.lang.String str81 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication84.createFolder(strArray87);
        java.lang.String str89 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray87);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        echoApplication1.run(strArray87, inputStream90, outputStream91);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            sortApplication0.run(strArray87, inputStream93, outputStream94);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str89.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test100");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("03-24-2019 00:07:43", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test101");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        java.lang.String str52 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication28.run(strArray47, inputStream53, outputStream54);
        java.lang.String str56 = findApplication17.findFolderContent("Could not read stream", strArray47);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication10.run(strArray47, inputStream57, outputStream58);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        try {
            findApplication0.run(strArray47, inputStream60, outputStream61);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test102");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Exception Caught", "File doesn't exist.", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test103");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test104");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test105");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication26.createFolder(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        mkdirApplication34.createFolder(strArray47);
        java.lang.String str53 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        mkdirApplication26.createFolder(strArray47);
        java.lang.String str55 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        try {
            lsApplication0.run(strArray47, inputStream56, outputStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test106");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        mkdirApplication6.createFolder(strArray19);
        java.lang.String str25 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray19);
        java.lang.Class<?> wildcardClass26 = strArray19.getClass();
        try {
            java.lang.String str27 = grepApplication0.grepFromFiles("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray19);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test107");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        java.lang.String str11 = findApplication4.findFolderContent("fail_sed_write", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication47 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        java.lang.String str60 = lsApplication47.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication36.run(strArray55, inputStream61, outputStream62);
        java.lang.String str64 = findApplication25.findFolderContent("Could not read stream", strArray55);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication18.run(strArray55, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication13.run(strArray55, inputStream68, outputStream69);
        java.lang.Class<?> wildcardClass71 = strArray55.getClass();
        java.lang.String str72 = findApplication4.findFolderContent("", strArray55);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication74 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication77 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray80 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication77.run(strArray80, inputStream81, outputStream82);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication84 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication87 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray90 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        mkdirApplication87.run(strArray90, inputStream91, outputStream92);
        java.lang.String str94 = lsApplication84.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray90);
        mkdirApplication77.createFolder(strArray90);
        java.lang.String str96 = lsApplication74.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray90);
        java.lang.String str97 = findApplication4.findFolderContent("null output stream provided null arguments null output stream provided", strArray90);
        try {
            java.lang.String str98 = grepApplication0.grepFromFiles("Null Pointer Exception", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray90);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "" + "'", str59.equals(""));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str94.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str96.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "" + "'", str97.equals(""));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test108");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication0.createFolder(strArray3);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication0.run(strArray42, inputStream49, outputStream50);
        java.lang.String[] strArray52 = null;
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        try {
            mkdirApplication0.run(strArray52, inputStream53, outputStream54);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test109");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        java.lang.Class<?> wildcardClass45 = strArray38.getClass();
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            dateApplication0.run(strArray38, inputStream46, outputStream47);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test110");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication26.run(strArray45, inputStream51, outputStream52);
        java.lang.String str54 = findApplication15.findFolderContent("Could not read stream", strArray45);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication8.run(strArray45, inputStream55, outputStream56);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication3.run(strArray45, inputStream58, outputStream59);
        java.lang.Class<?> wildcardClass61 = strArray45.getClass();
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            cdApplication0.run(strArray45, inputStream62, outputStream63);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test111");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        java.lang.Class<?> wildcardClass14 = mkdirApplication3.getClass();
        java.lang.Class<?> wildcardClass15 = mkdirApplication3.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication23 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication23.constructResult(strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        echoApplication23.run(strArray60, inputStream64, outputStream65);
        mkdirApplication16.createFolder(strArray60);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication3.run(strArray60, inputStream68, outputStream69);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication81 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = lsApplication81.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        mkdirApplication74.createFolder(strArray87);
        java.lang.String str93 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        mkdirApplication3.createFolder(strArray87);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            dateApplication0.run(strArray87, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:27" + "'", str2.equals("03-24-2019 00:08:27"));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided fail_echo_write" + "'", str52.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test112");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication13 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        java.lang.String str38 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication14.run(strArray33, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication13.constructResult(strArray33);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication1.run(strArray33, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray51, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        try {
            catApplication0.run(strArray51, inputStream59, outputStream60);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null output stream provided fail_echo_write" + "'", str42.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test113");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        java.lang.Class<?> wildcardClass46 = strArray39.getClass();
        try {
            java.lang.String str47 = catApplication0.catFiles(strArray39);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test114");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test115");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication43.run(strArray62, inputStream68, outputStream69);
        java.lang.String str71 = findApplication32.findFolderContent("Could not read stream", strArray62);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication25.run(strArray62, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication20.run(strArray62, inputStream75, outputStream76);
        java.lang.Class<?> wildcardClass78 = strArray62.getClass();
        java.lang.String str79 = findApplication11.findFolderContent("", strArray62);
        mkdirApplication4.createFolder(strArray62);
        java.lang.Class<?> wildcardClass81 = strArray62.getClass();
        java.lang.String str82 = findApplication1.findFolderContent("File is null.", strArray62);
        java.lang.Class<?> wildcardClass83 = strArray62.getClass();
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            catApplication0.run(strArray62, inputStream84, outputStream85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test116");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        java.lang.Class<?> wildcardClass16 = mkdirApplication5.getClass();
        java.lang.Class<?> wildcardClass17 = mkdirApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication20 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication21.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = findApplication35.findFolderContent("", strArray40);
        java.lang.String str45 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication21.run(strArray40, inputStream46, outputStream47);
        java.lang.String str49 = echoApplication20.constructResult(strArray40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        java.lang.Class<?> wildcardClass72 = mkdirApplication61.getClass();
        java.lang.String[] strArray77 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication61.run(strArray77, inputStream78, outputStream79);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication50.run(strArray77, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        echoApplication20.run(strArray77, inputStream84, outputStream85);
        java.lang.String str87 = findApplication18.findFolderContent("fail_echo_write hi!", strArray77);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication5.run(strArray77, inputStream88, outputStream89);
        try {
            java.lang.String str91 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided fail_echo_write" + "'", str49.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test117");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication11.createFolder(strArray14);
        java.lang.String str16 = findApplication9.findFolderContent("fail_sed_write", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        java.lang.String str25 = findApplication18.findFolderContent("fail_sed_write", strArray23);
        java.lang.String str26 = findApplication9.findFolderContent("null input file provided", strArray23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        mkdirApplication42.createFolder(strArray55);
        java.lang.String str61 = findApplication31.findFolderContent("null input file provided", strArray55);
        java.lang.String str62 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray68);
        java.lang.String str73 = findApplication9.findFolderContent("Could not read file", strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        try {
            cdApplication0.run(strArray68, inputStream74, outputStream75);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test118");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication38 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        java.lang.String str51 = lsApplication38.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication27.run(strArray46, inputStream52, outputStream53);
        java.lang.String str55 = findApplication16.findFolderContent("Could not read stream", strArray46);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication9.run(strArray46, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = mkdirApplication9.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication9.createFolder(strArray61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        try {
            pwdApplication0.run(strArray61, inputStream63, outputStream64);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\" + "'", str6.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "C:\\" + "'", str7.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "C:\\" + "'", str8.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test119");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        java.lang.Class<?> wildcardClass11 = mkdirApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication12 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication13.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication27.findFolderContent("", strArray32);
        java.lang.String str37 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray32);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication13.run(strArray32, inputStream38, outputStream39);
        java.lang.String str41 = echoApplication12.constructResult(strArray32);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication0.run(strArray32, inputStream42, outputStream43);
        java.lang.String[] strArray45 = null;
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            mkdirApplication0.run(strArray45, inputStream46, outputStream47);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null output stream provided fail_echo_write" + "'", str41.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test120");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        try {
            sedApplication0.run(strArray59, inputStream78, outputStream79);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test121");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication19.createFolder(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication56 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = findApplication56.findFolderContent("", strArray61);
        java.lang.String str66 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray61);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication42.run(strArray61, inputStream67, outputStream68);
        java.lang.String str70 = findApplication31.findFolderContent("Could not read stream", strArray61);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication24.run(strArray61, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication19.run(strArray61, inputStream74, outputStream75);
        java.lang.Class<?> wildcardClass77 = strArray61.getClass();
        java.lang.String str78 = findApplication10.findFolderContent("", strArray61);
        java.lang.String str79 = findApplication8.findFolderContent("", strArray61);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication1.run(strArray61, inputStream80, outputStream81);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            grepApplication0.run(strArray61, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test122");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication28.createFolder(strArray41);
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication28.run(strArray50, inputStream51, outputStream52);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication2.run(strArray50, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            cdApplication0.run(strArray50, inputStream57, outputStream58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray50);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test123");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication1 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = grepApplication1.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            sedApplication0.run(strArray72, inputStream75, outputStream76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test124");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Null Pointer Exception", "", (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test125");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        echoApplication4.run(strArray41, inputStream45, outputStream46);
        try {
            java.lang.String str48 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray41);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test126");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        java.lang.String[] strArray18 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication2.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication2.run(strArray27, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        mkdirApplication60.createFolder(strArray73);
        java.lang.String str79 = findApplication58.findFolderContent("null output stream provided fail_echo_write", strArray73);
        java.lang.String str80 = lsApplication33.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray73);
        mkdirApplication2.createFolder(strArray73);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            sortApplication0.run(strArray73, inputStream82, outputStream83);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str80.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test127");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_empty_params", "", (int) 'a', inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test128");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = findApplication30.findFolderContent("fail_sed_write", strArray35);
        java.lang.String str38 = findApplication21.findFolderContent("null input file provided", strArray35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication65 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = findApplication65.findFolderContent("", strArray70);
        java.lang.String str75 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication51.run(strArray70, inputStream76, outputStream77);
        java.lang.String str79 = findApplication40.findFolderContent("Could not read stream", strArray70);
        java.lang.String str80 = findApplication21.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray70);
        java.lang.String str81 = findApplication2.findFolderContent("File is null.", strArray70);
        mkdirApplication1.createFolder(strArray70);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            catApplication0.run(strArray70, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test129");
        boolean boolean1 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.isSpecialSymbol("fail_echo_write\r\nhi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test130");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test131");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication5.constructResult(strArray52);
        java.lang.Class<?> wildcardClass57 = strArray52.getClass();
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            cdApplication0.run(strArray52, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided fail_echo_write" + "'", str56.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test132");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "fail_echo_write\r\nhi!", (int) (short) 100, "C:\\");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test133");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        java.lang.Class<?> wildcardClass51 = mkdirApplication1.getClass();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication1.createFolder(strArray53);
        java.lang.Class<?> wildcardClass55 = strArray53.getClass();
        java.lang.Class<?> wildcardClass56 = strArray53.getClass();
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            catApplication0.run(strArray53, inputStream57, outputStream58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test134");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = findApplication25.findFolderContent("null input file provided", strArray49);
        java.lang.String str56 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication59 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        mkdirApplication61.createFolder(strArray74);
        java.lang.String str80 = findApplication59.findFolderContent("null output stream provided fail_echo_write", strArray74);
        java.lang.String str81 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray74);
        java.lang.String[] strArray82 = null;
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            lsApplication0.run(strArray82, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str56.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str81.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test135");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        java.lang.String str57 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray52);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication33.run(strArray52, inputStream58, outputStream59);
        java.lang.String str61 = findApplication22.findFolderContent("Could not read stream", strArray52);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication15.run(strArray52, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication10.run(strArray52, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = strArray52.getClass();
        java.lang.String str69 = findApplication1.findFolderContent("", strArray52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication81 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = lsApplication81.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        mkdirApplication74.createFolder(strArray87);
        java.lang.String str93 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        java.lang.String str94 = findApplication1.findFolderContent("null output stream provided null arguments null output stream provided", strArray87);
        try {
            java.lang.String str95 = catApplication0.catFiles(strArray87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str57.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test136");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        java.io.InputStream inputStream5 = null;
        try {
            java.lang.String str6 = wcApplication0.countFromStdin((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream5);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test137");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("Could not read stream", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test138");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        java.lang.Class<?> wildcardClass37 = mkdirApplication26.getClass();
        java.lang.String[] strArray42 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication26.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication15.run(strArray42, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        mkdirApplication55.createFolder(strArray68);
        java.lang.String str74 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.lang.String str75 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray68);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            sortApplication0.run(strArray68, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str12.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str49.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test139");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication0.createFolder(strArray3);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = findApplication12.findFolderContent("Could not read stream", strArray42);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication5.run(strArray42, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication0.run(strArray42, inputStream55, outputStream56);
        java.lang.String[] strArray58 = null;
        try {
            mkdirApplication0.createFolder(strArray58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Please check the filename.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test140");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication26.findFolderContent("null input file provided", strArray50);
        java.lang.String str57 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication62.run(strArray65, inputStream66, outputStream67);
        java.lang.String str69 = findApplication60.findFolderContent("", strArray65);
        java.lang.String str70 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray65);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            sortApplication0.run(strArray65, inputStream71, outputStream72);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str57.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test141");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "Terminate process.", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test142");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        mkdirApplication30.createFolder(strArray43);
        java.lang.String str49 = findApplication28.findFolderContent("null output stream provided fail_echo_write", strArray43);
        java.lang.Class<?> wildcardClass50 = strArray43.getClass();
        java.lang.String str51 = findApplication17.findFolderContent("null output stream provided fail_echo_write", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication55.createFolder(strArray58);
        java.lang.String str60 = findApplication53.findFolderContent("fail_sed_write", strArray58);
        java.lang.String str61 = findApplication17.findFolderContent("null output stream provided\r\nfail_echo_write", strArray58);
        java.lang.String str62 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        java.lang.String str63 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray58);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        try {
            sortApplication0.run(strArray58, inputStream64, outputStream65);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str62.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "fail_echo_write\r\nhi!" + "'", str63.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test143");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("Could not read file");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:29" + "'", str2.equals("03-24-2019 00:08:29"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:29" + "'", str4.equals("03-24-2019 00:08:29"));
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test144");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("Terminate process.", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test145");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.String str69 = echoApplication1.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication77 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication77.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication70.createFolder(strArray83);
        java.lang.String[] strArray92 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        mkdirApplication70.run(strArray92, inputStream93, outputStream94);
        java.lang.String str96 = echoApplication1.constructResult(strArray92);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            cdApplication0.run(strArray92, inputStream97, outputStream98);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "null output stream provided null arguments null output stream provided" + "'", str96.equals("null output stream provided null arguments null output stream provided"));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test146");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = findApplication9.findFolderContent("", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication20.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        java.lang.String str44 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication20.run(strArray39, inputStream45, outputStream46);
        java.lang.String str48 = findApplication9.findFolderContent("Could not read stream", strArray39);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication2.run(strArray39, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication2.getClass();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication2.createFolder(strArray54);
        mkdirApplication1.createFolder(strArray54);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            sedApplication0.run(strArray54, inputStream57, outputStream58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray54);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test147");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        java.lang.String str19 = findApplication12.findFolderContent("fail_sed_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication21.createFolder(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = findApplication58.findFolderContent("", strArray63);
        java.lang.String str68 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication44.run(strArray63, inputStream69, outputStream70);
        java.lang.String str72 = findApplication33.findFolderContent("Could not read stream", strArray63);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication26.run(strArray63, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication21.run(strArray63, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray63.getClass();
        java.lang.String str80 = findApplication12.findFolderContent("", strArray63);
        mkdirApplication5.createFolder(strArray63);
        try {
            java.lang.String str82 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray63);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test148");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        mkdirApplication53.createFolder(strArray66);
        java.lang.String str72 = findApplication51.findFolderContent("null output stream provided fail_echo_write", strArray66);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication1.run(strArray66, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            grepApplication0.run(strArray66, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test149");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = echoApplication5.constructResult(strArray42);
        try {
            java.lang.String str47 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray42);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str46.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test150");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:29" + "'", str2.equals("03-24-2019 00:08:29"));
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test151");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = echoApplication2.constructResult(strArray57);
        try {
            java.lang.String str62 = catApplication0.catFiles(strArray57);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided fail_echo_write" + "'", str61.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test152");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        java.lang.Class<?> wildcardClass37 = strArray30.getClass();
        java.lang.String str38 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray30);
        try {
            java.lang.String str39 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test153");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test154");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = strArray43.getClass();
        java.lang.Class<?> wildcardClass60 = strArray43.getClass();
        try {
            java.lang.String str61 = catApplication0.catFiles(strArray43);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test155");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication68.createFolder(strArray71);
        java.lang.String str73 = echoApplication1.constructResult(strArray71);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        try {
            sortApplication0.run(strArray71, inputStream74, outputStream75);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "fail_echo_write hi!" + "'", str73.equals("fail_echo_write hi!"));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test156");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("File doesn't exist.", "This is a directory Could not read stream Null Pointer Exception Exception Caught", (int) (short) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test157");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.lang.Class<?> wildcardClass34 = strArray27.getClass();
        java.lang.String str35 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication39.createFolder(strArray42);
        java.lang.String str44 = findApplication37.findFolderContent("fail_sed_write", strArray42);
        java.lang.String str45 = findApplication1.findFolderContent("null output stream provided\r\nfail_echo_write", strArray42);
        java.lang.String[] strArray52 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str53 = findApplication1.findFolderContent("null output stream provided null arguments null output stream provided", strArray52);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        try {
            exitApplication0.run(strArray52, inputStream54, outputStream55);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test158");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        java.lang.String str15 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray11);
        try {
            java.lang.String str16 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray11);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str15.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test159");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        java.lang.String str11 = findApplication4.findFolderContent("fail_sed_write", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication15.createFolder(strArray18);
        java.lang.String str20 = findApplication13.findFolderContent("fail_sed_write", strArray18);
        java.lang.String str21 = findApplication4.findFolderContent("null input file provided", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        mkdirApplication23.createFolder(strArray36);
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication23.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication60.run(strArray67, inputStream68, outputStream69);
        java.lang.Class<?> wildcardClass71 = mkdirApplication60.getClass();
        java.lang.String[] strArray76 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication60.run(strArray76, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication49.run(strArray76, inputStream80, outputStream81);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication23.run(strArray76, inputStream83, outputStream84);
        java.lang.String str86 = findApplication4.findFolderContent("fail_echo_empty_params", strArray76);
        java.lang.Class<?> wildcardClass87 = strArray76.getClass();
        try {
            java.lang.String str88 = grepApplication0.grepFromFiles("null input file provided", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test160");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("03-24-2019 00:07:26", "null output stream provided fail_echo_write", 10, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test161");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test162");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        java.lang.Class<?> wildcardClass37 = strArray30.getClass();
        java.lang.String str38 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication42.createFolder(strArray45);
        java.lang.String str47 = findApplication40.findFolderContent("fail_sed_write", strArray45);
        java.lang.String str48 = findApplication4.findFolderContent("null output stream provided\r\nfail_echo_write", strArray45);
        java.lang.String[] strArray55 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str56 = findApplication4.findFolderContent("null output stream provided null arguments null output stream provided", strArray55);
        try {
            java.lang.String str57 = grepApplication0.grepFromFiles("null output stream provided\r\nfail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray55);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test163");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.Class<?> wildcardClass30 = mkdirApplication2.getClass();
        java.lang.String[] strArray32 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication2.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication0.findFolderContent("", strArray32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        mkdirApplication38.createFolder(strArray55);
        java.lang.String str61 = findApplication0.findFolderContent("null input file provided", strArray55);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication83 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication86 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray89 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication86.run(strArray89, inputStream90, outputStream91);
        java.lang.String str93 = lsApplication83.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
        mkdirApplication76.createFolder(strArray89);
        java.lang.String str95 = findApplication74.findFolderContent("null output stream provided fail_echo_write", strArray89);
        java.lang.Class<?> wildcardClass96 = strArray89.getClass();
        java.lang.String str97 = findApplication63.findFolderContent("null output stream provided fail_echo_write", strArray89);
        java.lang.String str98 = findApplication0.findFolderContent("fail_echo_write\r\nhi!", strArray89);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "" + "'", str95.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "" + "'", str97.equals(""));
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "" + "'", str98.equals(""));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test164");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "", "null input file provided", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test165");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("Terminate process.", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test166");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication16.createFolder(strArray19);
        java.lang.String str21 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray19);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication24 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication24.constructResult(strArray44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        mkdirApplication56.createFolder(strArray69);
        java.lang.String str75 = findApplication54.findFolderContent("null output stream provided fail_echo_write", strArray69);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication24.run(strArray69, inputStream76, outputStream77);
        java.lang.String str79 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication80 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = findApplication80.findFolderContent("", strArray85);
        java.lang.Class<?> wildcardClass90 = strArray85.getClass();
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            lsApplication0.run(strArray85, inputStream91, outputStream92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str21.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test167");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication62.run(strArray69, inputStream70, outputStream71);
        java.lang.Class<?> wildcardClass73 = mkdirApplication62.getClass();
        java.lang.String[] strArray78 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication62.run(strArray78, inputStream79, outputStream80);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication51.run(strArray78, inputStream82, outputStream83);
        java.lang.String str85 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            sedApplication0.run(strArray78, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str85.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test168");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        mkdirApplication5.createFolder(strArray18);
        java.lang.String str24 = findApplication3.findFolderContent("null output stream provided fail_echo_write", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication26 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication38 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        java.lang.String str51 = lsApplication38.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication27.run(strArray46, inputStream52, outputStream53);
        java.lang.String str55 = echoApplication26.constructResult(strArray46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication56.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication67.run(strArray74, inputStream75, outputStream76);
        java.lang.Class<?> wildcardClass78 = mkdirApplication67.getClass();
        java.lang.String[] strArray83 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication67.run(strArray83, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication56.run(strArray83, inputStream87, outputStream88);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        echoApplication26.run(strArray83, inputStream90, outputStream91);
        java.lang.String str93 = findApplication3.findFolderContent("fail_echo_write:\r\n\r\n\r\nhi!:", strArray83);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            dateApplication0.run(strArray83, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:30" + "'", str2.equals("03-24-2019 00:08:30"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided fail_echo_write" + "'", str55.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test169");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("Null Pointer Exception", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test170");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        java.lang.String str7 = findApplication0.findFolderContent("fail_sed_write", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.lang.Class<?> wildcardClass63 = mkdirApplication52.getClass();
        java.lang.String[] strArray68 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication52.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication41.run(strArray68, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        echoApplication11.run(strArray68, inputStream75, outputStream76);
        java.lang.String str78 = lsApplication8.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            findApplication0.run(strArray68, inputStream79, outputStream80);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null output stream provided fail_echo_write" + "'", str40.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str78.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test171");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "fail_echo_write\r\nhi!", (int) (byte) -1, "fail_echo_empty_params");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test172");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("fail_echo_write");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:30" + "'", str2.equals("03-24-2019 00:08:30"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:30" + "'", str4.equals("03-24-2019 00:08:30"));
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test173");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        mkdirApplication27.createFolder(strArray40);
        java.lang.String str46 = findApplication25.findFolderContent("null output stream provided fail_echo_write", strArray40);
        java.lang.Class<?> wildcardClass47 = strArray40.getClass();
        java.lang.String str48 = findApplication14.findFolderContent("null output stream provided fail_echo_write", strArray40);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        try {
            lsApplication0.run(strArray40, inputStream49, outputStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test174");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.String str32 = echoApplication3.constructResult(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        echoApplication3.run(strArray40, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = echoApplication3.constructResult(strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = findApplication55.findFolderContent("", strArray60);
        java.lang.String str65 = echoApplication3.constructResult(strArray60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication66.createFolder(strArray69);
        java.lang.String str71 = echoApplication3.constructResult(strArray69);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            dateApplication0.run(strArray69, inputStream72, outputStream73);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:30" + "'", str2.equals("03-24-2019 00:08:30"));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided fail_echo_write" + "'", str32.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided fail_echo_write" + "'", str54.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null output stream provided fail_echo_write" + "'", str65.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "fail_echo_write hi!" + "'", str71.equals("fail_echo_write hi!"));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test175");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided fail_echo_write", "null output stream provided fail_echo_write", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test176");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        try {
            java.lang.String str12 = catApplication0.catFiles(strArray7);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test177");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        java.lang.Class<?> wildcardClass20 = findApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        mkdirApplication25.createFolder(strArray38);
        java.lang.String str44 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        mkdirApplication58.createFolder(strArray71);
        java.lang.String str77 = findApplication47.findFolderContent("null input file provided", strArray71);
        java.lang.String str78 = lsApplication22.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication81 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = findApplication81.findFolderContent("", strArray86);
        java.lang.String str91 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        java.lang.Class<?> wildcardClass92 = strArray86.getClass();
        java.lang.String str93 = findApplication2.findFolderContent("Exception Caught", strArray86);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            catApplication0.run(strArray86, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str78.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test178");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication7 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        java.lang.String str36 = echoApplication7.constructResult(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        echoApplication7.run(strArray44, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication2.run(strArray44, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication56.createFolder(strArray59);
        java.lang.String str61 = findApplication54.findFolderContent("fail_sed_write", strArray59);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication65.createFolder(strArray68);
        java.lang.String str70 = findApplication63.findFolderContent("fail_sed_write", strArray68);
        java.lang.String str71 = findApplication54.findFolderContent("null input file provided", strArray68);
        mkdirApplication2.createFolder(strArray68);
        try {
            java.lang.String str73 = catApplication0.catFiles(strArray68);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided fail_echo_write" + "'", str36.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test179");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test180");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication16.findFolderContent("null output stream provided fail_echo_write", strArray31);
        java.lang.Class<?> wildcardClass38 = strArray31.getClass();
        java.lang.String str39 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication61 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = lsApplication61.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        mkdirApplication54.createFolder(strArray67);
        java.lang.String str73 = findApplication52.findFolderContent("null output stream provided fail_echo_write", strArray67);
        java.lang.Class<?> wildcardClass74 = strArray67.getClass();
        java.lang.String str75 = findApplication41.findFolderContent("null output stream provided fail_echo_write", strArray67);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication77 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication79.createFolder(strArray82);
        java.lang.String str84 = findApplication77.findFolderContent("fail_sed_write", strArray82);
        java.lang.String str85 = findApplication41.findFolderContent("null output stream provided\r\nfail_echo_write", strArray82);
        java.lang.String str86 = findApplication5.findFolderContent("File doesn't exist.", strArray82);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            dateApplication0.run(strArray82, inputStream87, outputStream88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:31" + "'", str2.equals("03-24-2019 00:08:31"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:31" + "'", str4.equals("03-24-2019 00:08:31"));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test181");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided fail_echo_write", "Terminate process.", (int) (byte) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test182");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test183");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.Class<?> wildcardClass32 = mkdirApplication4.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication46 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = findApplication49.findFolderContent("", strArray54);
        java.lang.String str59 = lsApplication46.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray54);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication35.run(strArray54, inputStream60, outputStream61);
        java.lang.Class<?> wildcardClass63 = mkdirApplication35.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray65, inputStream66, outputStream67);
        java.lang.String str69 = findApplication33.findFolderContent("", strArray65);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication4.run(strArray65, inputStream70, outputStream71);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        try {
            pwdApplication0.run(strArray65, inputStream73, outputStream74);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test184");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test185");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = findApplication62.findFolderContent("null input file provided", strArray86);
        java.lang.String str93 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        mkdirApplication1.createFolder(strArray86);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            grepApplication0.run(strArray86, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test186");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        echoApplication10.run(strArray47, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = echoApplication10.constructResult(strArray57);
        java.lang.String str62 = findApplication1.findFolderContent("03-24-2019 00:07:43", strArray57);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        try {
            exitApplication0.run(strArray57, inputStream63, outputStream64);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided fail_echo_write" + "'", str39.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided fail_echo_write" + "'", str61.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test187");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = sortApplication0.sortFromStdin((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test188");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("hi!", "fail_echo_write hi!", (int) (byte) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test189");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("", "fail_echo_write", (int) (short) 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test190");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        java.lang.Class<?> wildcardClass37 = mkdirApplication26.getClass();
        java.lang.String[] strArray42 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication26.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication15.run(strArray42, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication63.run(strArray70, inputStream71, outputStream72);
        java.lang.Class<?> wildcardClass74 = mkdirApplication63.getClass();
        java.lang.String[] strArray79 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication63.run(strArray79, inputStream80, outputStream81);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication52.run(strArray79, inputStream83, outputStream84);
        java.lang.String str86 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray79);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            catApplication0.run(strArray79, inputStream87, outputStream88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str12.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str49.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str86.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test191");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("Exception Caught", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream4);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test192");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication35.findFolderContent("null output stream provided fail_echo_write", strArray50);
        java.lang.Class<?> wildcardClass57 = strArray50.getClass();
        java.lang.String str58 = findApplication24.findFolderContent("null output stream provided fail_echo_write", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication62.createFolder(strArray65);
        java.lang.String str67 = findApplication60.findFolderContent("fail_sed_write", strArray65);
        java.lang.String str68 = findApplication24.findFolderContent("null output stream provided\r\nfail_echo_write", strArray65);
        java.lang.String str69 = findApplication1.findFolderContent("Could not write to output stream", strArray65);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            exitApplication0.run(strArray65, inputStream70, outputStream71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test193");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass6 = lsApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication37.createFolder(strArray40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication9.run(strArray40, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication69.run(strArray76, inputStream77, outputStream78);
        java.lang.Class<?> wildcardClass80 = mkdirApplication69.getClass();
        java.lang.String[] strArray85 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication69.run(strArray85, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication58.run(strArray85, inputStream89, outputStream90);
        java.lang.String str92 = lsApplication45.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray85);
        mkdirApplication9.createFolder(strArray85);
        java.lang.String str94 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray85);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            pwdApplication0.run(strArray85, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str92.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:" + "'", str94.equals("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:"));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test194");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = findApplication30.findFolderContent("fail_sed_write", strArray35);
        java.lang.String str38 = findApplication21.findFolderContent("null input file provided", strArray35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication65 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = findApplication65.findFolderContent("", strArray70);
        java.lang.String str75 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication51.run(strArray70, inputStream76, outputStream77);
        java.lang.String str79 = findApplication40.findFolderContent("Could not read stream", strArray70);
        java.lang.String str80 = findApplication21.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray70);
        java.lang.String str81 = findApplication2.findFolderContent("File is null.", strArray70);
        mkdirApplication1.createFolder(strArray70);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            exitApplication0.run(strArray70, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test195");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication5.createFolder(strArray8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication5.createFolder(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication34.createFolder(strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication71 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = findApplication71.findFolderContent("", strArray76);
        java.lang.String str81 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication57.run(strArray76, inputStream82, outputStream83);
        java.lang.String str85 = findApplication46.findFolderContent("Could not read stream", strArray76);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication39.run(strArray76, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication34.run(strArray76, inputStream89, outputStream90);
        java.lang.Class<?> wildcardClass92 = strArray76.getClass();
        mkdirApplication5.createFolder(strArray76);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            dateApplication0.run(strArray76, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:32" + "'", str2.equals("03-24-2019 00:08:32"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:32" + "'", str4.equals("03-24-2019 00:08:32"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test196");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("hi!", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream4);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test197");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        java.lang.Class<?> wildcardClass14 = mkdirApplication3.getClass();
        java.lang.String[] strArray19 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication3.run(strArray19, inputStream20, outputStream21);
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        try {
            pwdApplication0.run(strArray19, inputStream23, outputStream24);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test198");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        java.lang.Class<?> wildcardClass22 = mkdirApplication11.getClass();
        java.lang.Class<?> wildcardClass23 = mkdirApplication11.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication31 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication31.constructResult(strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication31.run(strArray68, inputStream72, outputStream73);
        mkdirApplication24.createFolder(strArray68);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication11.run(strArray68, inputStream76, outputStream77);
        mkdirApplication4.createFolder(strArray68);
        try {
            java.lang.String str80 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray68);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided fail_echo_write" + "'", str60.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray68);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test199");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "C:\\", 0, "fail_echo_write\r\nhi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test200");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        java.lang.Class<?> wildcardClass14 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication22 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = echoApplication22.constructResult(strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        echoApplication22.run(strArray59, inputStream63, outputStream64);
        mkdirApplication15.createFolder(strArray59);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication2.run(strArray59, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            wcApplication0.run(strArray59, inputStream70, outputStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided fail_echo_write" + "'", str51.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test201");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided:\r\n\r\n\r\nfail_echo_write:", "File is null.", (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test202");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null input file provided", "C:\\", (int) (short) 1, "C:\\");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test203");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("Exception Caught");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:32" + "'", str2.equals("03-24-2019 00:08:32"));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test204");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        java.lang.Class<?> wildcardClass22 = mkdirApplication11.getClass();
        java.lang.String[] strArray27 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication11.run(strArray27, inputStream28, outputStream29);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication0.run(strArray27, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication66 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = findApplication66.findFolderContent("", strArray71);
        java.lang.String str76 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication52.run(strArray71, inputStream77, outputStream78);
        java.lang.String str80 = findApplication41.findFolderContent("Could not read stream", strArray71);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication34.run(strArray71, inputStream81, outputStream82);
        mkdirApplication0.createFolder(strArray71);
        java.lang.Class<?> wildcardClass85 = mkdirApplication0.getClass();
        java.lang.Class<?> wildcardClass86 = mkdirApplication0.getClass();
        java.lang.Class<?> wildcardClass87 = mkdirApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str76.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test205");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        mkdirApplication34.createFolder(strArray47);
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication34.run(strArray56, inputStream57, outputStream58);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        echoApplication4.run(strArray56, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication63 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication64.run(strArray71, inputStream72, outputStream73);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication75 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication78 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = findApplication78.findFolderContent("", strArray83);
        java.lang.String str88 = lsApplication75.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication64.run(strArray83, inputStream89, outputStream90);
        java.lang.String str92 = echoApplication63.constructResult(strArray83);
        java.lang.String str93 = echoApplication4.constructResult(strArray83);
        try {
            java.lang.String str94 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str88.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "null output stream provided fail_echo_write" + "'", str92.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided fail_echo_write" + "'", str93.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test206");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("hi!", "", 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test207");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read stream", "fail_echo_write hi!", 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test208");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.String str32 = echoApplication3.constructResult(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication44.getClass();
        java.lang.String[] strArray60 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication44.run(strArray60, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication33.run(strArray60, inputStream64, outputStream65);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        echoApplication3.run(strArray60, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray60);
        java.lang.String[] strArray71 = null;
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            lsApplication0.run(strArray71, inputStream72, outputStream73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided fail_echo_write" + "'", str32.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str70.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test209");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication43.run(strArray62, inputStream68, outputStream69);
        java.lang.String str71 = findApplication32.findFolderContent("Could not read stream", strArray62);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication25.run(strArray62, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication20.run(strArray62, inputStream75, outputStream76);
        java.lang.Class<?> wildcardClass78 = strArray62.getClass();
        java.lang.String str79 = findApplication11.findFolderContent("", strArray62);
        mkdirApplication4.createFolder(strArray62);
        java.lang.Class<?> wildcardClass81 = strArray62.getClass();
        java.lang.String str82 = findApplication1.findFolderContent("File is null.", strArray62);
        try {
            java.lang.String str83 = catApplication0.catFiles(strArray62);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test210");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        java.lang.Class<?> wildcardClass39 = mkdirApplication28.getClass();
        java.lang.String[] strArray44 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication28.run(strArray44, inputStream45, outputStream46);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication17.run(strArray44, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication4.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray44);
        try {
            java.lang.String str52 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str51.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test211");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Terminate process.", "File is null.", (int) (byte) 10, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test212");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = sortApplication0.sortFromStdin((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test213");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write:\r\n\r\n\r\nhi!:", "fail_echo_empty_params", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test214");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = findApplication25.findFolderContent("null input file provided", strArray49);
        java.lang.String str56 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray49);
        java.lang.Class<?> wildcardClass57 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        try {
            lsApplication0.run(strArray61, inputStream65, outputStream66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str56.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test215");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.lang.String str68 = lsApplication21.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication81 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = lsApplication81.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        mkdirApplication74.createFolder(strArray87);
        java.lang.String str93 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        java.lang.String str94 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray87);
        java.lang.String str95 = findApplication2.findFolderContent("03-24-2019 00:07:43", strArray87);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            wcApplication0.run(strArray87, inputStream96, outputStream97);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str68.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str94.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "" + "'", str95.equals(""));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test216");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        java.lang.Class<?> wildcardClass39 = mkdirApplication28.getClass();
        java.lang.String[] strArray44 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication28.run(strArray44, inputStream45, outputStream46);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication17.run(strArray44, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication4.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray44);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        echoApplication3.run(strArray44, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            pwdApplication0.run(strArray44, inputStream55, outputStream56);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str51.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test217");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        java.lang.Class<?> wildcardClass21 = mkdirApplication10.getClass();
        java.lang.String[] strArray26 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication10.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = findApplication30.findFolderContent("fail_sed_write", strArray35);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication10.run(strArray35, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        mkdirApplication44.createFolder(strArray57);
        java.lang.String str63 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication66 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication75 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = lsApplication75.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray81);
        mkdirApplication68.createFolder(strArray81);
        java.lang.String str87 = findApplication66.findFolderContent("null output stream provided fail_echo_write", strArray81);
        java.lang.String str88 = lsApplication41.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray81);
        mkdirApplication10.createFolder(strArray81);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            cdApplication0.run(strArray81, inputStream90, outputStream91);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str88.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test218");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("03-24-2019 00:07:26", "null output stream provided\r\nfail_echo_write", (int) '#', "null output stream provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test219");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        java.lang.Class<?> wildcardClass26 = mkdirApplication15.getClass();
        java.lang.String[] strArray31 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication15.run(strArray31, inputStream32, outputStream33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication4.run(strArray31, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication56.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.String str79 = findApplication70.findFolderContent("", strArray75);
        java.lang.String str80 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication56.run(strArray75, inputStream81, outputStream82);
        java.lang.String str84 = findApplication45.findFolderContent("Could not read stream", strArray75);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication38.run(strArray75, inputStream85, outputStream86);
        mkdirApplication4.createFolder(strArray75);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            pwdApplication0.run(strArray75, inputStream89, outputStream90);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test220");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test221");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = findApplication62.findFolderContent("null input file provided", strArray86);
        java.lang.String str93 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        mkdirApplication1.createFolder(strArray86);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            catApplication0.run(strArray86, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test222");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Terminate process.", "null arguments", (int) (byte) 0, "Could not write to output stream");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test223");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication82 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = findApplication82.findFolderContent("", strArray87);
        java.lang.Class<?> wildcardClass92 = strArray87.getClass();
        try {
            java.lang.String str93 = grepApplication0.grepFromFiles("null output stream provided:\r\n\r\n\r\nfail_echo_write:", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test224");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo", "Null Pointer Exception", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test225");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("hi!", "", (int) (short) -1, "File doesn't exist.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test226");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test227");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("", "Null Pointer Exception", (int) (short) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test228");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass1 = findApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        mkdirApplication5.createFolder(strArray18);
        java.lang.String str24 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication27.findFolderContent("", strArray32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        mkdirApplication38.createFolder(strArray51);
        java.lang.String str57 = findApplication27.findFolderContent("null input file provided", strArray51);
        java.lang.String str58 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray51);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        try {
            findApplication0.run(strArray51, inputStream59, outputStream60);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str58.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test229");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.lang.String str38 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication41.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication41.run(strArray73, inputStream83, outputStream84);
        java.lang.String str86 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.lang.String str87 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            wcApplication0.run(strArray73, inputStream88, outputStream89);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str38.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null output stream provided fail_echo_write" + "'", str82.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str86.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str87.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test230");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("03-24-2019 00:07:26", "fail_echo_write", (int) (short) 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test231");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String str71 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray61);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            lsApplication0.run(strArray61, inputStream72, outputStream73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str71.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test232");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.Class<?> wildcardClass32 = mkdirApplication4.getClass();
        java.lang.String[] strArray34 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication4.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication2.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        mkdirApplication40.createFolder(strArray57);
        java.lang.String str63 = findApplication2.findFolderContent("null input file provided", strArray57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        java.lang.String str76 = findApplication2.findFolderContent("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", strArray71);
        try {
            java.lang.String str77 = catApplication0.catFiles(strArray71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test233");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication7 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        java.lang.String str36 = echoApplication7.constructResult(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication48.run(strArray55, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = mkdirApplication48.getClass();
        java.lang.String[] strArray64 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication48.run(strArray64, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication37.run(strArray64, inputStream68, outputStream69);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        echoApplication7.run(strArray64, inputStream71, outputStream72);
        java.lang.String str74 = findApplication5.findFolderContent("fail_echo_write hi!", strArray64);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            dateApplication0.run(strArray64, inputStream75, outputStream76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:34" + "'", str2.equals("03-24-2019 00:08:34"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:34" + "'", str4.equals("03-24-2019 00:08:34"));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided fail_echo_write" + "'", str36.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test234");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        mkdirApplication5.createFolder(strArray18);
        java.lang.String str24 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        mkdirApplication29.createFolder(strArray42);
        java.lang.String str48 = findApplication27.findFolderContent("null output stream provided fail_echo_write", strArray42);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        try {
            catApplication0.run(strArray42, inputStream50, outputStream51);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str49.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test235");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        java.lang.String str17 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication36.createFolder(strArray39);
        java.lang.String str41 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication44.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication56 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication71 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = findApplication71.findFolderContent("", strArray76);
        java.lang.String str81 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication57.run(strArray76, inputStream82, outputStream83);
        java.lang.String str85 = echoApplication56.constructResult(strArray76);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication44.run(strArray76, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray76);
        java.lang.String str90 = lsApplication4.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray76);
        try {
            java.lang.String str91 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str41.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "null output stream provided fail_echo_write" + "'", str85.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str90.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test236");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write:\r\n\r\n\r\nhi!:", "null output stream provided null arguments null output stream provided", (int) ' ', "fail_echo_write");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test237");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        mkdirApplication27.createFolder(strArray40);
        java.lang.String str46 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = findApplication49.findFolderContent("", strArray54);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        mkdirApplication60.createFolder(strArray73);
        java.lang.String str79 = findApplication49.findFolderContent("null input file provided", strArray73);
        java.lang.String str80 = lsApplication24.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray73);
        java.lang.String str81 = findApplication1.findFolderContent("Terminate process.", strArray73);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            dateApplication0.run(strArray73, inputStream82, outputStream83);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str80.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test238");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory", "This is a directory", 0, "hi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test239");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication8.createFolder(strArray11);
        java.lang.String str13 = findApplication6.findFolderContent("fail_sed_write", strArray11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        java.lang.String str22 = findApplication15.findFolderContent("fail_sed_write", strArray20);
        java.lang.String str23 = findApplication6.findFolderContent("null input file provided", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication47 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        java.lang.String str60 = lsApplication47.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication36.run(strArray55, inputStream61, outputStream62);
        java.lang.String str64 = findApplication25.findFolderContent("Could not read stream", strArray55);
        java.lang.String str65 = findApplication6.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray55);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        try {
            cdApplication0.run(strArray55, inputStream66, outputStream67);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "" + "'", str59.equals(""));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test240");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory Could not read stream Null Pointer Exception Exception Caught", "Could not read stream", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test241");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication7.run(strArray44, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication2.run(strArray44, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication60.run(strArray67, inputStream68, outputStream69);
        java.lang.Class<?> wildcardClass71 = mkdirApplication60.getClass();
        java.lang.String[] strArray76 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication60.run(strArray76, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication2.run(strArray76, inputStream80, outputStream81);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            pwdApplication0.run(strArray76, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test242");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test243");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("This is a directory", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test244");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        java.lang.String str15 = findApplication6.findFolderContent("", strArray11);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication6.findFolderContent("null input file provided", strArray30);
        java.lang.String str37 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray30);
        java.lang.Class<?> wildcardClass38 = strArray30.getClass();
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        try {
            cdApplication0.run(strArray30, inputStream39, outputStream40);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test245");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        java.lang.Class<?> wildcardClass28 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication29.createFolder(strArray32);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication2.run(strArray32, inputStream34, outputStream35);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        try {
            sortApplication0.run(strArray32, inputStream37, outputStream38);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test246");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        mkdirApplication21.createFolder(strArray34);
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication21.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        java.lang.Class<?> wildcardClass69 = mkdirApplication58.getClass();
        java.lang.String[] strArray74 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication58.run(strArray74, inputStream75, outputStream76);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication47.run(strArray74, inputStream78, outputStream79);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication21.run(strArray74, inputStream81, outputStream82);
        java.lang.String str84 = findApplication2.findFolderContent("fail_echo_empty_params", strArray74);
        java.lang.Class<?> wildcardClass85 = strArray74.getClass();
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            catApplication0.run(strArray74, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test247");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        java.lang.Class<?> wildcardClass37 = strArray30.getClass();
        java.lang.String str38 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication42.createFolder(strArray45);
        java.lang.String str47 = findApplication40.findFolderContent("fail_sed_write", strArray45);
        java.lang.String str48 = findApplication4.findFolderContent("null output stream provided\r\nfail_echo_write", strArray45);
        java.lang.String str49 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        try {
            java.lang.String str50 = catApplication0.catFiles(strArray45);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str49.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test248");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication13 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        java.lang.String str38 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication14.run(strArray33, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication13.constructResult(strArray33);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication1.run(strArray33, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            exitApplication0.run(strArray33, inputStream46, outputStream47);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null output stream provided fail_echo_write" + "'", str42.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test249");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication14 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        java.lang.String str39 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication15.run(strArray34, inputStream40, outputStream41);
        java.lang.String str43 = echoApplication14.constructResult(strArray34);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication2.run(strArray34, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        try {
            wcApplication0.run(strArray34, inputStream47, outputStream48);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided fail_echo_write" + "'", str43.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test250");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        java.lang.Class<?> wildcardClass22 = mkdirApplication11.getClass();
        java.lang.Class<?> wildcardClass23 = mkdirApplication11.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication31 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication31.constructResult(strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication31.run(strArray68, inputStream72, outputStream73);
        mkdirApplication24.createFolder(strArray68);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication11.run(strArray68, inputStream76, outputStream77);
        mkdirApplication4.createFolder(strArray68);
        try {
            java.lang.String str80 = grepApplication0.grepFromFiles("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray68);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided fail_echo_write" + "'", str60.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray68);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test251");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        java.lang.String str93 = findApplication1.findFolderContent("fail_sed_write", strArray73);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            wcApplication0.run(strArray73, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test252");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write:\r\n\r\n\r\nhi!:", "C:\\", "hi!" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        try {
            catApplication0.run(strArray5, inputStream6, outputStream7);
            org.junit.Assert.fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 15: fail_echo_write:\r\n\r\n\r\nhi!:");
        } catch (java.nio.file.InvalidPathException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test253");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass10 = lsApplication9.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray28);
        java.lang.Class<?> wildcardClass35 = strArray28.getClass();
        java.lang.String str36 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        try {
            cdApplication0.run(strArray28, inputStream37, outputStream38);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test254");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication1.createFolder(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        java.lang.String str54 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication30.run(strArray49, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication58.createFolder(strArray61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication30.run(strArray61, inputStream63, outputStream64);
        java.lang.String[] strArray71 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication30.createFolder(strArray71);
        mkdirApplication1.createFolder(strArray71);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        try {
            exitApplication0.run(strArray71, inputStream74, outputStream75);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test255");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        try {
            cdApplication0.changeToDirectory("hi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test256");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo", "fail_echo_empty_params", (int) (short) 1, "null input file provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test257");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("C:\\", "null output stream provided\r\nfail_echo_write", 10, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unexpected internal error near index 3\r\nC:\\");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test258");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("fail_echo_write:\r\n\r\n\r\nhi!:");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:35" + "'", str2.equals("03-24-2019 00:08:35"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:35" + "'", str4.equals("03-24-2019 00:08:35"));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test259");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("fail_echo_empty_params");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:35" + "'", str2.equals("03-24-2019 00:08:35"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:35" + "'", str4.equals("03-24-2019 00:08:35"));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test260");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication11.findFolderContent("null output stream provided fail_echo_write", strArray26);
        java.lang.Class<?> wildcardClass33 = strArray26.getClass();
        java.lang.String str34 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication47 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        java.lang.String str60 = lsApplication47.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication36.run(strArray55, inputStream61, outputStream62);
        java.lang.Class<?> wildcardClass64 = mkdirApplication36.getClass();
        java.lang.String[] strArray66 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication36.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = findApplication0.findFolderContent("Could not read stream", strArray66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        java.lang.String str83 = findApplication74.findFolderContent("", strArray79);
        java.lang.String str84 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication87 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray90 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication87.createFolder(strArray90);
        java.lang.String str92 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray90);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            findApplication0.run(strArray90, inputStream93, outputStream94);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "" + "'", str59.equals(""));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str84.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str92.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test261");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided", "fail_echo_write", 0, "");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test262");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        mkdirApplication56.createFolder(strArray69);
        java.lang.String str75 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication1.run(strArray69, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray69.getClass();
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            dateApplication0.run(strArray69, inputStream80, outputStream81);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided fail_echo_write" + "'", str52.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test263");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("null output stream provided\r\nfail_echo_write");
            org.junit.Assert.fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <\r> at index 27: null output stream provided\r\nfail_echo_write\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test264");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write:\r\n\r\n\r\nhi!:", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) ' ', inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test265");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        try {
            sedApplication0.run(strArray28, inputStream36, outputStream37);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test266");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test267");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_write:\r\n\r\n\r\nhi!:");
            org.junit.Assert.fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 15: fail_echo_write:\r\n\r\n\r\nhi!:\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test268");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        try {
            wcApplication0.run(strArray4, inputStream8, outputStream9);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test269");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_sed_write", "This is a directory", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test270");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        java.lang.String str93 = findApplication2.findFolderContent("Exception Caught", strArray73);
        java.lang.Class<?> wildcardClass94 = strArray73.getClass();
        java.lang.Class<?> wildcardClass95 = strArray73.getClass();
        try {
            java.lang.String str96 = catApplication0.catFiles(strArray73);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test271");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = findApplication9.findFolderContent("", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication20.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        java.lang.String str44 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication20.run(strArray39, inputStream45, outputStream46);
        java.lang.String str48 = findApplication9.findFolderContent("Could not read stream", strArray39);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication2.run(strArray39, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication2.getClass();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication2.createFolder(strArray54);
        java.lang.Class<?> wildcardClass56 = strArray54.getClass();
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            sortApplication0.run(strArray54, inputStream57, outputStream58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test272");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.String str29 = echoApplication0.constructResult(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        echoApplication0.run(strArray37, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = echoApplication0.constructResult(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = findApplication52.findFolderContent("", strArray57);
        java.lang.String str62 = echoApplication0.constructResult(strArray57);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication63.createFolder(strArray66);
        java.lang.String str68 = echoApplication0.constructResult(strArray66);
        java.lang.Class<?> wildcardClass69 = echoApplication0.getClass();
        java.lang.Class<?> wildcardClass70 = echoApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided fail_echo_write" + "'", str29.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided fail_echo_write" + "'", str51.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null output stream provided fail_echo_write" + "'", str62.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "fail_echo_write hi!" + "'", str68.equals("fail_echo_write hi!"));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test273");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_write hi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_echo_write hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test274");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("", "fail_echo_write:\r\n\r\n\r\nhi!:", (int) (byte) 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test275");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:36" + "'", str2.equals("03-24-2019 00:08:36"));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test276");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Exception Caught");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Exception Caught: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test277");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        java.lang.String str18 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray13);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication21 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = echoApplication21.constructResult(strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication62.run(strArray69, inputStream70, outputStream71);
        java.lang.Class<?> wildcardClass73 = mkdirApplication62.getClass();
        java.lang.String[] strArray78 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication62.run(strArray78, inputStream79, outputStream80);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication51.run(strArray78, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        echoApplication21.run(strArray78, inputStream85, outputStream86);
        java.lang.String str88 = lsApplication5.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            dateApplication0.run(strArray78, inputStream89, outputStream90);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:36" + "'", str2.equals("03-24-2019 00:08:36"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:36" + "'", str4.equals("03-24-2019 00:08:36"));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null output stream provided fail_echo_write" + "'", str50.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str88.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test278");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided fail_echo_write", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", 1, "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test279");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication12.createFolder(strArray25);
        java.lang.String str31 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        mkdirApplication45.createFolder(strArray58);
        java.lang.String str64 = findApplication34.findFolderContent("null input file provided", strArray58);
        java.lang.String str65 = lsApplication9.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray58);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication77 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication77.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication70.createFolder(strArray83);
        java.lang.String str89 = findApplication68.findFolderContent("null output stream provided fail_echo_write", strArray83);
        java.lang.String str90 = lsApplication9.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray83);
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            pwdApplication0.run(strArray83, inputStream91, outputStream92);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\" + "'", str6.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "C:\\" + "'", str7.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "C:\\" + "'", str8.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str65.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str90.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test280");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        mkdirApplication56.createFolder(strArray69);
        java.lang.String str75 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication1.run(strArray69, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray69.getClass();
        try {
            java.lang.String str80 = catApplication0.catFiles(strArray69);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided fail_echo_write" + "'", str52.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test281");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test282");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("03-24-2019 00:07:43");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:36" + "'", str2.equals("03-24-2019 00:08:36"));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test283");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        try {
            wcApplication0.run(strArray7, inputStream12, outputStream13);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test284");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        java.lang.String str15 = findApplication6.findFolderContent("", strArray11);
        java.lang.String str16 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication35.createFolder(strArray38);
        java.lang.String str40 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        java.lang.Class<?> wildcardClass54 = mkdirApplication43.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication55 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication56.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.String str79 = findApplication70.findFolderContent("", strArray75);
        java.lang.String str80 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication56.run(strArray75, inputStream81, outputStream82);
        java.lang.String str84 = echoApplication55.constructResult(strArray75);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication43.run(strArray75, inputStream85, outputStream86);
        java.lang.String str88 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray75);
        java.lang.String str89 = lsApplication3.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            dateApplication0.run(strArray75, inputStream90, outputStream91);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:36" + "'", str2.equals("03-24-2019 00:08:36"));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str16.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str40.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "null output stream provided fail_echo_write" + "'", str84.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str88.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str89.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test285");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication7 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        java.lang.String str36 = echoApplication7.constructResult(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = echoApplication7.constructResult(strArray44);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        try {
            pwdApplication0.run(strArray44, inputStream49, outputStream50);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\" + "'", str2.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\" + "'", str6.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided fail_echo_write" + "'", str36.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str48.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test286");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", "fail_echo_empty_params", (int) ' ', "C:\\");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test287");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null arguments", "Could not read file", (int) ' ', "");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test288");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication5.createFolder(strArray8);
        java.lang.String str10 = findApplication3.findFolderContent("fail_sed_write", strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication46 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = findApplication49.findFolderContent("", strArray54);
        java.lang.String str59 = lsApplication46.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray54);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication35.run(strArray54, inputStream60, outputStream61);
        java.lang.String str63 = findApplication24.findFolderContent("Could not read stream", strArray54);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication17.run(strArray54, inputStream64, outputStream65);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication12.run(strArray54, inputStream67, outputStream68);
        java.lang.Class<?> wildcardClass70 = strArray54.getClass();
        java.lang.String str71 = findApplication3.findFolderContent("", strArray54);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            dateApplication0.run(strArray54, inputStream72, outputStream73);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:37" + "'", str2.equals("03-24-2019 00:08:37"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test289");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null arguments", "03-24-2019 00:07:26", (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test290");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("", "Could not read stream", 1, "fail_echo");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test291");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.Class<?> wildcardClass13 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.String str60 = findApplication21.findFolderContent("Could not read stream", strArray51);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication14.run(strArray51, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication64 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication73 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        java.lang.String str83 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        mkdirApplication66.createFolder(strArray79);
        java.lang.String str85 = findApplication64.findFolderContent("null output stream provided fail_echo_write", strArray79);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication14.run(strArray79, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray79.getClass();
        java.lang.Class<?> wildcardClass90 = strArray79.getClass();
        mkdirApplication1.createFolder(strArray79);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            cdApplication0.run(strArray79, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str83.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test292");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not write to output stream", "Could not read stream", 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test293");
        boolean boolean1 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.isSpecialSymbol("fail_echo_empty_params");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test294");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("Terminate process.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:37" + "'", str2.equals("03-24-2019 00:08:37"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:37" + "'", str4.equals("03-24-2019 00:08:37"));
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test295");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        try {
            java.lang.String str93 = grepApplication0.grepFromFiles("null output stream provided null arguments null output stream provided", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray73);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test296");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication9.createFolder(strArray12);
        java.lang.String str14 = findApplication7.findFolderContent("fail_sed_write", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication18.createFolder(strArray21);
        java.lang.String str23 = findApplication16.findFolderContent("fail_sed_write", strArray21);
        java.lang.String str24 = findApplication7.findFolderContent("null input file provided", strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication26.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication63.run(strArray70, inputStream71, outputStream72);
        java.lang.Class<?> wildcardClass74 = mkdirApplication63.getClass();
        java.lang.String[] strArray79 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication63.run(strArray79, inputStream80, outputStream81);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication52.run(strArray79, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication26.run(strArray79, inputStream86, outputStream87);
        java.lang.String str89 = findApplication7.findFolderContent("fail_echo_empty_params", strArray79);
        java.lang.Class<?> wildcardClass90 = strArray79.getClass();
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            pwdApplication0.run(strArray79, inputStream91, outputStream92);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\" + "'", str6.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test297");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught");
            org.junit.Assert.fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <\r> at index 19: This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test298");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication29.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        java.lang.String str53 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication29.run(strArray48, inputStream54, outputStream55);
        java.lang.String str57 = findApplication18.findFolderContent("Could not read stream", strArray48);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication11.run(strArray48, inputStream58, outputStream59);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication6.run(strArray48, inputStream61, outputStream62);
        java.lang.Class<?> wildcardClass64 = strArray48.getClass();
        mkdirApplication5.createFolder(strArray48);
        try {
            java.lang.String str66 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test299");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Null Pointer Exception", "Terminate process.", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test300");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("hi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test301");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication13 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        java.lang.String str38 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication14.run(strArray33, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication13.constructResult(strArray33);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication1.run(strArray33, inputStream43, outputStream44);
        java.lang.Class<?> wildcardClass46 = strArray33.getClass();
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        try {
            exitApplication0.run(strArray33, inputStream47, outputStream48);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null output stream provided fail_echo_write" + "'", str42.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test302");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("hi!", "fail_echo_write:\r\n\r\n\r\nhi!:", (int) (short) 1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test303");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        mkdirApplication56.createFolder(strArray69);
        java.lang.String str75 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication1.run(strArray69, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray69.getClass();
        java.lang.Class<?> wildcardClass80 = strArray69.getClass();
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            exitApplication0.run(strArray69, inputStream81, outputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided fail_echo_write" + "'", str52.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test304");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.lang.String[] strArray82 = null;
        try {
            java.lang.String str83 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test305");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = strArray43.getClass();
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        try {
            sedApplication0.run(strArray43, inputStream60, outputStream61);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test306");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication38 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        java.lang.String str51 = lsApplication38.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication27.run(strArray46, inputStream52, outputStream53);
        java.lang.String str55 = findApplication16.findFolderContent("Could not read stream", strArray46);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication9.run(strArray46, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication4.run(strArray46, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication62.run(strArray69, inputStream70, outputStream71);
        java.lang.Class<?> wildcardClass73 = mkdirApplication62.getClass();
        java.lang.String[] strArray78 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication62.run(strArray78, inputStream79, outputStream80);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication4.run(strArray78, inputStream82, outputStream83);
        try {
            java.lang.String str85 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test307");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("This is a directory Could not read stream Null Pointer Exception Exception Caught", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test308");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided:\r\n\r\n\r\nfail_echo_write:", "Could not read stream", 0, "");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test309");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication16.findFolderContent("null output stream provided fail_echo_write", strArray31);
        java.lang.Class<?> wildcardClass38 = strArray31.getClass();
        java.lang.String str39 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication41.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication41.run(strArray73, inputStream83, outputStream84);
        java.lang.String str86 = findApplication5.findFolderContent("Null Pointer Exception", strArray73);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            dateApplication0.run(strArray73, inputStream87, outputStream88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:38" + "'", str2.equals("03-24-2019 00:08:38"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:38" + "'", str4.equals("03-24-2019 00:08:38"));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null output stream provided fail_echo_write" + "'", str82.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test310");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = findApplication42.findFolderContent("Could not read stream", strArray72);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication35.run(strArray72, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication30.run(strArray72, inputStream85, outputStream86);
        java.lang.Class<?> wildcardClass88 = strArray72.getClass();
        java.lang.String str89 = findApplication21.findFolderContent("", strArray72);
        mkdirApplication14.createFolder(strArray72);
        mkdirApplication3.createFolder(strArray72);
        java.lang.String str92 = findApplication1.findFolderContent("Exception Caught", strArray72);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            sedApplication0.run(strArray72, inputStream93, outputStream94);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test311");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication3.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        mkdirApplication29.createFolder(strArray42);
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication29.run(strArray51, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication3.run(strArray51, inputStream55, outputStream56);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            dateApplication0.run(strArray51, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:38" + "'", str2.equals("03-24-2019 00:08:38"));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test312");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        mkdirApplication32.createFolder(strArray45);
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication32.run(strArray54, inputStream55, outputStream56);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        echoApplication2.run(strArray54, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication61 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication62.run(strArray69, inputStream70, outputStream71);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication73 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication76 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = findApplication76.findFolderContent("", strArray81);
        java.lang.String str86 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray81);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication62.run(strArray81, inputStream87, outputStream88);
        java.lang.String str90 = echoApplication61.constructResult(strArray81);
        java.lang.String str91 = echoApplication2.constructResult(strArray81);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            catApplication0.run(strArray81, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str86.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided fail_echo_write" + "'", str90.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided fail_echo_write" + "'", str91.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test313");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        mkdirApplication49.createFolder(strArray62);
        java.lang.String str68 = findApplication38.findFolderContent("null input file provided", strArray62);
        java.lang.String str69 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray62);
        java.lang.String str70 = echoApplication5.constructResult(strArray62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        java.lang.String str83 = findApplication74.findFolderContent("", strArray79);
        java.lang.String str84 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        java.lang.Class<?> wildcardClass85 = strArray79.getClass();
        java.lang.String str86 = echoApplication5.constructResult(strArray79);
        try {
            java.lang.String str87 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray79);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null output stream provided fail_echo_write" + "'", str70.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str84.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null output stream provided fail_echo_write" + "'", str86.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test314");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write\r\nhi!", "hi!", (int) (byte) 1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test315");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.lang.String[] strArray75 = null;
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            wcApplication0.run(strArray75, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test316");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Terminate process.", "null output stream provided\r\nfail_echo_write", 0, "fail_echo_empty_params");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test317");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication75 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = lsApplication75.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray81);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            wcApplication0.run(strArray81, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test318");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication8.createFolder(strArray11);
        java.lang.String str13 = findApplication6.findFolderContent("fail_sed_write", strArray11);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication15.createFolder(strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication27.findFolderContent("", strArray32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = findApplication52.findFolderContent("", strArray57);
        java.lang.String str62 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication38.run(strArray57, inputStream63, outputStream64);
        java.lang.String str66 = findApplication27.findFolderContent("Could not read stream", strArray57);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication20.run(strArray57, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication15.run(strArray57, inputStream70, outputStream71);
        java.lang.Class<?> wildcardClass73 = strArray57.getClass();
        java.lang.String str74 = findApplication6.findFolderContent("", strArray57);
        java.lang.String str75 = findApplication4.findFolderContent("", strArray57);
        try {
            java.lang.String str76 = grepApplication0.grepFromFiles("hi!", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray57);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test319");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = findApplication38.findFolderContent("Could not read stream", strArray68);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication31.run(strArray68, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = mkdirApplication31.getClass();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication31.createFolder(strArray83);
        java.lang.String str85 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication2.createFolder(strArray83);
        try {
            java.lang.String str87 = catApplication0.catFiles(strArray83);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test320");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        try {
            cdApplication0.changeToDirectory("null input file provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\null input file provided: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test321");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("Could not read stream");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:38" + "'", str2.equals("03-24-2019 00:08:38"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:38" + "'", str4.equals("03-24-2019 00:08:38"));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test322");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication83 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication86 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray89 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication86.run(strArray89, inputStream90, outputStream91);
        java.lang.String str93 = lsApplication83.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
        mkdirApplication76.createFolder(strArray89);
        java.lang.String str95 = findApplication74.findFolderContent("null output stream provided fail_echo_write", strArray89);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            grepApplication0.run(strArray89, inputStream96, outputStream97);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "" + "'", str95.equals(""));
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test323");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        mkdirApplication6.createFolder(strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        try {
            pwdApplication0.run(strArray23, inputStream29, outputStream30);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test324");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication1.createFolder(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        java.lang.String str54 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication30.run(strArray49, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication58.createFolder(strArray61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication30.run(strArray61, inputStream63, outputStream64);
        java.lang.String[] strArray71 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication30.createFolder(strArray71);
        mkdirApplication1.createFolder(strArray71);
        try {
            java.lang.String str74 = catApplication0.catFiles(strArray71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test325");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null arguments", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test326");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null input file provided", "This is a directory", 0, "null output stream provided\r\nfail_echo_write");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test327");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        java.lang.Class<?> wildcardClass78 = strArray59.getClass();
        java.lang.Class<?> wildcardClass79 = strArray59.getClass();
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            sedApplication0.run(strArray59, inputStream80, outputStream81);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test328");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", "null output stream provided fail_echo_write", (int) (short) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test329");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        java.lang.Class<?> wildcardClass15 = mkdirApplication4.getClass();
        java.lang.String[] strArray20 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication4.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication24.getClass();
        java.lang.String[] strArray54 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication24.run(strArray54, inputStream55, outputStream56);
        mkdirApplication4.createFolder(strArray54);
        try {
            java.lang.String str59 = grepApplication0.grepFromFiles("Could not read stream", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray54);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray54);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test330");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        try {
            cdApplication0.changeToDirectory("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test331");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication38 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        java.lang.String str51 = lsApplication38.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication27.run(strArray46, inputStream52, outputStream53);
        java.lang.String str55 = findApplication16.findFolderContent("Could not read stream", strArray46);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication9.run(strArray46, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication59 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        mkdirApplication61.createFolder(strArray74);
        java.lang.String str80 = findApplication59.findFolderContent("null output stream provided fail_echo_write", strArray74);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication9.run(strArray74, inputStream81, outputStream82);
        java.lang.Class<?> wildcardClass84 = strArray74.getClass();
        java.lang.Class<?> wildcardClass85 = strArray74.getClass();
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            pwdApplication0.run(strArray74, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str6.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str7.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str8.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test332");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        java.lang.Class<?> wildcardClass37 = mkdirApplication26.getClass();
        java.lang.String[] strArray42 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication26.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication15.run(strArray42, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication1.run(strArray42, inputStream50, outputStream51);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        try {
            sortApplication0.run(strArray42, inputStream53, outputStream54);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str12.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str49.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test333");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        java.lang.String str11 = findApplication4.findFolderContent("fail_sed_write", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication15.createFolder(strArray18);
        java.lang.String str20 = findApplication13.findFolderContent("fail_sed_write", strArray18);
        java.lang.String str21 = findApplication4.findFolderContent("null input file provided", strArray18);
        try {
            java.lang.String str22 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray18);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test334");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write hi!", "File doesn't exist.", "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        try {
            exitApplication0.run(strArray5, inputStream6, outputStream7);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test335");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication79.run(strArray82, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            grepApplication0.run(strArray82, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertNotNull(strArray82);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test336");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication7.run(strArray44, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication2.run(strArray44, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication81 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = lsApplication81.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        mkdirApplication74.createFolder(strArray87);
        java.lang.String str93 = findApplication63.findFolderContent("null input file provided", strArray87);
        java.lang.String str94 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray87);
        mkdirApplication2.createFolder(strArray87);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            catApplication0.run(strArray87, inputStream96, outputStream97);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str94.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test337");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Exception Caught", "null output stream provided fail_echo_write", (int) (short) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test338");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = findApplication9.findFolderContent("", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication20.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        java.lang.String str44 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication20.run(strArray39, inputStream45, outputStream46);
        java.lang.String str48 = findApplication9.findFolderContent("Could not read stream", strArray39);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication2.run(strArray39, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        mkdirApplication2.createFolder(strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        try {
            sortApplication0.run(strArray59, inputStream65, outputStream66);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test339");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication7 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        java.lang.String str36 = echoApplication7.constructResult(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        echoApplication7.run(strArray44, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication2.run(strArray44, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication75 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = lsApplication75.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray81);
        mkdirApplication68.createFolder(strArray81);
        java.lang.String str87 = findApplication57.findFolderContent("null input file provided", strArray81);
        java.lang.String str88 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray81);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication2.run(strArray81, inputStream89, outputStream90);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            pwdApplication0.run(strArray81, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided fail_echo_write" + "'", str36.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str88.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test340");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass2 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication5.run(strArray36, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.lang.String str88 = lsApplication41.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray81);
        mkdirApplication5.createFolder(strArray81);
        java.lang.String str90 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray81);
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            exitApplication0.run(strArray81, inputStream91, outputStream92);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str88.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:" + "'", str90.equals("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:"));
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test341");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test342");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        java.lang.Class<?> wildcardClass25 = mkdirApplication14.getClass();
        java.lang.String[] strArray30 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication14.run(strArray30, inputStream31, outputStream32);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication3.run(strArray30, inputStream34, outputStream35);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        try {
            dateApplication0.run(strArray30, inputStream37, outputStream38);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:39" + "'", str2.equals("03-24-2019 00:08:39"));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test343");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not write to output stream", "fail_echo_write", 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test344");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = sortApplication0.sortFromStdin((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test345");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = echoApplication2.constructResult(strArray59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication65.createFolder(strArray68);
        java.lang.String str70 = echoApplication2.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication71.createFolder(strArray74);
        java.lang.String str76 = echoApplication2.constructResult(strArray74);
        java.lang.Class<?> wildcardClass77 = strArray74.getClass();
        try {
            java.lang.String str78 = catApplication0.catFiles(strArray74);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided fail_echo_write" + "'", str64.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "fail_echo_write hi!" + "'", str70.equals("fail_echo_write hi!"));
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "fail_echo_write hi!" + "'", str76.equals("fail_echo_write hi!"));
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test346");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass6 = findApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        java.lang.String str22 = findApplication15.findFolderContent("fail_sed_write", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication58 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication61 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = findApplication61.findFolderContent("", strArray66);
        java.lang.String str71 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication47.run(strArray66, inputStream72, outputStream73);
        java.lang.String str75 = findApplication36.findFolderContent("Could not read stream", strArray66);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication29.run(strArray66, inputStream76, outputStream77);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication24.run(strArray66, inputStream79, outputStream80);
        java.lang.Class<?> wildcardClass82 = strArray66.getClass();
        java.lang.String str83 = findApplication15.findFolderContent("", strArray66);
        mkdirApplication8.createFolder(strArray66);
        java.lang.Class<?> wildcardClass85 = strArray66.getClass();
        java.lang.String str86 = findApplication5.findFolderContent("File is null.", strArray66);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            dateApplication0.run(strArray66, inputStream87, outputStream88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:40" + "'", str2.equals("03-24-2019 00:08:40"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:40" + "'", str4.equals("03-24-2019 00:08:40"));
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test347");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.String str69 = echoApplication1.constructResult(strArray68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            sedApplication0.run(strArray68, inputStream70, outputStream71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test348");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication2.run(strArray33, inputStream35, outputStream36);
        java.lang.String[] strArray43 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication2.createFolder(strArray43);
        java.lang.Class<?> wildcardClass45 = strArray43.getClass();
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            sortApplication0.run(strArray43, inputStream46, outputStream47);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test349");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        echoApplication4.run(strArray41, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = echoApplication4.constructResult(strArray51);
        try {
            java.lang.String str56 = grepApplication0.grepFromFiles("fail_echo_empty_params", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray51);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided fail_echo_write" + "'", str55.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test350");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        java.lang.String str18 = findApplication1.findFolderContent("null input file provided", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        mkdirApplication20.createFolder(strArray33);
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication20.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = mkdirApplication57.getClass();
        java.lang.String[] strArray73 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication57.run(strArray73, inputStream74, outputStream75);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication46.run(strArray73, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication20.run(strArray73, inputStream80, outputStream81);
        java.lang.String str83 = findApplication1.findFolderContent("fail_echo_empty_params", strArray73);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            wcApplication0.run(strArray73, inputStream84, outputStream85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test351");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test352");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication48.run(strArray55, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        java.lang.String str72 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication48.run(strArray67, inputStream73, outputStream74);
        java.lang.String str76 = findApplication37.findFolderContent("Could not read stream", strArray67);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication30.run(strArray67, inputStream77, outputStream78);
        java.lang.Class<?> wildcardClass80 = mkdirApplication30.getClass();
        java.lang.String[] strArray82 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication30.createFolder(strArray82);
        java.lang.String str84 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray82);
        mkdirApplication1.createFolder(strArray82);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            sedApplication0.run(strArray82, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test353");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication1.run(strArray26, inputStream29, outputStream30);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        try {
            catApplication0.run(strArray26, inputStream32, outputStream33);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test354");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("03-24-2019 00:07:43");
            org.junit.Assert.fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 13: 03-24-2019 00:07:43\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test355");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "Could not read file", (int) (byte) -1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 3\r\nC:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test356");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String str21 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.Class<?> wildcardClass50 = strArray41.getClass();
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        try {
            findApplication0.run(strArray41, inputStream51, outputStream52);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test357");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("This is a directory Could not read stream Null Pointer Exception Exception Caught");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:40" + "'", str2.equals("03-24-2019 00:08:40"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:40" + "'", str4.equals("03-24-2019 00:08:40"));
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test358");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        mkdirApplication7.createFolder(strArray20);
        java.lang.String str26 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray54);
        mkdirApplication41.createFolder(strArray54);
        java.lang.String str60 = findApplication39.findFolderContent("null output stream provided fail_echo_write", strArray54);
        java.lang.Class<?> wildcardClass61 = strArray54.getClass();
        java.lang.String str62 = findApplication28.findFolderContent("null output stream provided fail_echo_write", strArray54);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication64 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication66.createFolder(strArray69);
        java.lang.String str71 = findApplication64.findFolderContent("fail_sed_write", strArray69);
        java.lang.String str72 = findApplication28.findFolderContent("null output stream provided\r\nfail_echo_write", strArray69);
        java.lang.String str73 = findApplication5.findFolderContent("Could not write to output stream", strArray69);
        java.lang.Class<?> wildcardClass74 = strArray69.getClass();
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            cdApplication0.run(strArray69, inputStream75, outputStream76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test359");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication19.createFolder(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication56 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = findApplication56.findFolderContent("", strArray61);
        java.lang.String str66 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray61);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication42.run(strArray61, inputStream67, outputStream68);
        java.lang.String str70 = findApplication31.findFolderContent("Could not read stream", strArray61);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication24.run(strArray61, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication19.run(strArray61, inputStream74, outputStream75);
        java.lang.Class<?> wildcardClass77 = strArray61.getClass();
        java.lang.String str78 = findApplication10.findFolderContent("", strArray61);
        java.lang.String str79 = findApplication8.findFolderContent("", strArray61);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication1.run(strArray61, inputStream80, outputStream81);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray90 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        mkdirApplication83.run(strArray90, inputStream91, outputStream92);
        mkdirApplication1.createFolder(strArray90);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            sedApplication0.run(strArray90, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test360");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("03-24-2019 00:07:26", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test361");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_sed_write", "null output stream provided:\r\n\r\n\r\nfail_echo_write:", (int) (short) -1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test362");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        java.lang.Class<?> wildcardClass54 = strArray49.getClass();
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            lsApplication0.run(strArray49, inputStream55, outputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test363");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray41);
        try {
            java.lang.String str46 = catApplication0.catFiles(strArray41);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test364");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "File doesn't exist.", "null output stream provided:\r\n\r\n\r\nfail_echo_write:", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test365");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            catApplication0.run(strArray6, inputStream9, outputStream10);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test366");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        java.lang.Class<?> wildcardClass37 = mkdirApplication26.getClass();
        java.lang.String[] strArray42 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication26.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication15.run(strArray42, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication1.run(strArray42, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = echoApplication1.constructResult(strArray61);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication66.run(strArray73, inputStream74, outputStream75);
        java.lang.Class<?> wildcardClass77 = mkdirApplication66.getClass();
        java.lang.String[] strArray82 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication66.run(strArray82, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        echoApplication1.run(strArray82, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            sedApplication0.run(strArray82, inputStream89, outputStream90);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str12.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str49.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str65.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(strArray82);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test367");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided", "", (int) (byte) -1, "fail_echo_write");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test368");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        java.lang.String str18 = findApplication1.findFolderContent("null input file provided", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication44.getClass();
        java.lang.String[] strArray60 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication44.run(strArray60, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication33.run(strArray60, inputStream64, outputStream65);
        java.lang.String str67 = lsApplication20.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication70 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = lsApplication70.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        java.lang.String str93 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        java.lang.String str94 = findApplication1.findFolderContent("03-24-2019 00:07:43", strArray86);
        java.lang.Class<?> wildcardClass95 = strArray86.getClass();
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            cdApplication0.run(strArray86, inputStream96, outputStream97);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str67.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str92.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test369");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        try {
            java.lang.String str93 = grepApplication0.grepFromFiles("Exception Caught", (java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test370");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        java.lang.String str15 = findApplication6.findFolderContent("", strArray11);
        java.lang.String str16 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray11);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication19.createFolder(strArray22);
        java.lang.String str24 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray22);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication27 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        java.lang.String str52 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication28.run(strArray47, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication27.constructResult(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        mkdirApplication59.createFolder(strArray72);
        java.lang.String str78 = findApplication57.findFolderContent("null output stream provided fail_echo_write", strArray72);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        echoApplication27.run(strArray72, inputStream79, outputStream80);
        java.lang.String str82 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            dateApplication0.run(strArray72, inputStream83, outputStream84);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:41" + "'", str2.equals("03-24-2019 00:08:41"));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str16.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str24.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided fail_echo_write" + "'", str56.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str76.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test371");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication7.run(strArray44, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication2.run(strArray44, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = strArray44.getClass();
        java.lang.Class<?> wildcardClass61 = strArray44.getClass();
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            catApplication0.run(strArray44, inputStream62, outputStream63);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test372");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        java.lang.Class<?> wildcardClass15 = mkdirApplication4.getClass();
        java.lang.Class<?> wildcardClass16 = mkdirApplication4.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication24 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication24.constructResult(strArray44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication24.run(strArray61, inputStream65, outputStream66);
        mkdirApplication17.createFolder(strArray61);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication4.run(strArray61, inputStream69, outputStream70);
        try {
            java.lang.String str72 = grepApplication0.grepFromFiles("03-24-2019 00:07:43", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray61);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test373");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.lang.Class<?> wildcardClass34 = strArray27.getClass();
        java.lang.String str35 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        try {
            wcApplication0.run(strArray27, inputStream36, outputStream37);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test374");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_sed_write", "Could not read file", (int) (short) 1, "fail_echo_write\r\nhi!");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test375");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication50 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = lsApplication50.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        mkdirApplication43.createFolder(strArray56);
        java.lang.String str62 = findApplication32.findFolderContent("null input file provided", strArray56);
        java.lang.String str63 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray56);
        java.lang.Class<?> wildcardClass64 = strArray56.getClass();
        mkdirApplication1.createFolder(strArray56);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        try {
            catApplication0.run(strArray56, inputStream66, outputStream67);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test376");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("Could not write to output stream");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:41" + "'", str2.equals("03-24-2019 00:08:41"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:41" + "'", str4.equals("03-24-2019 00:08:41"));
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test377");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Null Pointer Exception");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Null Pointer Exception: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test378");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided null arguments null output stream provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", 1, "null arguments");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test379");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication13 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        java.lang.String str38 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication14.run(strArray33, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication13.constructResult(strArray33);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication1.run(strArray33, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray51, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        try {
            sedApplication0.run(strArray51, inputStream59, outputStream60);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null output stream provided fail_echo_write" + "'", str42.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test380");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("fail_echo_write\r\nhi!", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test381");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray28);
        java.lang.Class<?> wildcardClass35 = strArray28.getClass();
        java.lang.String str36 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication58 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
        mkdirApplication51.createFolder(strArray64);
        java.lang.String str70 = findApplication49.findFolderContent("null output stream provided fail_echo_write", strArray64);
        java.lang.Class<?> wildcardClass71 = strArray64.getClass();
        java.lang.String str72 = findApplication38.findFolderContent("null output stream provided fail_echo_write", strArray64);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication76.createFolder(strArray79);
        java.lang.String str81 = findApplication74.findFolderContent("fail_sed_write", strArray79);
        java.lang.String str82 = findApplication38.findFolderContent("null output stream provided\r\nfail_echo_write", strArray79);
        java.lang.String str83 = findApplication2.findFolderContent("File doesn't exist.", strArray79);
        java.lang.String str84 = echoApplication1.constructResult(strArray79);
        java.lang.String[] strArray91 = new java.lang.String[] { "Could not write to output stream", "null output stream provided null arguments null output stream provided", "03-24-2019 00:07:43", "fail_echo_write hi!", "This is a directory Could not read stream Null Pointer Exception Exception Caught", "fail_sed_write" };
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        echoApplication1.run(strArray91, inputStream92, outputStream93);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            sedApplication0.run(strArray91, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "fail_echo_write hi!" + "'", str84.equals("fail_echo_write hi!"));
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test382");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication0.run(strArray41, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = echoApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = echoApplication0.constructResult(strArray60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        echoApplication0.run(strArray81, inputStream85, outputStream86);
        java.lang.String[] strArray88 = null;
        try {
            java.lang.String str89 = echoApplication0.constructResult(strArray88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: fail_echo_empty_params");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str64.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test383");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication0.run(strArray41, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = echoApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = echoApplication0.constructResult(strArray60);
        java.lang.Class<?> wildcardClass65 = echoApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str64.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test384");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream4);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test385");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        java.lang.Class<?> wildcardClass21 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        mkdirApplication24.createFolder(strArray37);
        java.lang.String str43 = findApplication22.findFolderContent("null output stream provided fail_echo_write", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication56 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        mkdirApplication58.createFolder(strArray71);
        java.lang.String str77 = findApplication56.findFolderContent("null output stream provided fail_echo_write", strArray71);
        java.lang.Class<?> wildcardClass78 = strArray71.getClass();
        java.lang.String str79 = findApplication45.findFolderContent("null output stream provided fail_echo_write", strArray71);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication81 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication83.createFolder(strArray86);
        java.lang.String str88 = findApplication81.findFolderContent("fail_sed_write", strArray86);
        java.lang.String str89 = findApplication45.findFolderContent("null output stream provided\r\nfail_echo_write", strArray86);
        java.lang.String str90 = findApplication22.findFolderContent("Could not write to output stream", strArray86);
        java.lang.Class<?> wildcardClass91 = strArray86.getClass();
        mkdirApplication1.createFolder(strArray86);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            exitApplication0.run(strArray86, inputStream93, outputStream94);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "" + "'", str88.equals(""));
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test386");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = findApplication11.findFolderContent("", strArray16);
        java.lang.String str21 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        java.lang.Class<?> wildcardClass22 = strArray16.getClass();
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication1.run(strArray16, inputStream23, outputStream24);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        try {
            grepApplication0.run(strArray16, inputStream26, outputStream27);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test387");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory Could not read stream Null Pointer Exception Exception Caught", "fail_echo", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test388");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        try {
            java.lang.String str4 = dateApplication0.getDate("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:42" + "'", str2.equals("03-24-2019 00:08:42"));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test389");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory Could not read stream Null Pointer Exception Exception Caught", "Could not read stream", (int) (byte) 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test390");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_empty_params");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_echo_empty_params: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test391");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = sortApplication0.sortFromStdin((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test392");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        java.lang.Class<?> wildcardClass20 = mkdirApplication9.getClass();
        java.lang.Class<?> wildcardClass21 = mkdirApplication9.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication24 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication24.constructResult(strArray44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        echoApplication24.run(strArray81, inputStream88, outputStream89);
        java.lang.String str91 = findApplication22.findFolderContent("fail_echo_write hi!", strArray81);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        mkdirApplication9.run(strArray81, inputStream92, outputStream93);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            cdApplication0.run(strArray81, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test393");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication1.createFolder(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.lang.String str76 = findApplication55.findFolderContent("null output stream provided fail_echo_write", strArray70);
        java.lang.String str77 = lsApplication30.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray70);
        mkdirApplication1.createFolder(strArray70);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            sedApplication0.run(strArray70, inputStream79, outputStream80);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str77.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test394");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        java.lang.String str11 = findApplication4.findFolderContent("fail_sed_write", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication15.createFolder(strArray18);
        java.lang.String str20 = findApplication13.findFolderContent("fail_sed_write", strArray18);
        java.lang.String str21 = findApplication4.findFolderContent("null input file provided", strArray18);
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        try {
            pwdApplication0.run(strArray18, inputStream22, outputStream23);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\" + "'", str2.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test395");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        java.lang.Class<?> wildcardClass54 = mkdirApplication43.getClass();
        java.lang.String[] strArray59 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication43.run(strArray59, inputStream60, outputStream61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication32.run(strArray59, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        echoApplication2.run(strArray59, inputStream66, outputStream67);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        java.lang.String str70 = echoApplication2.constructResult(strArray69);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            sortApplication0.run(strArray69, inputStream71, outputStream72);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test396");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.lang.String[] strArray78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: no argument can be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test397");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Null Pointer Exception", "fail_echo_write:\r\n\r\n\r\nhi!:", (int) ' ', "This is a directory");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test398");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.String str29 = echoApplication0.constructResult(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        echoApplication0.run(strArray37, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = echoApplication0.constructResult(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = echoApplication0.constructResult(strArray55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        mkdirApplication60.createFolder(strArray73);
        java.lang.String[] strArray82 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication60.run(strArray82, inputStream83, outputStream84);
        java.lang.Class<?> wildcardClass86 = strArray82.getClass();
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        echoApplication0.run(strArray82, inputStream87, outputStream88);
        java.lang.Class<?> wildcardClass90 = echoApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided fail_echo_write" + "'", str29.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided fail_echo_write" + "'", str51.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null output stream provided fail_echo_write" + "'", str59.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test399");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = findApplication12.findFolderContent("Could not read stream", strArray42);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication5.run(strArray42, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication5.getClass();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication5.createFolder(strArray57);
        mkdirApplication4.createFolder(strArray57);
        java.lang.Class<?> wildcardClass60 = strArray57.getClass();
        try {
            java.lang.String str61 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray57);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test400");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        java.lang.Class<?> wildcardClass37 = mkdirApplication26.getClass();
        java.lang.String[] strArray42 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication26.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication15.run(strArray42, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication1.run(strArray42, inputStream50, outputStream51);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        try {
            sedApplication0.run(strArray42, inputStream53, outputStream54);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str12.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str49.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test401");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication28.createFolder(strArray41);
        java.lang.String str47 = findApplication26.findFolderContent("null output stream provided fail_echo_write", strArray41);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        try {
            exitApplication0.run(strArray41, inputStream49, outputStream50);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str48.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test402");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray28);
        java.lang.Class<?> wildcardClass35 = strArray28.getClass();
        java.lang.String str36 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.lang.Class<?> wildcardClass49 = mkdirApplication38.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication50 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication65 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = findApplication65.findFolderContent("", strArray70);
        java.lang.String str75 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication51.run(strArray70, inputStream76, outputStream77);
        java.lang.String str79 = echoApplication50.constructResult(strArray70);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication38.run(strArray70, inputStream80, outputStream81);
        java.lang.String str83 = findApplication2.findFolderContent("Null Pointer Exception", strArray70);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            sortApplication0.run(strArray70, inputStream84, outputStream85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "null output stream provided fail_echo_write" + "'", str79.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test403");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read file", "fail_echo_write", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test404");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = findApplication25.findFolderContent("null input file provided", strArray49);
        java.lang.String str56 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray49);
        java.lang.String[] strArray57 = null;
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            lsApplication0.run(strArray57, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str56.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test405");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write", "", 10, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test406");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication21.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = findApplication35.findFolderContent("", strArray40);
        java.lang.String str45 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication21.run(strArray40, inputStream46, outputStream47);
        java.lang.Class<?> wildcardClass49 = mkdirApplication21.getClass();
        java.lang.String[] strArray51 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication21.run(strArray51, inputStream52, outputStream53);
        mkdirApplication1.createFolder(strArray51);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        try {
            wcApplication0.run(strArray51, inputStream56, outputStream57);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test407");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        java.lang.Class<?> wildcardClass10 = findApplication0.getClass();
        java.lang.String[] strArray12 = null;
        try {
            java.lang.String str13 = findApplication0.findFolderContent("null arguments", strArray12);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Arguments for findFolderContent are not allowed to be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test408");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray32);
        mkdirApplication19.createFolder(strArray32);
        java.lang.String str38 = findApplication8.findFolderContent("null input file provided", strArray32);
        java.lang.String str39 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray32);
        java.lang.Class<?> wildcardClass40 = strArray32.getClass();
        try {
            java.lang.String str41 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray32);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test409");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication7.run(strArray44, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication2.run(strArray44, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = strArray44.getClass();
        mkdirApplication1.createFolder(strArray44);
        java.lang.Class<?> wildcardClass62 = strArray44.getClass();
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        try {
            wcApplication0.run(strArray44, inputStream63, outputStream64);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test410");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        java.lang.String str15 = findApplication6.findFolderContent("", strArray11);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication6.findFolderContent("null input file provided", strArray30);
        java.lang.String str37 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray43);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        try {
            dateApplication0.run(strArray43, inputStream48, outputStream49);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:43" + "'", str2.equals("03-24-2019 00:08:43"));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test411");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.lang.String str38 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication41.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication41.run(strArray73, inputStream83, outputStream84);
        java.lang.String str86 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.lang.String str87 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray73);
        java.lang.Class<?> wildcardClass88 = strArray73.getClass();
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            exitApplication0.run(strArray73, inputStream89, outputStream90);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str38.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null output stream provided fail_echo_write" + "'", str82.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str86.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str87.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test412");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        echoApplication10.run(strArray47, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = echoApplication10.constructResult(strArray57);
        java.lang.String str62 = findApplication1.findFolderContent("03-24-2019 00:07:43", strArray57);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        try {
            cdApplication0.run(strArray57, inputStream63, outputStream64);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided fail_echo_write" + "'", str39.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided fail_echo_write" + "'", str61.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test413");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        java.lang.String str18 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray13);
        java.lang.Class<?> wildcardClass19 = strArray13.getClass();
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        try {
            cdApplication0.run(strArray13, inputStream20, outputStream21);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test414");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = echoApplication5.constructResult(strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        java.lang.Class<?> wildcardClass69 = mkdirApplication58.getClass();
        java.lang.String[] strArray74 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication58.run(strArray74, inputStream75, outputStream76);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication47.run(strArray74, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = strArray74.getClass();
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        echoApplication5.run(strArray74, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        try {
            dateApplication0.run(strArray74, inputStream85, outputStream86);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:43" + "'", str2.equals("03-24-2019 00:08:43"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:43" + "'", str4.equals("03-24-2019 00:08:43"));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str46.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test415");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write:\r\n\r\n\r\nhi!:", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test416");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        java.lang.String str19 = findApplication12.findFolderContent("fail_sed_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication21.createFolder(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = findApplication58.findFolderContent("", strArray63);
        java.lang.String str68 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication44.run(strArray63, inputStream69, outputStream70);
        java.lang.String str72 = findApplication33.findFolderContent("Could not read stream", strArray63);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication26.run(strArray63, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication21.run(strArray63, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray63.getClass();
        java.lang.String str80 = findApplication12.findFolderContent("", strArray63);
        mkdirApplication5.createFolder(strArray63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        mkdirApplication5.createFolder(strArray85);
        try {
            java.lang.String str90 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test417");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        java.lang.Class<?> wildcardClass37 = strArray30.getClass();
        java.lang.String str38 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication42.createFolder(strArray45);
        java.lang.String str47 = findApplication40.findFolderContent("fail_sed_write", strArray45);
        java.lang.String str48 = findApplication4.findFolderContent("null output stream provided\r\nfail_echo_write", strArray45);
        java.lang.String str49 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = findApplication55.findFolderContent("", strArray60);
        java.lang.String str65 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication68.createFolder(strArray71);
        java.lang.String str73 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray71);
        java.lang.String str74 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            exitApplication0.run(strArray71, inputStream75, outputStream76);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str49.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str73.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str74.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test418");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "null output stream provided:\r\n\r\n\r\nfail_echo_write:", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test419");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication24 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication24.constructResult(strArray44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        echoApplication24.run(strArray81, inputStream88, outputStream89);
        java.lang.String str91 = findApplication1.findFolderContent("fail_echo_write:\r\n\r\n\r\nhi!:", strArray81);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            sedApplication0.run(strArray81, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test420");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication82 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication85 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication87 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray90 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        mkdirApplication87.run(strArray90, inputStream91, outputStream92);
        java.lang.String str94 = findApplication85.findFolderContent("", strArray90);
        java.lang.String str95 = lsApplication82.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray90);
        try {
            java.lang.String str96 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray90);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str95.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test421");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication1.constructResult(strArray38);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        java.lang.String str53 = echoApplication1.constructResult(strArray48);
        try {
            java.lang.String str54 = catApplication0.catFiles(strArray48);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist." + "'", str42.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test422");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory", "null output stream provided null arguments null output stream provided", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test423");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Exception Caught", "fail_echo", (int) (byte) 100, "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test424");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.String str69 = echoApplication1.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication77 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication77.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication70.createFolder(strArray83);
        java.lang.String[] strArray92 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        mkdirApplication70.run(strArray92, inputStream93, outputStream94);
        java.lang.String str96 = echoApplication1.constructResult(strArray92);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            sedApplication0.run(strArray92, inputStream97, outputStream98);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "null output stream provided null arguments null output stream provided" + "'", str96.equals("null output stream provided null arguments null output stream provided"));
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test425");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_empty_params", "fail_echo_write:\r\n\r\n\r\nhi!:", (int) (short) 1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test426");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.Class<?> wildcardClass13 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication21 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = echoApplication21.constructResult(strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        echoApplication21.run(strArray58, inputStream62, outputStream63);
        mkdirApplication14.createFolder(strArray58);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication1.run(strArray58, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication79 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication79.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication72.createFolder(strArray85);
        java.lang.String str91 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication1.createFolder(strArray85);
        try {
            java.lang.String str93 = catApplication0.catFiles(strArray85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null output stream provided fail_echo_write" + "'", str50.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test427");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write:\r\n\r\n\r\nhi!:", "This is a directory", (int) (short) 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test428");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        java.lang.String str57 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray52);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication33.run(strArray52, inputStream58, outputStream59);
        java.lang.String str61 = findApplication22.findFolderContent("Could not read stream", strArray52);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication15.run(strArray52, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication10.run(strArray52, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = strArray52.getClass();
        java.lang.String str69 = findApplication1.findFolderContent("", strArray52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication81 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = lsApplication81.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        mkdirApplication74.createFolder(strArray87);
        java.lang.String str93 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
        java.lang.String str94 = findApplication1.findFolderContent("null output stream provided null arguments null output stream provided", strArray87);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            sedApplication0.run(strArray87, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str57.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test429");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        try {
            catApplication0.run(strArray16, inputStream20, outputStream21);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test430");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication5.run(strArray36, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication54.run(strArray81, inputStream85, outputStream86);
        java.lang.String str88 = lsApplication41.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray81);
        mkdirApplication5.createFolder(strArray81);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            cdApplication0.run(strArray81, inputStream90, outputStream91);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str88.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test431");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        java.lang.Class<?> wildcardClass41 = mkdirApplication30.getClass();
        java.lang.String[] strArray46 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication30.run(strArray46, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication19.run(strArray46, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication6.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray46);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        echoApplication5.run(strArray46, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            pwdApplication0.run(strArray46, inputStream57, outputStream58);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str16.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str53.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test432");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        java.lang.Class<?> wildcardClass14 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication22 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = echoApplication22.constructResult(strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        echoApplication22.run(strArray59, inputStream63, outputStream64);
        mkdirApplication15.createFolder(strArray59);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication2.run(strArray59, inputStream67, outputStream68);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication70 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = lsApplication70.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication2.createFolder(strArray86);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            wcApplication0.run(strArray86, inputStream94, outputStream95);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided fail_echo_write" + "'", str51.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str92.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test433");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication38 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        java.lang.String str51 = lsApplication38.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication27.run(strArray46, inputStream52, outputStream53);
        java.lang.String str55 = findApplication16.findFolderContent("Could not read stream", strArray46);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication9.run(strArray46, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication4.run(strArray46, inputStream59, outputStream60);
        java.lang.Class<?> wildcardClass62 = strArray46.getClass();
        try {
            java.lang.String str63 = grepApplication0.grepFromFiles("fail_echo", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray46);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test434");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication6 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        java.lang.String str15 = findApplication6.findFolderContent("", strArray11);
        java.lang.String str16 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray11);
        java.lang.Class<?> wildcardClass17 = strArray11.getClass();
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        try {
            dateApplication0.run(strArray11, inputStream18, outputStream19);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:44" + "'", str2.equals("03-24-2019 00:08:44"));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str16.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test435");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        java.lang.String str11 = findApplication4.findFolderContent("fail_sed_write", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication15.createFolder(strArray18);
        java.lang.String str20 = findApplication13.findFolderContent("fail_sed_write", strArray18);
        java.lang.String str21 = findApplication4.findFolderContent("null input file provided", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = findApplication48.findFolderContent("", strArray53);
        java.lang.String str58 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication34.run(strArray53, inputStream59, outputStream60);
        java.lang.String str62 = findApplication23.findFolderContent("Could not read stream", strArray53);
        java.lang.String str63 = findApplication4.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray53);
        try {
            java.lang.String str64 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray53);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test436");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.Class<?> wildcardClass13 = strArray8.getClass();
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        try {
            dateApplication0.run(strArray8, inputStream14, outputStream15);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:44" + "'", str2.equals("03-24-2019 00:08:44"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test437");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = findApplication9.findFolderContent("", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication20.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        java.lang.String str44 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication20.run(strArray39, inputStream45, outputStream46);
        java.lang.String str48 = findApplication9.findFolderContent("Could not read stream", strArray39);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication2.run(strArray39, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication61 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = lsApplication61.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        mkdirApplication54.createFolder(strArray67);
        java.lang.String str73 = findApplication52.findFolderContent("null output stream provided fail_echo_write", strArray67);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication2.run(strArray67, inputStream74, outputStream75);
        java.lang.Class<?> wildcardClass77 = strArray67.getClass();
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        try {
            cdApplication0.run(strArray67, inputStream78, outputStream79);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test438");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication1.run(strArray43, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication55.createFolder(strArray58);
        java.lang.String str60 = findApplication53.findFolderContent("fail_sed_write", strArray58);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication64.createFolder(strArray67);
        java.lang.String str69 = findApplication62.findFolderContent("fail_sed_write", strArray67);
        java.lang.String str70 = findApplication53.findFolderContent("null input file provided", strArray67);
        mkdirApplication1.createFolder(strArray67);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            exitApplication0.run(strArray67, inputStream72, outputStream73);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided fail_echo_write" + "'", str35.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test439");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        mkdirApplication10.createFolder(strArray23);
        java.lang.String str29 = findApplication8.findFolderContent("null output stream provided fail_echo_write", strArray23);
        java.lang.Class<?> wildcardClass30 = strArray23.getClass();
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        try {
            pwdApplication0.run(strArray23, inputStream31, outputStream32);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str6.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write" + "'", str7.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test440");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.Class<?> wildcardClass33 = mkdirApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication47 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        java.lang.String str60 = lsApplication47.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication36.run(strArray55, inputStream61, outputStream62);
        java.lang.Class<?> wildcardClass64 = mkdirApplication36.getClass();
        java.lang.String[] strArray66 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication36.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = findApplication34.findFolderContent("", strArray66);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication5.run(strArray66, inputStream71, outputStream72);
        try {
            java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray66);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "" + "'", str59.equals(""));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test441");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        mkdirApplication6.createFolder(strArray19);
        java.lang.String str25 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        try {
            cdApplication0.run(strArray19, inputStream26, outputStream27);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test442");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = echoApplication2.constructResult(strArray59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication65.createFolder(strArray68);
        java.lang.String str70 = echoApplication2.constructResult(strArray68);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            cdApplication0.run(strArray68, inputStream71, outputStream72);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided fail_echo_write" + "'", str64.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "fail_echo_write hi!" + "'", str70.equals("fail_echo_write hi!"));
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test443");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = findApplication10.findFolderContent("", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        mkdirApplication23.createFolder(strArray36);
        java.lang.String str42 = findApplication21.findFolderContent("null output stream provided fail_echo_write", strArray36);
        java.lang.Class<?> wildcardClass43 = strArray36.getClass();
        java.lang.String str44 = findApplication10.findFolderContent("null output stream provided fail_echo_write", strArray36);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication48.createFolder(strArray51);
        java.lang.String str53 = findApplication46.findFolderContent("fail_sed_write", strArray51);
        java.lang.String str54 = findApplication10.findFolderContent("null output stream provided\r\nfail_echo_write", strArray51);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            cdApplication0.run(strArray51, inputStream55, outputStream56);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test444");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication11.findFolderContent("null output stream provided fail_echo_write", strArray26);
        java.lang.Class<?> wildcardClass33 = strArray26.getClass();
        java.lang.String str34 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication38.createFolder(strArray41);
        java.lang.String str43 = findApplication36.findFolderContent("fail_sed_write", strArray41);
        java.lang.String str44 = findApplication0.findFolderContent("null output stream provided\r\nfail_echo_write", strArray41);
        java.lang.String[] strArray51 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str52 = findApplication0.findFolderContent("null output stream provided null arguments null output stream provided", strArray51);
        java.lang.String[] strArray54 = null;
        try {
            java.lang.String str55 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray54);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Arguments for findFolderContent are not allowed to be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test445");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.String str32 = echoApplication3.constructResult(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        echoApplication3.run(strArray40, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication58 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication61 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = findApplication61.findFolderContent("", strArray66);
        java.lang.String str71 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication74.createFolder(strArray77);
        java.lang.String str79 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray77);
        java.lang.String str80 = findApplication47.findFolderContent("hi!", strArray77);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        echoApplication3.run(strArray77, inputStream81, outputStream82);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication84 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication86 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray89 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication86.run(strArray89, inputStream90, outputStream91);
        java.lang.String str93 = findApplication84.findFolderContent("", strArray89);
        java.lang.String str94 = echoApplication3.constructResult(strArray89);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            pwdApplication0.run(strArray89, inputStream95, outputStream96);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided fail_echo_write" + "'", str32.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str79.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "null output stream provided fail_echo_write" + "'", str94.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test446");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Exception Caught", "03-24-2019 00:07:26", 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test447");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("File is null.", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test448");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        try {
            grepApplication0.run(strArray28, inputStream36, outputStream37);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test449");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.Class<?> wildcardClass35 = mkdirApplication7.getClass();
        java.lang.String[] strArray37 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication7.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication5.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        mkdirApplication43.createFolder(strArray60);
        java.lang.String str66 = findApplication5.findFolderContent("null input file provided", strArray60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.lang.String str79 = findApplication5.findFolderContent("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", strArray74);
        try {
            java.lang.String str80 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test450");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.Class<?> wildcardClass29 = mkdirApplication1.getClass();
        java.lang.String[] strArray31 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication1.run(strArray31, inputStream32, outputStream33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        try {
            sortApplication0.run(strArray31, inputStream35, outputStream36);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test451");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication7 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        java.lang.String str36 = echoApplication7.constructResult(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        echoApplication7.run(strArray44, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication65 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = findApplication65.findFolderContent("", strArray70);
        java.lang.String str75 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication78.createFolder(strArray81);
        java.lang.String str83 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray81);
        java.lang.String str84 = findApplication51.findFolderContent("hi!", strArray81);
        java.lang.String str85 = echoApplication7.constructResult(strArray81);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            pwdApplication0.run(strArray81, inputStream86, outputStream87);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\" + "'", str2.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\" + "'", str6.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null output stream provided fail_echo_write" + "'", str36.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str83.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "fail_echo_write hi!" + "'", str85.equals("fail_echo_write hi!"));
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test452");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = findApplication0.findFolderContent("Could not read stream", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        try {
            findApplication0.run(strArray43, inputStream47, outputStream48);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test453");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication1.run(strArray43, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = strArray43.getClass();
        java.lang.Class<?> wildcardClass54 = strArray43.getClass();
        java.lang.Class<?> wildcardClass55 = strArray43.getClass();
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        try {
            wcApplication0.run(strArray43, inputStream56, outputStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided fail_echo_write" + "'", str35.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test454");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_write");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_echo_write: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test455");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory Could not read stream Null Pointer Exception Exception Caught", "Could not read stream", 0, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test456");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("null output stream provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\null output stream provided: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test457");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication29.createFolder(strArray32);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication1.run(strArray32, inputStream34, outputStream35);
        java.lang.String[] strArray42 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication1.createFolder(strArray42);
        try {
            java.lang.String str44 = catApplication0.catFiles(strArray42);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test458");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        mkdirApplication8.createFolder(strArray21);
        java.lang.String str27 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = findApplication30.findFolderContent("", strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray54);
        mkdirApplication41.createFolder(strArray54);
        java.lang.String str60 = findApplication30.findFolderContent("null input file provided", strArray54);
        java.lang.String str61 = lsApplication5.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray54);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication64 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = findApplication64.findFolderContent("", strArray69);
        java.lang.String str74 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray69);
        java.lang.Class<?> wildcardClass75 = strArray69.getClass();
        try {
            java.lang.String str76 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray69);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str61.equals("null output stream provided\r\nfail_echo_write"));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test459");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass5 = lsApplication4.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        mkdirApplication10.createFolder(strArray23);
        java.lang.String str29 = findApplication8.findFolderContent("null output stream provided fail_echo_write", strArray23);
        java.lang.Class<?> wildcardClass30 = strArray23.getClass();
        java.lang.String str31 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        try {
            java.lang.String str32 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test460");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        java.lang.String str17 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray12);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication20 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication21.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = findApplication35.findFolderContent("", strArray40);
        java.lang.String str45 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication21.run(strArray40, inputStream46, outputStream47);
        java.lang.String str49 = echoApplication20.constructResult(strArray40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        java.lang.Class<?> wildcardClass72 = mkdirApplication61.getClass();
        java.lang.String[] strArray77 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication61.run(strArray77, inputStream78, outputStream79);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication50.run(strArray77, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        echoApplication20.run(strArray77, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication4.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
        try {
            java.lang.String str88 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided fail_echo_write" + "'", str49.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught" + "'", str87.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test461");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication16.findFolderContent("null output stream provided fail_echo_write", strArray31);
        java.lang.Class<?> wildcardClass38 = strArray31.getClass();
        java.lang.String str39 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication43.createFolder(strArray46);
        java.lang.String str48 = findApplication41.findFolderContent("fail_sed_write", strArray46);
        java.lang.String str49 = findApplication5.findFolderContent("null output stream provided\r\nfail_echo_write", strArray46);
        java.lang.String str50 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication56 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = findApplication56.findFolderContent("", strArray61);
        java.lang.String str66 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray61);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication69.createFolder(strArray72);
        java.lang.String str74 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.lang.String str75 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            catApplication0.run(strArray72, inputStream76, outputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str50.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str74.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str75.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test462");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication5.constructResult(strArray52);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = echoApplication5.constructResult(strArray62);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication68.createFolder(strArray71);
        java.lang.String str73 = echoApplication5.constructResult(strArray71);
        try {
            java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray71);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided fail_echo_write" + "'", str56.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "null output stream provided fail_echo_write" + "'", str67.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "fail_echo_write hi!" + "'", str73.equals("fail_echo_write hi!"));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test463");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication14 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        java.lang.String str39 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication15.run(strArray34, inputStream40, outputStream41);
        java.lang.String str43 = echoApplication14.constructResult(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        echoApplication14.run(strArray51, inputStream55, outputStream56);
        mkdirApplication7.createFolder(strArray51);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        echoApplication6.run(strArray51, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        java.lang.Class<?> wildcardClass72 = strArray67.getClass();
        java.lang.String str73 = echoApplication6.constructResult(strArray67);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        try {
            pwdApplication0.run(strArray67, inputStream74, outputStream75);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided fail_echo_write" + "'", str43.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null output stream provided fail_echo_write" + "'", str73.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test464");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("null output stream provided\r\nfail_echo_write", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test465");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        java.lang.String[] strArray18 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication2.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.Class<?> wildcardClass50 = mkdirApplication22.getClass();
        java.lang.String[] strArray52 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication22.run(strArray52, inputStream53, outputStream54);
        mkdirApplication2.createFolder(strArray52);
        try {
            java.lang.String str57 = catApplication0.catFiles(strArray52);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test466");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = findApplication34.findFolderContent("null output stream provided fail_echo_write", strArray49);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        echoApplication4.run(strArray49, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = echoApplication4.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication60.createFolder(strArray63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication60.run(strArray68, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        echoApplication4.run(strArray68, inputStream75, outputStream76);
        try {
            java.lang.String str78 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray68);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray68);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test467");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        java.lang.String str7 = findApplication0.findFolderContent("fail_sed_write", strArray5);
        java.lang.String[] strArray8 = null;
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            findApplication0.run(strArray8, inputStream9, outputStream10);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Args cannot be null for find!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test468");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided", "null output stream provided", (int) (byte) 1, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test469");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String str45 = findApplication15.findFolderContent("null input file provided", strArray39);
        java.lang.String str46 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray52);
        mkdirApplication1.createFolder(strArray52);
        try {
            java.lang.String str58 = catApplication0.catFiles(strArray52);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test470");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        java.lang.Class<?> wildcardClass27 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication44.createFolder(strArray47);
        java.lang.String str49 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray47);
        mkdirApplication1.createFolder(strArray47);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        try {
            grepApplication0.run(strArray47, inputStream51, outputStream52);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str49.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test471");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        mkdirApplication5.createFolder(strArray18);
        java.lang.String str24 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication27.findFolderContent("", strArray32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        mkdirApplication38.createFolder(strArray51);
        java.lang.String str57 = findApplication27.findFolderContent("null input file provided", strArray51);
        java.lang.String str58 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray51);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        try {
            wcApplication0.run(strArray51, inputStream59, outputStream60);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str58.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test472");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        java.lang.String str18 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication37.createFolder(strArray40);
        java.lang.String str42 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication57 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication72 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = findApplication72.findFolderContent("", strArray77);
        java.lang.String str82 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication58.run(strArray77, inputStream83, outputStream84);
        java.lang.String str86 = echoApplication57.constructResult(strArray77);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication45.run(strArray77, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray77);
        java.lang.String str91 = lsApplication5.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            dateApplication0.run(strArray77, inputStream92, outputStream93);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:46" + "'", str2.equals("03-24-2019 00:08:46"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:46" + "'", str4.equals("03-24-2019 00:08:46"));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str42.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null output stream provided fail_echo_write" + "'", str86.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str91.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test473");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication26.findFolderContent("null input file provided", strArray50);
        java.lang.String str57 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray50);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            catApplication0.run(strArray50, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null output stream provided\r\nfail_echo_write" + "'", str57.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test474");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication59 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = findApplication59.findFolderContent("", strArray64);
        java.lang.String str69 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication72.createFolder(strArray75);
        java.lang.String str77 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = findApplication45.findFolderContent("hi!", strArray75);
        java.lang.String str79 = echoApplication1.constructResult(strArray75);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            exitApplication0.run(strArray75, inputStream80, outputStream81);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str77.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "fail_echo_write hi!" + "'", str79.equals("fail_echo_write hi!"));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test475");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("File doesn't exist.");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:46" + "'", str2.equals("03-24-2019 00:08:46"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:46" + "'", str4.equals("03-24-2019 00:08:46"));
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test476");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = findApplication31.findFolderContent("null output stream provided fail_echo_write", strArray46);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        echoApplication1.run(strArray46, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = strArray46.getClass();
        java.lang.Class<?> wildcardClass57 = strArray46.getClass();
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            sedApplication0.run(strArray46, inputStream58, outputStream59);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test477");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null input file provided", "C:\\", 0, "Null Pointer Exception");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test478");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.lang.String[] strArray82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray82);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: filesNames is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test479");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("hi!", "null output stream provided:\r\n\r\n\r\nfail_echo_write:", 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test480");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        java.lang.String str19 = findApplication12.findFolderContent("fail_sed_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication21.createFolder(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = findApplication58.findFolderContent("", strArray63);
        java.lang.String str68 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication44.run(strArray63, inputStream69, outputStream70);
        java.lang.String str72 = findApplication33.findFolderContent("Could not read stream", strArray63);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication26.run(strArray63, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication21.run(strArray63, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray63.getClass();
        java.lang.String str80 = findApplication12.findFolderContent("", strArray63);
        mkdirApplication5.createFolder(strArray63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        mkdirApplication5.createFolder(strArray85);
        try {
            java.lang.String str90 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray85);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test481");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        java.lang.String str7 = findApplication0.findFolderContent("fail_sed_write", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication11.createFolder(strArray14);
        java.lang.String str16 = findApplication9.findFolderContent("fail_sed_write", strArray14);
        java.lang.String str17 = findApplication0.findFolderContent("null input file provided", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.Class<?> wildcardClass28 = strArray23.getClass();
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        try {
            findApplication0.run(strArray23, inputStream29, outputStream30);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test482");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        java.lang.String str15 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray10);
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        try {
            sortApplication0.run(strArray10, inputStream16, outputStream17);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str15.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test483");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication60.run(strArray67, inputStream68, outputStream69);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        mkdirApplication60.createFolder(strArray77);
        mkdirApplication53.createFolder(strArray77);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        echoApplication1.run(strArray77, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            pwdApplication0.run(strArray77, inputStream87, outputStream88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided fail_echo_write" + "'", str30.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null output stream provided fail_echo_write" + "'", str52.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test484");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        java.lang.Class<?> wildcardClass23 = mkdirApplication12.getClass();
        java.lang.Class<?> wildcardClass24 = mkdirApplication12.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication32 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        java.lang.String str57 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray52);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication33.run(strArray52, inputStream58, outputStream59);
        java.lang.String str61 = echoApplication32.constructResult(strArray52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication62.run(strArray69, inputStream70, outputStream71);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        echoApplication32.run(strArray69, inputStream73, outputStream74);
        mkdirApplication25.createFolder(strArray69);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication12.run(strArray69, inputStream77, outputStream78);
        mkdirApplication5.createFolder(strArray69);
        java.lang.Class<?> wildcardClass81 = strArray69.getClass();
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            dateApplication0.run(strArray69, inputStream82, outputStream83);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:47" + "'", str2.equals("03-24-2019 00:08:47"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:47" + "'", str4.equals("03-24-2019 00:08:47"));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str57.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null output stream provided fail_echo_write" + "'", str61.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test485");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication7.run(strArray44, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication2.run(strArray44, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = strArray44.getClass();
        mkdirApplication1.createFolder(strArray44);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            dateApplication0.run(strArray44, inputStream62, outputStream63);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test486");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream77);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided fail_echo_write" + "'", str33.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test487");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.io.InputStream inputStream78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromStdin((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream78);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided fail_echo_write" + "'", str34.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test488");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = sortApplication0.sortFromStdin((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test489");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("File doesn't exist.", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (int) (byte) 100, inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test490");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication35.createFolder(strArray38);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication7.run(strArray38, inputStream40, outputStream41);
        java.lang.String[] strArray48 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication7.createFolder(strArray48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        try {
            cdApplication0.run(strArray48, inputStream50, outputStream51);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test491");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication0.createFolder(strArray3);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        mkdirApplication8.createFolder(strArray21);
        java.lang.String str27 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        mkdirApplication0.createFolder(strArray21);
        java.lang.Class<?> wildcardClass29 = mkdirApplication0.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test492");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("hi!", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) (byte) 100, "03-24-2019 00:07:26");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test493");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write hi!", "", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test494");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication1 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication5 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        java.lang.Class<?> wildcardClass61 = mkdirApplication50.getClass();
        java.lang.String[] strArray66 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication50.run(strArray66, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication39.run(strArray66, inputStream70, outputStream71);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        echoApplication9.run(strArray66, inputStream73, outputStream74);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        java.lang.String str77 = echoApplication9.constructResult(strArray76);
        java.lang.String str78 = grepApplication5.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray76);
        java.lang.String str79 = grepApplication1.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            sedApplication0.run(strArray76, inputStream80, outputStream81);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null output stream provided fail_echo_write" + "'", str38.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test495");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.lang.String str76 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        echoApplication2.run(strArray70, inputStream77, outputStream78);
        java.lang.Class<?> wildcardClass80 = strArray70.getClass();
        try {
            java.lang.String str81 = catApplication0.catFiles(strArray70);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null output stream provided fail_echo_write" + "'", str31.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null output stream provided fail_echo_write" + "'", str53.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str76.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test496");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        try {
            grepApplication0.run(strArray14, inputStream20, outputStream21);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test497");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("null input file provided");
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         org.junit.Assert.assertTrue("'" + str2 + "' != '" + "03-24-2019 00:08:47" + "'", str2.equals("03-24-2019 00:08:47"));
// flaky:         org.junit.Assert.assertTrue("'" + str4 + "' != '" + "03-24-2019 00:08:47" + "'", str4.equals("03-24-2019 00:08:47"));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test498");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication8.run(strArray45, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = findApplication52.findFolderContent("", strArray57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication66 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = findApplication66.findFolderContent("", strArray71);
        java.lang.String str76 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication79.createFolder(strArray82);
        java.lang.String str84 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray82);
        java.lang.String str85 = findApplication52.findFolderContent("hi!", strArray82);
        java.lang.String str86 = echoApplication8.constructResult(strArray82);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            pwdApplication0.run(strArray82, inputStream87, outputStream88);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "C:\\" + "'", str1.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "C:\\" + "'", str2.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "C:\\" + "'", str3.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "C:\\" + "'", str4.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "C:\\" + "'", str5.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "C:\\" + "'", str6.equals("C:\\"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "C:\\" + "'", str7.equals("C:\\"));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null output stream provided fail_echo_write" + "'", str37.equals("null output stream provided fail_echo_write"));
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "null output stream provided:\r\n\r\n\r\nfail_echo_write:" + "'", str76.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "fail_echo_write:\r\n\r\n\r\nhi!:" + "'", str84.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "fail_echo_write hi!" + "'", str86.equals("fail_echo_write hi!"));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test499");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.lang.String[] strArray4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromFiles("null output stream provided null arguments null output stream provided", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray4);
            org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: filesNames is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test500");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "File is null.", "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }
}
