import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test001");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "03-24-2019 00:07:26", (int) (byte) 1, "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test002");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = strArray77.getClass();
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            grepApplication0.run(strArray77, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
        assertNotNull(strArray77);
        assertNotNull(wildcardClass81);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test003");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        java.lang.Class<?> wildcardClass12 = findApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication16 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication17.run(strArray36, inputStream42, outputStream43);
        java.lang.String str45 = echoApplication16.constructResult(strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = mkdirApplication57.getClass();
        java.lang.String[] strArray73 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication57.run(strArray73, inputStream74, outputStream75);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication46.run(strArray73, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        echoApplication16.run(strArray73, inputStream80, outputStream81);
        java.lang.String str83 = findApplication14.findFolderContent("fail_echo_write hi!", strArray73);
        java.lang.Class<?> wildcardClass84 = strArray73.getClass();
        java.lang.String str85 = findApplication2.findFolderContent("fail_echo_write", strArray73);
        try {
            java.lang.String str86 = catApplication0.catFiles(strArray73);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str11.equals(""));
        assertNotNull(wildcardClass12);
        assertNotNull(strArray24);
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray53);
        assertNotNull(strArray64);
        assertNotNull(wildcardClass68);
        assertNotNull(strArray73);
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass84);
        assertTrue(str85.equals(""));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test004");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write hi!", "Exception Caught", (int) (byte) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test005");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication4.run(strArray35, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication40 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = findApplication55.findFolderContent("", strArray60);
        java.lang.String str65 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication41.run(strArray60, inputStream66, outputStream67);
        java.lang.String str69 = echoApplication40.constructResult(strArray60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication70.run(strArray77, inputStream78, outputStream79);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        echoApplication40.run(strArray77, inputStream81, outputStream82);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication84.run(strArray87, inputStream88, outputStream89);
        java.lang.String str91 = echoApplication40.constructResult(strArray87);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        mkdirApplication4.run(strArray87, inputStream92, outputStream93);
        java.lang.Class<?> wildcardClass95 = strArray87.getClass();
        try {
            java.lang.String str96 = grepApplication0.grepFromFiles("fail_echo_write:\r\n\r\n\r\nhi!:", (java.lang.Boolean) false, (java.lang.Boolean) false, strArray87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertNotNull(strArray48);
        assertNotNull(strArray60);
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str69.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray77);
        assertNotNull(strArray87);
        assertTrue(str91.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass95);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test006");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        java.lang.String str36 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray34);
        java.lang.String str37 = findApplication4.findFolderContent("hi!", strArray34);
        java.lang.Class<?> wildcardClass38 = strArray34.getClass();
        try {
            java.lang.String str39 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray34);
        assertTrue(str36.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str37.equals(""));
        assertNotNull(wildcardClass38);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test007");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray10);
        try {
            java.lang.String str15 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray10);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray10);
        assertTrue(str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test008");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("fail_echo_write\r\nhi!");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <\r> at index 15: fail_echo_write\r\nhi!\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test009");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication34.createFolder(strArray37);
        java.lang.String str39 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray37);
        java.lang.String str40 = findApplication7.findFolderContent("hi!", strArray37);
        java.lang.Class<?> wildcardClass41 = findApplication7.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        java.lang.Class<?> wildcardClass54 = mkdirApplication43.getClass();
        java.lang.String[] strArray59 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication43.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication65.createFolder(strArray68);
        java.lang.String str70 = findApplication63.findFolderContent("fail_sed_write", strArray68);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication43.run(strArray68, inputStream71, outputStream72);
        java.lang.String str74 = findApplication7.findFolderContent("fail_echo_write\r\nhi!", strArray68);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            dateApplication0.run(strArray68, inputStream75, outputStream76);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:26"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:26"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:26"));
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray37);
        assertTrue(str39.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str40.equals(""));
        assertNotNull(wildcardClass41);
        assertNotNull(strArray50);
        assertNotNull(wildcardClass54);
        assertNotNull(strArray59);
        assertNotNull(strArray68);
        assertTrue(str70.equals(""));
        assertTrue(str74.equals(""));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test010");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.Class<?> wildcardClass29 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication32.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication32.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication30.findFolderContent("", strArray62);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication1.run(strArray62, inputStream67, outputStream68);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication72.createFolder(strArray75);
        java.lang.String str77 = findApplication70.findFolderContent("fail_sed_write", strArray75);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication1.run(strArray75, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = strArray75.getClass();
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            sedApplication0.run(strArray75, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass29);
        assertNotNull(strArray39);
        assertNotNull(strArray51);
        assertTrue(str55.equals(""));
        assertTrue(str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass60);
        assertNotNull(strArray62);
        assertTrue(str66.equals(""));
        assertNotNull(strArray75);
        assertTrue(str77.equals(""));
        assertNotNull(wildcardClass81);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test011");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write:\r\n\r\n\r\nhi!:", "null output stream provided:\r\n\r\n\r\nnull arguments:", 100, "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test012");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        mkdirApplication56.createFolder(strArray69);
        java.lang.String str75 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication1.run(strArray69, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray69.getClass();
        java.lang.Class<?> wildcardClass80 = strArray69.getClass();
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            sedApplication0.run(strArray69, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray59);
        assertNotNull(strArray69);
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass79);
        assertNotNull(wildcardClass80);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test013");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication11.createFolder(strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = findApplication48.findFolderContent("", strArray53);
        java.lang.String str58 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication34.run(strArray53, inputStream59, outputStream60);
        java.lang.String str62 = findApplication23.findFolderContent("Could not read stream", strArray53);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication16.run(strArray53, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication11.run(strArray53, inputStream66, outputStream67);
        java.lang.Class<?> wildcardClass69 = strArray53.getClass();
        java.lang.String str70 = findApplication2.findFolderContent("", strArray53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication72 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication75 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray78 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication75.run(strArray78, inputStream79, outputStream80);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication82 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication85 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray88 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication85.run(strArray88, inputStream89, outputStream90);
        java.lang.String str92 = lsApplication82.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray88);
        mkdirApplication75.createFolder(strArray88);
        java.lang.String str94 = lsApplication72.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray88);
        java.lang.String str95 = findApplication2.findFolderContent("null output stream provided null arguments null output stream provided", strArray88);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            wcApplication0.run(strArray88, inputStream96, outputStream97);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str9.equals(""));
        assertNotNull(strArray14);
        assertNotNull(strArray19);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertNotNull(strArray41);
        assertNotNull(strArray53);
        assertTrue(str57.equals(""));
        assertTrue(str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str62.equals(""));
        assertNotNull(wildcardClass69);
        assertTrue(str70.equals(""));
        assertNotNull(strArray78);
        assertNotNull(strArray88);
        assertTrue(str92.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str94.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str95.equals(""));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test014");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass9 = pwdApplication0.getClass();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        java.lang.String[] strArray11 = null;
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        try {
            pwdApplication0.run(strArray11, inputStream12, outputStream13);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str8.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass9);
        assertTrue(str10.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test015");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.Class<?> wildcardClass16 = strArray12.getClass();
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        try {
            cdApplication0.run(strArray12, inputStream17, outputStream18);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(wildcardClass16);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test016");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "null output stream provided", (int) (short) 0, "C:\\");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test017");
        boolean boolean1 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.isInteger("null output stream provided:\r\n\r\n\r\nnull arguments:");
        assertTrue(boolean1 == false);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test018");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write:\r\n\r\n\r\nhi!:", "null output stream provided", (int) (short) 100);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test019");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory Could not read stream Null Pointer Exception Exception Caught", "fail_echo_write:\r\n\r\n\r\nhi!:", 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test020");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        mkdirApplication42.createFolder(strArray55);
        java.lang.String str61 = findApplication31.findFolderContent("null input file provided", strArray55);
        java.lang.String str62 = lsApplication6.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray68);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        try {
            pwdApplication0.run(strArray68, inputStream73, outputStream74);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(strArray12);
        assertNotNull(strArray22);
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertNotNull(strArray45);
        assertNotNull(strArray55);
        assertTrue(str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str61.equals(""));
        assertTrue(str62.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray68);
        assertTrue(str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test021");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        java.lang.String str24 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication0.run(strArray19, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication28 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication29.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        java.lang.String str53 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication29.run(strArray48, inputStream54, outputStream55);
        java.lang.String str57 = echoApplication28.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication28.run(strArray65, inputStream69, outputStream70);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.String str79 = echoApplication28.constructResult(strArray75);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication80 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = findApplication80.findFolderContent("", strArray85);
        java.lang.String str90 = echoApplication28.constructResult(strArray85);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication91 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray94 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication91.createFolder(strArray94);
        java.lang.String str96 = echoApplication28.constructResult(strArray94);
        mkdirApplication0.createFolder(strArray94);
        java.lang.String[] strArray98 = null;
        try {
            mkdirApplication0.createFolder(strArray98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Please check the filename.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray36);
        assertNotNull(strArray48);
        assertTrue(str52.equals(""));
        assertTrue(str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str57.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str79.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray85);
        assertTrue(str89.equals(""));
        assertTrue(str90.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray94);
        assertTrue(str96.equals("fail_echo_write hi!"));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test022");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass2 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication43.run(strArray62, inputStream68, outputStream69);
        java.lang.String str71 = findApplication32.findFolderContent("Could not read stream", strArray62);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication25.run(strArray62, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication20.run(strArray62, inputStream75, outputStream76);
        java.lang.Class<?> wildcardClass78 = strArray62.getClass();
        java.lang.String str79 = findApplication11.findFolderContent("", strArray62);
        mkdirApplication4.createFolder(strArray62);
        java.lang.Class<?> wildcardClass81 = strArray62.getClass();
        java.lang.String str82 = findApplication1.findFolderContent("File is null.", strArray62);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            dateApplication0.run(strArray62, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(strArray7);
        assertNotNull(strArray16);
        assertTrue(str18.equals(""));
        assertNotNull(strArray23);
        assertNotNull(strArray28);
        assertNotNull(strArray37);
        assertTrue(str41.equals(""));
        assertNotNull(strArray50);
        assertNotNull(strArray62);
        assertTrue(str66.equals(""));
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str71.equals(""));
        assertNotNull(wildcardClass78);
        assertTrue(str79.equals(""));
        assertNotNull(wildcardClass81);
        assertTrue(str82.equals(""));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test023");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write", "null output stream provided null arguments null output stream provided", 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test024");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "03-24-2019 00:07:43", (int) (short) 1);
            fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 3\r\nC:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test025");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("03-24-2019 00:07:26", "null input file provided", (int) (byte) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test026");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication7 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        java.lang.String str36 = echoApplication7.constructResult(strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        echoApplication7.run(strArray44, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication2.run(strArray44, inputStream51, outputStream52);
        java.lang.Class<?> wildcardClass54 = strArray44.getClass();
        java.lang.Class<?> wildcardClass55 = strArray44.getClass();
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        try {
            pwdApplication0.run(strArray44, inputStream56, outputStream57);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(strArray5);
        assertNotNull(strArray15);
        assertNotNull(strArray27);
        assertTrue(str31.equals(""));
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str36.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray44);
        assertNotNull(wildcardClass54);
        assertNotNull(wildcardClass55);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test027");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("File doesn't exist.", "Exception Caught", (int) (byte) 0, "fail_echo_write\r\nhi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test028");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read stream", "Null Pointer Exception", (int) (byte) 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test029");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        java.lang.Class<?> wildcardClass37 = strArray30.getClass();
        java.lang.String str38 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        mkdirApplication53.createFolder(strArray66);
        java.lang.String str72 = findApplication51.findFolderContent("null output stream provided fail_echo_write", strArray66);
        java.lang.Class<?> wildcardClass73 = strArray66.getClass();
        java.lang.String str74 = findApplication40.findFolderContent("null output stream provided fail_echo_write", strArray66);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication76 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication78.createFolder(strArray81);
        java.lang.String str83 = findApplication76.findFolderContent("fail_sed_write", strArray81);
        java.lang.String str84 = findApplication40.findFolderContent("null output stream provided\r\nfail_echo_write", strArray81);
        java.lang.String str85 = findApplication4.findFolderContent("File doesn't exist.", strArray81);
        java.lang.String str86 = echoApplication3.constructResult(strArray81);
        java.lang.Class<?> wildcardClass87 = strArray81.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            dateApplication0.run(strArray81, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:27"));
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray20);
        assertNotNull(strArray30);
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str36.equals(""));
        assertNotNull(wildcardClass37);
        assertTrue(str38.equals(""));
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray66);
        assertTrue(str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str72.equals(""));
        assertNotNull(wildcardClass73);
        assertTrue(str74.equals(""));
        assertNotNull(strArray81);
        assertTrue(str83.equals(""));
        assertTrue(str84.equals(""));
        assertTrue(str85.equals(""));
        assertTrue(str86.equals("fail_echo_write hi!"));
        assertNotNull(wildcardClass87);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test030");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("null output stream provided:\r\n\r\n\r\nfail_echo_write:", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test031");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write", "03-24-2019 00:07:43", (-1), inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test032");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        java.lang.String[] strArray78 = null;
        try {
            java.lang.String str79 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: no argument can be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray53);
        assertNotNull(wildcardClass57);
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str73.equals(""));
        assertTrue(str74.equals(""));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test033");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication26.findFolderContent("null input file provided", strArray50);
        java.lang.String str57 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray63);
        java.lang.Class<?> wildcardClass68 = strArray63.getClass();
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        try {
            exitApplication0.run(strArray63, inputStream69, outputStream70);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals(""));
        assertTrue(str57.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray63);
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass68);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test034");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("File is null.", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test035");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.String str32 = echoApplication3.constructResult(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        echoApplication3.run(strArray40, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = echoApplication3.constructResult(strArray50);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            pwdApplication0.run(strArray50, inputStream55, outputStream56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test036");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass1 = findApplication0.getClass();
        java.lang.String[] strArray2 = null;
        java.io.InputStream inputStream3 = null;
        java.io.OutputStream outputStream4 = null;
        try {
            findApplication0.run(strArray2, inputStream3, outputStream4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Args cannot be null for find!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(wildcardClass1);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test037");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication13.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        java.lang.Class<?> wildcardClass35 = mkdirApplication24.getClass();
        java.lang.String[] strArray40 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication24.run(strArray40, inputStream41, outputStream42);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication13.run(strArray40, inputStream44, outputStream45);
        java.lang.String str47 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        java.lang.Class<?> wildcardClass72 = mkdirApplication61.getClass();
        java.lang.String[] strArray77 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication61.run(strArray77, inputStream78, outputStream79);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication50.run(strArray77, inputStream81, outputStream82);
        java.lang.String str84 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
        java.lang.String[] strArray91 = new java.lang.String[] { "null output stream provided:\r\n\r\n\r\nfail_echo_write:", "This is a directory Could not read stream Null Pointer Exception Exception Caught", "File is null.", "Could not write to output stream", "fail_echo_write hi!", "fail_echo_empty_params" };
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            lsApplication0.run(strArray91, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.LsException; message: ls: File does not exist, make sure the path is correct!");
        } catch (sg.edu.nus.comp.cs4218.exception.LsException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray20);
        assertNotNull(strArray31);
        assertNotNull(wildcardClass35);
        assertNotNull(strArray40);
        assertTrue(str47.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertNotNull(strArray57);
        assertNotNull(strArray68);
        assertNotNull(wildcardClass72);
        assertNotNull(strArray77);
        assertTrue(str84.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertNotNull(strArray91);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test038");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_empty_params", "Null Pointer Exception", (int) (short) 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test039");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream4 = null;
        java.io.OutputStream outputStream5 = null;
        mkdirApplication0.run(strArray3, inputStream4, outputStream5);
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication7 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.lang.Class<?> wildcardClass63 = mkdirApplication52.getClass();
        java.lang.String[] strArray68 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication52.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication41.run(strArray68, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        echoApplication11.run(strArray68, inputStream75, outputStream76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.String str79 = echoApplication11.constructResult(strArray78);
        java.lang.String str80 = grepApplication7.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            mkdirApplication0.run(strArray78, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        assertNotNull(strArray3);
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertNotNull(strArray59);
        assertNotNull(wildcardClass63);
        assertNotNull(strArray68);
        assertNotNull(strArray78);
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test040");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null arguments", "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", (int) (byte) 1, "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test041");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication26.run(strArray45, inputStream51, outputStream52);
        java.lang.String str54 = findApplication15.findFolderContent("Could not read stream", strArray45);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication8.run(strArray45, inputStream55, outputStream56);
        java.lang.Class<?> wildcardClass58 = mkdirApplication8.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication62.run(strArray65, inputStream66, outputStream67);
        java.lang.String str69 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray65);
        mkdirApplication8.createFolder(strArray65);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication71.createFolder(strArray74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication8.run(strArray74, inputStream76, outputStream77);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            cdApplication0.run(strArray74, inputStream79, outputStream80);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray11);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertNotNull(strArray33);
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str54.equals(""));
        assertNotNull(wildcardClass58);
        assertNotNull(strArray65);
        assertTrue(str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray74);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test042");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication8.createFolder(strArray25);
        mkdirApplication1.createFolder(strArray25);
        java.lang.Class<?> wildcardClass32 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication1.createFolder(strArray41);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        try {
            dateApplication0.run(strArray41, inputStream48, outputStream49);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray15);
        assertNotNull(strArray25);
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass32);
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test043");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication11.findFolderContent("null output stream provided fail_echo_write", strArray26);
        java.lang.Class<?> wildcardClass33 = strArray26.getClass();
        java.lang.String str34 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication38.createFolder(strArray41);
        java.lang.String str43 = findApplication36.findFolderContent("fail_sed_write", strArray41);
        java.lang.String str44 = findApplication0.findFolderContent("null output stream provided\r\nfail_echo_write", strArray41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication46 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = findApplication49.findFolderContent("", strArray54);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        mkdirApplication60.createFolder(strArray73);
        java.lang.String str79 = findApplication49.findFolderContent("null input file provided", strArray73);
        java.lang.String str80 = lsApplication46.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication46.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        java.lang.String str91 = findApplication0.findFolderContent("", strArray86);
        java.lang.String[] strArray93 = null;
        try {
            java.lang.String str94 = findApplication0.findFolderContent("null output stream provided:\r\n\r\n\r\nfail_echo_write:", strArray93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Arguments for findFolderContent are not allowed to be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str9.equals(""));
        assertNotNull(strArray16);
        assertNotNull(strArray26);
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals(""));
        assertNotNull(wildcardClass33);
        assertTrue(str34.equals(""));
        assertNotNull(strArray41);
        assertTrue(str43.equals(""));
        assertTrue(str44.equals(""));
        assertNotNull(strArray54);
        assertTrue(str58.equals(""));
        assertNotNull(strArray63);
        assertNotNull(strArray73);
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str79.equals(""));
        assertTrue(str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray86);
        assertTrue(str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str91.equals(""));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test044");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("null output stream provided\r\nfail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test045");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication1.createFolder(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.lang.String str76 = findApplication55.findFolderContent("null output stream provided fail_echo_write", strArray70);
        java.lang.String str77 = lsApplication30.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray70);
        mkdirApplication1.createFolder(strArray70);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            exitApplication0.run(strArray70, inputStream79, outputStream80);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray12);
        assertNotNull(strArray22);
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray36);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertTrue(str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test046");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null arguments", "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", (int) '4');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test047");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.Class<?> wildcardClass13 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication21 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = echoApplication21.constructResult(strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        echoApplication21.run(strArray58, inputStream62, outputStream63);
        mkdirApplication14.createFolder(strArray58);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication1.run(strArray58, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication79 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication79.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication72.createFolder(strArray85);
        java.lang.String str91 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication1.createFolder(strArray85);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            sortApplication0.run(strArray85, inputStream93, outputStream94);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(wildcardClass13);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str50.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray58);
        assertNotNull(strArray75);
        assertNotNull(strArray85);
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test048");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.String str29 = echoApplication0.constructResult(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication41.getClass();
        java.lang.String[] strArray57 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication41.run(strArray57, inputStream58, outputStream59);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication30.run(strArray57, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        echoApplication0.run(strArray57, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication67.createFolder(strArray70);
        java.lang.String str72 = echoApplication0.constructResult(strArray70);
        java.lang.String[] strArray73 = null;
        try {
            java.lang.String str74 = echoApplication0.constructResult(strArray73);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: fail_echo_empty_params");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str29.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray37);
        assertNotNull(strArray48);
        assertNotNull(wildcardClass52);
        assertNotNull(strArray57);
        assertNotNull(strArray70);
        assertTrue(str72.equals("fail_echo_write hi!"));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test049");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "fail_sed_write", 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test050");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("hi!", "03-24-2019 00:07:43", (int) 'a', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test051");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication9.run(strArray46, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication9.constructResult(strArray56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication68.run(strArray75, inputStream76, outputStream77);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication79 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication79.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication68.createFolder(strArray85);
        mkdirApplication61.createFolder(strArray85);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        echoApplication9.run(strArray85, inputStream92, outputStream93);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            cdApplication0.run(strArray85, inputStream95, outputStream96);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str38.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray46);
        assertNotNull(strArray56);
        assertTrue(str60.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray64);
        assertNotNull(strArray75);
        assertNotNull(strArray85);
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test052");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory", "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", (int) 'a');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test053");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = findApplication43.findFolderContent("Could not read stream", strArray73);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication36.run(strArray73, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication31.run(strArray73, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray73.getClass();
        java.lang.String str90 = findApplication22.findFolderContent("", strArray73);
        mkdirApplication15.createFolder(strArray73);
        mkdirApplication4.createFolder(strArray73);
        java.lang.String str93 = findApplication2.findFolderContent("Exception Caught", strArray73);
        java.lang.Class<?> wildcardClass94 = strArray73.getClass();
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            cdApplication0.run(strArray73, inputStream95, outputStream96);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray11);
        assertNotNull(strArray18);
        assertNotNull(strArray27);
        assertTrue(str29.equals(""));
        assertNotNull(strArray34);
        assertNotNull(strArray39);
        assertNotNull(strArray48);
        assertTrue(str52.equals(""));
        assertNotNull(strArray61);
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str82.equals(""));
        assertNotNull(wildcardClass89);
        assertTrue(str90.equals(""));
        assertTrue(str93.equals(""));
        assertNotNull(wildcardClass94);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test054");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication2 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication6 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.lang.Class<?> wildcardClass62 = mkdirApplication51.getClass();
        java.lang.String[] strArray67 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication51.run(strArray67, inputStream68, outputStream69);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication40.run(strArray67, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        echoApplication10.run(strArray67, inputStream74, outputStream75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.String str78 = echoApplication10.constructResult(strArray77);
        java.lang.String str79 = grepApplication6.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
        java.lang.String str80 = grepApplication2.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray77);
        java.lang.String str81 = catApplication0.catFiles(strArray77);
        java.lang.String[] strArray82 = null;
        try {
            java.lang.String str83 = catApplication0.catFiles(strArray82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: Exception Caught");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray18);
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray47);
        assertNotNull(strArray58);
        assertNotNull(wildcardClass62);
        assertNotNull(strArray67);
        assertNotNull(strArray77);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test055");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("C:\\", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test056");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        java.lang.String str61 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication37.run(strArray56, inputStream62, outputStream63);
        java.lang.String str65 = findApplication26.findFolderContent("Could not read stream", strArray56);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication19.run(strArray56, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication14.run(strArray56, inputStream69, outputStream70);
        java.lang.Class<?> wildcardClass72 = strArray56.getClass();
        java.lang.String str73 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        try {
            exitApplication0.run(strArray56, inputStream74, outputStream75);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray7);
        assertTrue(str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray17);
        assertNotNull(strArray22);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertNotNull(strArray44);
        assertNotNull(strArray56);
        assertTrue(str60.equals(""));
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str65.equals(""));
        assertNotNull(wildcardClass72);
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test057");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("null output stream provided:\r\n\r\n\r\nnull arguments:", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test058");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        try {
            java.lang.String str6 = dateApplication0.getDate("null output stream provided:\r\n\r\n\r\nnull arguments:");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:28"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:28"));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test059");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        java.lang.String str22 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = findApplication57.findFolderContent("", strArray62);
        java.lang.String str67 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication43.run(strArray62, inputStream68, outputStream69);
        java.lang.String str71 = findApplication32.findFolderContent("Could not read stream", strArray62);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication25.run(strArray62, inputStream72, outputStream73);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication75 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray78 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication75.run(strArray78, inputStream79, outputStream80);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication82 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication85 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray88 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication85.run(strArray88, inputStream89, outputStream90);
        java.lang.String str92 = lsApplication82.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray88);
        mkdirApplication75.createFolder(strArray88);
        mkdirApplication25.createFolder(strArray88);
        java.lang.String str95 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray88);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            grepApplication0.run(strArray88, inputStream96, outputStream97);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertTrue(str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray20);
        assertTrue(str22.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray28);
        assertNotNull(strArray37);
        assertTrue(str41.equals(""));
        assertNotNull(strArray50);
        assertNotNull(strArray62);
        assertTrue(str66.equals(""));
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str71.equals(""));
        assertNotNull(strArray78);
        assertNotNull(strArray88);
        assertTrue(str92.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str95.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test060");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.lang.Class<?> wildcardClass34 = strArray27.getClass();
        java.lang.String str35 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication39.createFolder(strArray42);
        java.lang.String str44 = findApplication37.findFolderContent("fail_sed_write", strArray42);
        java.lang.String str45 = findApplication1.findFolderContent("null output stream provided\r\nfail_echo_write", strArray42);
        java.lang.String[] strArray52 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str53 = null; // flaky: findApplication1.findFolderContent("null output stream provided null arguments null output stream provided", strArray52);
        java.lang.Class<?> wildcardClass54 = strArray52.getClass();
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            sortApplication0.run(strArray52, inputStream55, outputStream56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray17);
        assertNotNull(strArray27);
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals(""));
        assertNotNull(wildcardClass34);
        assertTrue(str35.equals(""));
        assertNotNull(strArray42);
        assertTrue(str44.equals(""));
        assertTrue(str45.equals(""));
        assertNotNull(strArray52);
// flaky:         assertTrue(str53.equals(""));
        assertNotNull(wildcardClass54);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test061");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.Class<?> wildcardClass13 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication16 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication17.run(strArray36, inputStream42, outputStream43);
        java.lang.String str45 = echoApplication16.constructResult(strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = mkdirApplication57.getClass();
        java.lang.String[] strArray73 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication57.run(strArray73, inputStream74, outputStream75);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication46.run(strArray73, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        echoApplication16.run(strArray73, inputStream80, outputStream81);
        java.lang.String str83 = findApplication14.findFolderContent("fail_echo_write hi!", strArray73);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication1.run(strArray73, inputStream84, outputStream85);
        java.lang.Class<?> wildcardClass87 = strArray73.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            sedApplication0.run(strArray73, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(wildcardClass13);
        assertNotNull(strArray24);
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray53);
        assertNotNull(strArray64);
        assertNotNull(wildcardClass68);
        assertNotNull(strArray73);
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass87);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test062");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        mkdirApplication1.createFolder(strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication25.createFolder(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication25.createFolder(strArray46);
        mkdirApplication24.createFolder(strArray46);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication1.run(strArray46, inputStream55, outputStream56);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            sedApplication0.run(strArray46, inputStream58, outputStream59);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray18);
        assertTrue(str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray28);
        assertNotNull(strArray36);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test063");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        java.lang.String str15 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication34.createFolder(strArray37);
        java.lang.String str39 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication54 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.String str79 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication55.run(strArray74, inputStream80, outputStream81);
        java.lang.String str83 = echoApplication54.constructResult(strArray74);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication42.run(strArray74, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray74);
        java.lang.String str88 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray74);
        java.lang.Class<?> wildcardClass89 = strArray74.getClass();
        try {
            java.lang.String str90 = catApplication0.catFiles(strArray74);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray10);
        assertTrue(str14.equals(""));
        assertTrue(str15.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray37);
        assertTrue(str39.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray49);
        assertNotNull(wildcardClass53);
        assertNotNull(strArray62);
        assertNotNull(strArray74);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals("null output stream provided fail_echo_write"));
        assertTrue(str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str88.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(wildcardClass89);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test064");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("File is null.", "", (int) (short) -1, "Exception Caught");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test065");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication2.run(strArray33, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication38 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication50 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = findApplication53.findFolderContent("", strArray58);
        java.lang.String str63 = lsApplication50.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication39.run(strArray58, inputStream64, outputStream65);
        java.lang.String str67 = echoApplication38.constructResult(strArray58);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication68.run(strArray75, inputStream76, outputStream77);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        echoApplication38.run(strArray75, inputStream79, outputStream80);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = echoApplication38.constructResult(strArray85);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication2.run(strArray85, inputStream90, outputStream91);
        java.lang.Class<?> wildcardClass93 = strArray85.getClass();
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            lsApplication0.run(strArray85, inputStream94, outputStream95);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray33);
        assertNotNull(strArray46);
        assertNotNull(strArray58);
        assertTrue(str62.equals(""));
        assertTrue(str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str67.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray75);
        assertNotNull(strArray85);
        assertTrue(str89.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass93);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test066");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication40.createFolder(strArray43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication12.run(strArray43, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray54);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication72.run(strArray79, inputStream80, outputStream81);
        java.lang.Class<?> wildcardClass83 = mkdirApplication72.getClass();
        java.lang.String[] strArray88 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication72.run(strArray88, inputStream89, outputStream90);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        mkdirApplication61.run(strArray88, inputStream92, outputStream93);
        java.lang.String str95 = lsApplication48.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray88);
        mkdirApplication12.createFolder(strArray88);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            cdApplication0.run(strArray88, inputStream97, outputStream98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray43);
        assertNotNull(strArray54);
        assertTrue(str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray68);
        assertNotNull(strArray79);
        assertNotNull(wildcardClass83);
        assertNotNull(strArray88);
        assertTrue(str95.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test067");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication0.createFolder(strArray3);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = findApplication12.findFolderContent("Could not read stream", strArray42);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication5.run(strArray42, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication0.run(strArray42, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        java.lang.Class<?> wildcardClass69 = mkdirApplication58.getClass();
        java.lang.String[] strArray74 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication58.run(strArray74, inputStream75, outputStream76);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication0.run(strArray74, inputStream78, outputStream79);
        java.lang.String[] strArray81 = null;
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            mkdirApplication0.run(strArray81, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        assertNotNull(strArray3);
        assertNotNull(strArray8);
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertNotNull(strArray30);
        assertNotNull(strArray42);
        assertTrue(str46.equals(""));
        assertTrue(str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str51.equals(""));
        assertNotNull(strArray65);
        assertNotNull(wildcardClass69);
        assertNotNull(strArray74);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test068");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication0.createFolder(strArray17);
        java.lang.String[] strArray23 = null;
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        try {
            mkdirApplication0.run(strArray23, inputStream24, outputStream25);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test069");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication35.findFolderContent("null output stream provided fail_echo_write", strArray50);
        java.lang.String str57 = lsApplication10.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray50);
        java.lang.Class<?> wildcardClass58 = strArray50.getClass();
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        try {
            pwdApplication0.run(strArray50, inputStream59, outputStream60);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertNotNull(strArray16);
        assertNotNull(strArray26);
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals(""));
        assertTrue(str57.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(wildcardClass58);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test070");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        mkdirApplication45.createFolder(strArray58);
        java.lang.String str64 = findApplication34.findFolderContent("null input file provided", strArray58);
        java.lang.String str65 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray58);
        java.lang.String str66 = echoApplication1.constructResult(strArray58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.String str79 = findApplication70.findFolderContent("", strArray75);
        java.lang.String str80 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray75);
        java.lang.Class<?> wildcardClass81 = strArray75.getClass();
        java.lang.String str82 = echoApplication1.constructResult(strArray75);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            catApplication0.run(strArray75, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray39);
        assertTrue(str43.equals(""));
        assertNotNull(strArray48);
        assertNotNull(strArray58);
        assertTrue(str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str66.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray75);
        assertTrue(str79.equals(""));
        assertTrue(str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass81);
        assertTrue(str82.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test071");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = findApplication11.findFolderContent("", strArray16);
        java.lang.String str21 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        java.lang.Class<?> wildcardClass22 = strArray16.getClass();
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication1.run(strArray16, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication26.createFolder(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = findApplication38.findFolderContent("Could not read stream", strArray68);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication31.run(strArray68, inputStream78, outputStream79);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication26.run(strArray68, inputStream81, outputStream82);
        java.lang.Class<?> wildcardClass84 = strArray68.getClass();
        java.lang.Class<?> wildcardClass85 = strArray68.getClass();
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication1.run(strArray68, inputStream86, outputStream87);
        java.lang.Class<?> wildcardClass89 = strArray68.getClass();
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            sedApplication0.run(strArray68, inputStream90, outputStream91);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray16);
        assertTrue(str20.equals(""));
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass22);
        assertNotNull(strArray29);
        assertNotNull(strArray34);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals(""));
        assertNotNull(wildcardClass84);
        assertNotNull(wildcardClass85);
        assertNotNull(wildcardClass89);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test072");
        boolean boolean1 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.isSpecialSymbol("null output stream provided:\r\n\r\n\r\nnull arguments:");
        assertTrue(boolean1 == true);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test073");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.Class<?> wildcardClass74 = strArray72.getClass();
        java.lang.String str75 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream79 = null;
        try {
            java.lang.String str80 = wcApplication0.countFromStdin((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray53);
        assertNotNull(wildcardClass57);
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str73.equals(""));
        assertNotNull(wildcardClass74);
        assertTrue(str75.equals(""));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test074");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        java.lang.Class<?> wildcardClass2 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication31.createFolder(strArray34);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication3.run(strArray34, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication39 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = echoApplication39.constructResult(strArray59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication69.run(strArray76, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        echoApplication39.run(strArray76, inputStream80, outputStream81);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = echoApplication39.constructResult(strArray86);
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        mkdirApplication3.run(strArray86, inputStream91, outputStream92);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            lsApplication0.run(strArray86, inputStream94, outputStream95);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(wildcardClass2);
        assertNotNull(strArray10);
        assertNotNull(strArray22);
        assertTrue(str26.equals(""));
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray34);
        assertNotNull(strArray47);
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray76);
        assertNotNull(strArray86);
        assertTrue(str90.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test075");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_sed_write", "fail_echo_write hi!", (int) (byte) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test076");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        mkdirApplication11.createFolder(strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        try {
            pwdApplication0.run(strArray24, inputStream30, outputStream31);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertTrue(str10.equals("C:\\"));
        assertNotNull(strArray14);
        assertNotNull(strArray24);
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test077");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.Class<?> wildcardClass13 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication21 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = echoApplication21.constructResult(strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        echoApplication21.run(strArray58, inputStream62, outputStream63);
        mkdirApplication14.createFolder(strArray58);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication1.run(strArray58, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication79 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication79.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication72.createFolder(strArray85);
        java.lang.String str91 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication1.createFolder(strArray85);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            wcApplication0.run(strArray85, inputStream93, outputStream94);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(wildcardClass13);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str50.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray58);
        assertNotNull(strArray75);
        assertNotNull(strArray85);
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test078");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not write to output stream", "null output stream provided null arguments null output stream provided", (int) (short) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test079");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication11.findFolderContent("null output stream provided fail_echo_write", strArray26);
        java.lang.Class<?> wildcardClass33 = strArray26.getClass();
        java.lang.String str34 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        mkdirApplication49.createFolder(strArray62);
        java.lang.String str68 = findApplication47.findFolderContent("null output stream provided fail_echo_write", strArray62);
        java.lang.Class<?> wildcardClass69 = strArray62.getClass();
        java.lang.String str70 = findApplication36.findFolderContent("null output stream provided fail_echo_write", strArray62);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication72 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication74.createFolder(strArray77);
        java.lang.String str79 = findApplication72.findFolderContent("fail_sed_write", strArray77);
        java.lang.String str80 = findApplication36.findFolderContent("null output stream provided\r\nfail_echo_write", strArray77);
        java.lang.String str81 = findApplication0.findFolderContent("File doesn't exist.", strArray77);
        java.lang.String[] strArray82 = null;
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            findApplication0.run(strArray82, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Args cannot be null for find!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str9.equals(""));
        assertNotNull(strArray16);
        assertNotNull(strArray26);
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals(""));
        assertNotNull(wildcardClass33);
        assertTrue(str34.equals(""));
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertNotNull(strArray52);
        assertNotNull(strArray62);
        assertTrue(str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals(""));
        assertNotNull(wildcardClass69);
        assertTrue(str70.equals(""));
        assertNotNull(strArray77);
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test080");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Could not read file", "null arguments", (int) (short) 1, "C:\\");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test081");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided", "", (int) (byte) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test082");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication12 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication13.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication27.findFolderContent("", strArray32);
        java.lang.String str37 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray32);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication13.run(strArray32, inputStream38, outputStream39);
        java.lang.String str41 = echoApplication12.constructResult(strArray32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        echoApplication12.run(strArray49, inputStream53, outputStream54);
        mkdirApplication5.createFolder(strArray49);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        echoApplication4.run(strArray49, inputStream57, outputStream58);
        try {
            java.lang.String str60 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray49);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertNotNull(strArray32);
        assertTrue(str36.equals(""));
        assertTrue(str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str41.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray49);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test083");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read file", "Null Pointer Exception", 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test084");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        java.lang.Class<?> wildcardClass1 = echoApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication2 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication6 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.lang.Class<?> wildcardClass62 = mkdirApplication51.getClass();
        java.lang.String[] strArray67 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication51.run(strArray67, inputStream68, outputStream69);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication40.run(strArray67, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        echoApplication10.run(strArray67, inputStream74, outputStream75);
        java.lang.String[] strArray77 = new java.lang.String[] {};
        java.lang.String str78 = echoApplication10.constructResult(strArray77);
        java.lang.String str79 = grepApplication6.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
        java.lang.String str80 = grepApplication2.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            echoApplication0.run(strArray77, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: Empty arguments");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray18);
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray47);
        assertNotNull(strArray58);
        assertNotNull(wildcardClass62);
        assertNotNull(strArray67);
        assertNotNull(strArray77);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test085");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("null output stream provided\r\nfail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test086");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream4 = null;
        java.io.OutputStream outputStream5 = null;
        mkdirApplication0.run(strArray3, inputStream4, outputStream5);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication7 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = lsApplication7.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray13);
        mkdirApplication0.createFolder(strArray13);
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication0.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication26.run(strArray48, inputStream49, outputStream50);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication0.run(strArray48, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication0.getClass();
        assertNotNull(strArray3);
        assertNotNull(strArray13);
        assertTrue(str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray22);
        assertNotNull(strArray29);
        assertNotNull(strArray39);
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray48);
        assertNotNull(wildcardClass55);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test087");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Could not read file");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Could not read file: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test088");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication60.run(strArray67, inputStream68, outputStream69);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        mkdirApplication60.createFolder(strArray77);
        mkdirApplication53.createFolder(strArray77);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        echoApplication1.run(strArray77, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            catApplication0.run(strArray77, inputStream87, outputStream88);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray56);
        assertNotNull(strArray67);
        assertNotNull(strArray77);
        assertTrue(str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test089");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = findApplication31.findFolderContent("null output stream provided fail_echo_write", strArray46);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        echoApplication1.run(strArray46, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        try {
            exitApplication0.run(strArray46, inputStream56, outputStream57);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray36);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test090");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = findApplication11.findFolderContent("", strArray16);
        java.lang.String str21 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        java.lang.Class<?> wildcardClass22 = strArray16.getClass();
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication1.run(strArray16, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication26.run(strArray45, inputStream51, outputStream52);
        java.lang.Class<?> wildcardClass54 = mkdirApplication26.getClass();
        java.lang.String[] strArray56 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication26.run(strArray56, inputStream57, outputStream58);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication1.run(strArray56, inputStream60, outputStream61);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        try {
            sedApplication0.run(strArray56, inputStream63, outputStream64);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray16);
        assertTrue(str20.equals(""));
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass22);
        assertNotNull(strArray33);
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass54);
        assertNotNull(strArray56);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test091");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("fail_echo_empty_params");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\fail_echo_empty_params: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test092");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.String str29 = echoApplication0.constructResult(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        echoApplication0.run(strArray37, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = findApplication58.findFolderContent("", strArray63);
        java.lang.String str68 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication71.createFolder(strArray74);
        java.lang.String str76 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray74);
        java.lang.String str77 = findApplication44.findFolderContent("hi!", strArray74);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        echoApplication0.run(strArray74, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication81 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = findApplication81.findFolderContent("", strArray86);
        java.lang.String str91 = echoApplication0.constructResult(strArray86);
        java.lang.String[] strArray92 = null;
        try {
            java.lang.String str93 = echoApplication0.constructResult(strArray92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: fail_echo_empty_params");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str29.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray37);
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertNotNull(strArray63);
        assertTrue(str67.equals(""));
        assertTrue(str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray74);
        assertTrue(str76.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str77.equals(""));
        assertNotNull(strArray86);
        assertTrue(str90.equals(""));
        assertTrue(str91.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test093");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.lang.Class<?> wildcardClass34 = strArray27.getClass();
        java.lang.String str35 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication39.createFolder(strArray42);
        java.lang.String str44 = findApplication37.findFolderContent("fail_sed_write", strArray42);
        java.lang.String str45 = findApplication1.findFolderContent("null output stream provided\r\nfail_echo_write", strArray42);
        java.lang.String[] strArray52 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str53 = findApplication1.findFolderContent("null output stream provided null arguments null output stream provided", strArray52);
        java.lang.Class<?> wildcardClass54 = strArray52.getClass();
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            sedApplication0.run(strArray52, inputStream55, outputStream56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray17);
        assertNotNull(strArray27);
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals(""));
        assertNotNull(wildcardClass34);
        assertTrue(str35.equals(""));
        assertNotNull(strArray42);
        assertTrue(str44.equals(""));
        assertTrue(str45.equals(""));
        assertNotNull(strArray52);
        assertTrue(str53.equals(""));
        assertNotNull(wildcardClass54);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test094");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        java.lang.Class<?> wildcardClass2 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        try {
            lsApplication0.run(strArray10, inputStream14, outputStream15);
            fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(wildcardClass2);
        assertNotNull(strArray10);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test095");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication1 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass2 = wcApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        java.lang.Class<?> wildcardClass58 = mkdirApplication47.getClass();
        java.lang.String[] strArray63 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication47.run(strArray63, inputStream64, outputStream65);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication36.run(strArray63, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        echoApplication6.run(strArray63, inputStream70, outputStream71);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.String str74 = echoApplication6.constructResult(strArray73);
        java.lang.String str75 = wcApplication1.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            sedApplication0.run(strArray73, inputStream76, outputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
        assertNotNull(strArray54);
        assertNotNull(wildcardClass58);
        assertNotNull(strArray63);
        assertNotNull(strArray73);
        assertTrue(str74.equals(""));
        assertTrue(str75.equals(""));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test096");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "03-24-2019 00:07:43", (int) (short) -1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test097");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication21 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = echoApplication21.constructResult(strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        echoApplication21.run(strArray58, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = echoApplication21.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = echoApplication21.constructResult(strArray76);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication1.run(strArray76, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            catApplication0.run(strArray76, inputStream84, outputStream85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str50.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray58);
        assertNotNull(strArray68);
        assertTrue(str72.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray76);
        assertTrue(str80.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test098");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication7 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        mkdirApplication10.createFolder(strArray23);
        java.lang.String str29 = lsApplication7.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication47 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = lsApplication47.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        mkdirApplication40.createFolder(strArray53);
        java.lang.String str59 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        mkdirApplication32.createFolder(strArray53);
        java.lang.String str61 = lsApplication7.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication64 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication76 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication79 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication81.run(strArray84, inputStream85, outputStream86);
        java.lang.String str88 = findApplication79.findFolderContent("", strArray84);
        java.lang.String str89 = lsApplication76.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray84);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication65.run(strArray84, inputStream90, outputStream91);
        java.lang.String str93 = echoApplication64.constructResult(strArray84);
        java.lang.String str94 = lsApplication7.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray84);
        java.io.InputStream inputStream95 = null;
        java.io.OutputStream outputStream96 = null;
        try {
            dateApplication0.run(strArray84, inputStream95, outputStream96);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:29"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:29"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:29"));
        assertNotNull(strArray13);
        assertNotNull(strArray23);
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertNotNull(strArray43);
        assertNotNull(strArray53);
        assertTrue(str57.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray72);
        assertNotNull(strArray84);
        assertTrue(str88.equals(""));
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str93.equals("null output stream provided fail_echo_write"));
        assertTrue(str94.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test099");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication4.run(strArray12, inputStream16, outputStream17);
        try {
            java.lang.String str19 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray12);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray12);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test100");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        java.lang.Class<?> wildcardClass51 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        mkdirApplication1.createFolder(strArray58);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        try {
            exitApplication0.run(strArray58, inputStream64, outputStream65);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertNotNull(strArray26);
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals(""));
        assertNotNull(wildcardClass51);
        assertNotNull(strArray58);
        assertTrue(str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test101");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication28.createFolder(strArray31);
        java.lang.String str33 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray31);
        java.lang.String str34 = findApplication1.findFolderContent("hi!", strArray31);
        try {
            java.lang.String str35 = catApplication0.catFiles(strArray31);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertTrue(str33.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str34.equals(""));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test102");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_write hi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_echo_write hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test103");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication1 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication5 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        java.lang.Class<?> wildcardClass61 = mkdirApplication50.getClass();
        java.lang.String[] strArray66 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication50.run(strArray66, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication39.run(strArray66, inputStream70, outputStream71);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        echoApplication9.run(strArray66, inputStream73, outputStream74);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        java.lang.String str77 = echoApplication9.constructResult(strArray76);
        java.lang.String str78 = grepApplication5.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray76);
        java.lang.String str79 = grepApplication1.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            exitApplication0.run(strArray76, inputStream80, outputStream81);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str38.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray46);
        assertNotNull(strArray57);
        assertNotNull(wildcardClass61);
        assertNotNull(strArray66);
        assertNotNull(strArray76);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
        assertTrue(str79.equals(""));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test104");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = sortApplication0.sortFromStdin((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test105");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        try {
            cdApplication0.changeToDirectory("null input file provided");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\null input file provided: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass1);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test106");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication16.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = findApplication30.findFolderContent("", strArray35);
        java.lang.String str40 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication16.run(strArray35, inputStream41, outputStream42);
        java.lang.String str44 = findApplication5.findFolderContent("Could not read stream", strArray35);
        try {
            java.lang.String str45 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray35);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray10);
        assertTrue(str14.equals(""));
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertTrue(str39.equals(""));
        assertTrue(str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals(""));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test107");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.Class<?> wildcardClass13 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication16 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication17.run(strArray36, inputStream42, outputStream43);
        java.lang.String str45 = echoApplication16.constructResult(strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = mkdirApplication57.getClass();
        java.lang.String[] strArray73 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication57.run(strArray73, inputStream74, outputStream75);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication46.run(strArray73, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        echoApplication16.run(strArray73, inputStream80, outputStream81);
        java.lang.String str83 = findApplication14.findFolderContent("fail_echo_write hi!", strArray73);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication1.run(strArray73, inputStream84, outputStream85);
        java.lang.Class<?> wildcardClass87 = strArray73.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            sortApplication0.run(strArray73, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(wildcardClass13);
        assertNotNull(strArray24);
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray53);
        assertNotNull(strArray64);
        assertNotNull(wildcardClass68);
        assertNotNull(strArray73);
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass87);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test108");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read stream", "fail_echo_write\r\nhi!", (int) (short) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test109");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write hi!", "null output stream provided\r\nfail_echo_write", 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test110");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication13 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication21 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication22.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        java.lang.String str46 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication22.run(strArray41, inputStream47, outputStream48);
        java.lang.String str50 = echoApplication21.constructResult(strArray41);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        echoApplication21.run(strArray58, inputStream62, outputStream63);
        mkdirApplication14.createFolder(strArray58);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        echoApplication13.run(strArray58, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.Class<?> wildcardClass79 = strArray74.getClass();
        java.lang.String str80 = echoApplication13.constructResult(strArray74);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication1.run(strArray74, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            catApplication0.run(strArray74, inputStream84, outputStream85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str50.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray58);
        assertNotNull(strArray74);
        assertTrue(str78.equals(""));
        assertNotNull(wildcardClass79);
        assertTrue(str80.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test111");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write hi!", "This is a directory", (int) (byte) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test112");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String str45 = findApplication24.findFolderContent("null output stream provided fail_echo_write", strArray39);
        java.lang.Class<?> wildcardClass46 = strArray39.getClass();
        java.lang.String str47 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication51.createFolder(strArray54);
        java.lang.String str56 = findApplication49.findFolderContent("fail_sed_write", strArray54);
        java.lang.String str57 = findApplication13.findFolderContent("null output stream provided\r\nfail_echo_write", strArray54);
        java.lang.String[] strArray64 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str65 = findApplication13.findFolderContent("null output stream provided null arguments null output stream provided", strArray64);
        java.lang.Class<?> wildcardClass66 = strArray64.getClass();
        mkdirApplication1.createFolder(strArray64);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            sedApplication0.run(strArray64, inputStream68, outputStream69);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray18);
        assertTrue(str22.equals(""));
        assertNotNull(strArray29);
        assertNotNull(strArray39);
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals(""));
        assertNotNull(wildcardClass46);
        assertTrue(str47.equals(""));
        assertNotNull(strArray54);
        assertTrue(str56.equals(""));
        assertTrue(str57.equals(""));
        assertNotNull(strArray64);
        assertTrue(str65.equals(""));
        assertNotNull(wildcardClass66);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test113");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write", "Null Pointer Exception", (int) (short) 0, "fail_echo_write:\r\n\r\n\r\nhi!:");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test114");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication8.createFolder(strArray25);
        mkdirApplication1.createFolder(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.String str79 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication55.run(strArray74, inputStream80, outputStream81);
        java.lang.String str83 = findApplication44.findFolderContent("Could not read stream", strArray74);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication37.run(strArray74, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication32.run(strArray74, inputStream87, outputStream88);
        java.lang.Class<?> wildcardClass90 = strArray74.getClass();
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        mkdirApplication1.run(strArray74, inputStream91, outputStream92);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            catApplication0.run(strArray74, inputStream94, outputStream95);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray15);
        assertNotNull(strArray25);
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertNotNull(strArray40);
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertNotNull(strArray62);
        assertNotNull(strArray74);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass90);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test115");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication7.createFolder(strArray10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        java.lang.String str54 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication30.run(strArray49, inputStream55, outputStream56);
        java.lang.String str58 = findApplication19.findFolderContent("Could not read stream", strArray49);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication12.run(strArray49, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication7.run(strArray49, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        try {
            dateApplication0.run(strArray49, inputStream65, outputStream66);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:30"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:30"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:30"));
        assertNotNull(strArray10);
        assertNotNull(strArray15);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertNotNull(strArray37);
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str58.equals(""));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test116");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication7 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.lang.Class<?> wildcardClass63 = mkdirApplication52.getClass();
        java.lang.String[] strArray68 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication52.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication41.run(strArray68, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        echoApplication11.run(strArray68, inputStream75, outputStream76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.String str79 = echoApplication11.constructResult(strArray78);
        java.lang.String str80 = grepApplication7.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            cdApplication0.run(strArray78, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: No arguments");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertNotNull(strArray59);
        assertNotNull(wildcardClass63);
        assertNotNull(strArray68);
        assertNotNull(strArray78);
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test117");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        java.lang.String str22 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        java.lang.Class<?> wildcardClass23 = strArray17.getClass();
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication2.run(strArray17, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        java.lang.Class<?> wildcardClass38 = mkdirApplication27.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication39 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = echoApplication39.constructResult(strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication27.run(strArray59, inputStream69, outputStream70);
        java.lang.Class<?> wildcardClass72 = strArray59.getClass();
        mkdirApplication2.createFolder(strArray59);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        try {
            sortApplication0.run(strArray59, inputStream74, outputStream75);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertTrue(str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass23);
        assertNotNull(strArray34);
        assertNotNull(wildcardClass38);
        assertNotNull(strArray47);
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass72);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test118");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        try {
            cdApplication0.changeToDirectory("Terminate process.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\Terminate process.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test119");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication27 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        java.lang.String str52 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication28.run(strArray47, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication27.constructResult(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = echoApplication27.constructResult(strArray64);
        mkdirApplication1.createFolder(strArray64);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            sedApplication0.run(strArray64, inputStream70, outputStream71);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertNotNull(strArray47);
        assertTrue(str51.equals(""));
        assertTrue(str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray64);
        assertTrue(str68.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test120");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("fail_echo", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test121");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        java.lang.String str17 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        java.lang.String str25 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        java.lang.Class<?> wildcardClass39 = mkdirApplication28.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication40 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = findApplication55.findFolderContent("", strArray60);
        java.lang.String str65 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication41.run(strArray60, inputStream66, outputStream67);
        java.lang.String str69 = echoApplication40.constructResult(strArray60);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication28.run(strArray60, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray60);
        try {
            java.lang.String str74 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertTrue(str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertTrue(str25.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray35);
        assertNotNull(wildcardClass39);
        assertNotNull(strArray48);
        assertNotNull(strArray60);
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str69.equals("null output stream provided fail_echo_write"));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test122");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        java.lang.String str7 = findApplication0.findFolderContent("fail_sed_write", strArray5);
        java.lang.Class<?> wildcardClass8 = findApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication17 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication18.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        java.lang.String str42 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication18.run(strArray37, inputStream43, outputStream44);
        java.lang.String str46 = echoApplication17.constructResult(strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        echoApplication17.run(strArray54, inputStream58, outputStream59);
        mkdirApplication10.createFolder(strArray54);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        echoApplication9.run(strArray54, inputStream62, outputStream63);
        java.lang.Class<?> wildcardClass65 = strArray54.getClass();
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        try {
            findApplication0.run(strArray54, inputStream66, outputStream67);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str7.equals(""));
        assertNotNull(wildcardClass8);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertNotNull(strArray37);
        assertTrue(str41.equals(""));
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str46.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray54);
        assertNotNull(wildcardClass65);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test123");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null arguments", "null output stream provided:\r\n\r\n\r\nnull arguments:", 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test124");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        java.lang.Class<?> wildcardClass2 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.String str32 = echoApplication3.constructResult(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication33.run(strArray55, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        echoApplication3.run(strArray55, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            lsApplication0.run(strArray55, inputStream62, outputStream63);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(wildcardClass2);
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray36);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray55);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test125");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        java.lang.Class<?> wildcardClass36 = strArray28.getClass();
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        try {
            grepApplication0.run(strArray28, inputStream37, outputStream38);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass36);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test126");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.String str69 = echoApplication1.constructResult(strArray68);
        java.lang.Class<?> wildcardClass70 = strArray68.getClass();
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            sortApplication0.run(strArray68, inputStream71, outputStream72);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray49);
        assertNotNull(wildcardClass53);
        assertNotNull(strArray58);
        assertNotNull(strArray68);
        assertTrue(str69.equals(""));
        assertNotNull(wildcardClass70);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test127");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication15 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication16.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = findApplication30.findFolderContent("", strArray35);
        java.lang.String str40 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication16.run(strArray35, inputStream41, outputStream42);
        java.lang.String str44 = echoApplication15.constructResult(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        echoApplication15.run(strArray52, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication10.run(strArray52, inputStream59, outputStream60);
        java.lang.Class<?> wildcardClass62 = strArray52.getClass();
        java.lang.Class<?> wildcardClass63 = strArray52.getClass();
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        try {
            pwdApplication0.run(strArray52, inputStream64, outputStream65);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
// flaky:         assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
// flaky:         assertTrue(str4.equals("C:\\"));
// flaky:         assertTrue(str5.equals("C:\\"));
// flaky:         assertTrue(str6.equals("C:\\"));
// flaky:         assertTrue(str7.equals("C:\\"));
// flaky:         assertTrue(str8.equals("C:\\"));
// flaky:         assertTrue(str9.equals("C:\\"));
        assertNotNull(strArray13);
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertTrue(str39.equals(""));
        assertTrue(str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray52);
        assertNotNull(wildcardClass62);
        assertNotNull(wildcardClass63);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test128");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        try {
            sedApplication0.run(strArray14, inputStream20, outputStream21);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test129");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_echo_write:\r\n\r\n\r\nhi!:");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 15: fail_echo_write:\r\n\r\n\r\nhi!:\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test130");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        java.lang.String str7 = findApplication0.findFolderContent("fail_sed_write", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication8.run(strArray27, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication47 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        java.lang.String str60 = lsApplication47.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication36.run(strArray55, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication64.createFolder(strArray67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication36.run(strArray67, inputStream69, outputStream70);
        java.lang.String[] strArray77 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication36.createFolder(strArray77);
        java.lang.Class<?> wildcardClass79 = strArray77.getClass();
        mkdirApplication8.createFolder(strArray77);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            findApplication0.run(strArray77, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str7.equals(""));
        assertNotNull(strArray15);
        assertNotNull(strArray27);
        assertTrue(str31.equals(""));
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray43);
        assertNotNull(strArray55);
        assertTrue(str59.equals(""));
        assertTrue(str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray67);
        assertNotNull(strArray77);
        assertNotNull(wildcardClass79);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test131");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication50 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = lsApplication50.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        mkdirApplication43.createFolder(strArray56);
        java.lang.String str62 = findApplication32.findFolderContent("null input file provided", strArray56);
        java.lang.String str63 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray56);
        java.lang.Class<?> wildcardClass64 = strArray56.getClass();
        mkdirApplication1.createFolder(strArray56);
        try {
            java.lang.String str66 = catApplication0.catFiles(strArray56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray37);
        assertTrue(str41.equals(""));
        assertNotNull(strArray46);
        assertNotNull(strArray56);
        assertTrue(str60.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str62.equals(""));
        assertTrue(str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass64);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test132");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        java.lang.String str56 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication32.run(strArray51, inputStream57, outputStream58);
        java.lang.String str60 = findApplication21.findFolderContent("Could not read stream", strArray51);
        java.lang.String str61 = findApplication2.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray51);
        try {
            java.lang.String str62 = catApplication0.catFiles(strArray51);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str9.equals(""));
        assertNotNull(strArray16);
        assertTrue(str18.equals(""));
        assertTrue(str19.equals(""));
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertNotNull(strArray39);
        assertNotNull(strArray51);
        assertTrue(str55.equals(""));
        assertTrue(str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str60.equals(""));
        assertTrue(str61.equals(""));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test133");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication80 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = lsApplication80.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
        mkdirApplication73.createFolder(strArray86);
        java.lang.String str92 = findApplication62.findFolderContent("null input file provided", strArray86);
        java.lang.String str93 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        mkdirApplication1.createFolder(strArray86);
        try {
            java.lang.String str95 = catApplication0.catFiles(strArray86);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray9);
        assertNotNull(strArray18);
        assertTrue(str22.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
        assertNotNull(strArray67);
        assertTrue(str71.equals(""));
        assertNotNull(strArray76);
        assertNotNull(strArray86);
        assertTrue(str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str92.equals(""));
        assertTrue(str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test134");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.Class<?> wildcardClass29 = mkdirApplication1.getClass();
        java.lang.String[] strArray31 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication1.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = findApplication42.findFolderContent("Could not read stream", strArray72);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication35.run(strArray72, inputStream82, outputStream83);
        java.lang.Class<?> wildcardClass85 = mkdirApplication35.getClass();
        java.lang.String[] strArray87 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication35.createFolder(strArray87);
        mkdirApplication1.createFolder(strArray87);
        java.lang.Class<?> wildcardClass90 = strArray87.getClass();
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            grepApplication0.run(strArray87, inputStream91, outputStream92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass29);
        assertNotNull(strArray31);
        assertNotNull(strArray38);
        assertNotNull(strArray47);
        assertTrue(str51.equals(""));
        assertNotNull(strArray60);
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str81.equals(""));
        assertNotNull(wildcardClass85);
        assertNotNull(strArray87);
        assertNotNull(wildcardClass90);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test135");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        java.lang.Class<?> wildcardClass21 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        mkdirApplication22.createFolder(strArray35);
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication22.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication48 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = echoApplication48.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication78.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = echoApplication48.constructResult(strArray85);
        mkdirApplication22.createFolder(strArray85);
        mkdirApplication1.createFolder(strArray85);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            cdApplication0.run(strArray85, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray17);
        assertNotNull(wildcardClass21);
        assertNotNull(strArray25);
        assertNotNull(strArray35);
        assertTrue(str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray44);
        assertNotNull(strArray56);
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray85);
        assertTrue(str89.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test136");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("03-24-2019 00:07:43");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 13: 03-24-2019 00:07:43\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test137");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication5 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication9 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication13 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        java.lang.String str38 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication14.run(strArray33, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication13.constructResult(strArray33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        java.lang.Class<?> wildcardClass65 = mkdirApplication54.getClass();
        java.lang.String[] strArray70 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication54.run(strArray70, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication43.run(strArray70, inputStream74, outputStream75);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        echoApplication13.run(strArray70, inputStream77, outputStream78);
        java.lang.String[] strArray80 = new java.lang.String[] {};
        java.lang.String str81 = echoApplication13.constructResult(strArray80);
        java.lang.String str82 = grepApplication9.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray80);
        java.lang.String str83 = grepApplication5.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray80);
        java.lang.String str84 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray80);
        java.io.InputStream inputStream88 = null;
        try {
            java.lang.String str89 = sortApplication0.sortFromStdin((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream88);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray21);
        assertNotNull(strArray33);
        assertTrue(str37.equals(""));
        assertTrue(str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str42.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray50);
        assertNotNull(strArray61);
        assertNotNull(wildcardClass65);
        assertNotNull(strArray70);
        assertNotNull(strArray80);
        assertTrue(str81.equals(""));
        assertTrue(str82.equals(""));
        assertTrue(str83.equals(""));
        assertTrue(str84.equals(""));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test138");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication25 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication26.run(strArray45, inputStream51, outputStream52);
        java.lang.String str54 = echoApplication25.constructResult(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication66.run(strArray73, inputStream74, outputStream75);
        java.lang.Class<?> wildcardClass77 = mkdirApplication66.getClass();
        java.lang.String[] strArray82 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication66.run(strArray82, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication55.run(strArray82, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        echoApplication25.run(strArray82, inputStream89, outputStream90);
        java.lang.String str92 = findApplication2.findFolderContent("fail_echo_write:\r\n\r\n\r\nhi!:", strArray82);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            sortApplication0.run(strArray82, inputStream93, outputStream94);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals(""));
        assertNotNull(strArray33);
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str54.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray62);
        assertNotNull(strArray73);
        assertNotNull(wildcardClass77);
        assertNotNull(strArray82);
        assertTrue(str92.equals(""));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test139");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication5.createFolder(strArray8);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        echoApplication10.run(strArray47, inputStream51, outputStream52);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication5.run(strArray47, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            dateApplication0.run(strArray47, inputStream57, outputStream58);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:31"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:31"));
        assertNotNull(strArray8);
        assertNotNull(strArray18);
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray47);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test140");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.lang.Class<?> wildcardClass49 = mkdirApplication38.getClass();
        java.lang.String[] strArray54 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication38.run(strArray54, inputStream55, outputStream56);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication27.run(strArray54, inputStream58, outputStream59);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication1.run(strArray54, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        try {
            catApplication0.run(strArray54, inputStream64, outputStream65);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(strArray34);
        assertNotNull(strArray45);
        assertNotNull(wildcardClass49);
        assertNotNull(strArray54);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test141");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "null output stream provided fail_echo_write", (int) '#');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test142");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not write to output stream", "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test143");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "fail_echo", (int) 'a');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test144");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication5.createFolder(strArray8);
        java.lang.String str10 = findApplication3.findFolderContent("fail_sed_write", strArray8);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        java.lang.String str19 = findApplication12.findFolderContent("fail_sed_write", strArray17);
        java.lang.String str20 = findApplication3.findFolderContent("null input file provided", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication24.createFolder(strArray27);
        java.lang.String str29 = findApplication22.findFolderContent("fail_sed_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.lang.String str38 = findApplication31.findFolderContent("fail_sed_write", strArray36);
        java.lang.String str39 = findApplication22.findFolderContent("null input file provided", strArray36);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        mkdirApplication55.createFolder(strArray68);
        java.lang.String str74 = findApplication44.findFolderContent("null input file provided", strArray68);
        java.lang.String str75 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray81);
        java.lang.String str86 = findApplication22.findFolderContent("Could not read file", strArray81);
        java.lang.String str87 = findApplication3.findFolderContent("", strArray81);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            dateApplication0.run(strArray81, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:31"));
        assertNotNull(strArray8);
        assertTrue(str10.equals(""));
        assertNotNull(strArray17);
        assertTrue(str19.equals(""));
        assertTrue(str20.equals(""));
        assertNotNull(strArray27);
        assertTrue(str29.equals(""));
        assertNotNull(strArray36);
        assertTrue(str38.equals(""));
        assertTrue(str39.equals(""));
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertNotNull(strArray58);
        assertNotNull(strArray68);
        assertTrue(str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str74.equals(""));
        assertTrue(str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray81);
        assertTrue(str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str86.equals(""));
        assertTrue(str87.equals(""));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test145");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication18.createFolder(strArray21);
        java.lang.String str23 = findApplication16.findFolderContent("fail_sed_write", strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication25.createFolder(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication48.run(strArray55, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        java.lang.String str72 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication48.run(strArray67, inputStream73, outputStream74);
        java.lang.String str76 = findApplication37.findFolderContent("Could not read stream", strArray67);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication30.run(strArray67, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication25.run(strArray67, inputStream80, outputStream81);
        java.lang.Class<?> wildcardClass83 = strArray67.getClass();
        java.lang.String str84 = findApplication16.findFolderContent("", strArray67);
        java.lang.String str85 = findApplication14.findFolderContent("", strArray67);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            cdApplication0.run(strArray67, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray21);
        assertTrue(str23.equals(""));
        assertNotNull(strArray28);
        assertNotNull(strArray33);
        assertNotNull(strArray42);
        assertTrue(str46.equals(""));
        assertNotNull(strArray55);
        assertNotNull(strArray67);
        assertTrue(str71.equals(""));
        assertTrue(str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str76.equals(""));
        assertNotNull(wildcardClass83);
        assertTrue(str84.equals(""));
        assertTrue(str85.equals(""));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test146");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = findApplication31.findFolderContent("null output stream provided fail_echo_write", strArray46);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        echoApplication1.run(strArray46, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication1.run(strArray70, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray70.getClass();
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            exitApplication0.run(strArray70, inputStream80, outputStream81);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray36);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
        assertNotNull(wildcardClass56);
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertTrue(str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass79);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test147");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        try {
            grepApplication0.run(strArray6, inputStream11, outputStream12);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test148");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Terminate process.", "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", (-1), inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test149");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        java.lang.Class<?> wildcardClass27 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication28.createFolder(strArray31);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication1.run(strArray31, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication46 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = lsApplication46.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray52);
        mkdirApplication39.createFolder(strArray52);
        java.lang.String str58 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray52);
        mkdirApplication1.createFolder(strArray52);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        try {
            exitApplication0.run(strArray52, inputStream60, outputStream61);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(wildcardClass27);
        assertNotNull(strArray31);
        assertNotNull(strArray42);
        assertNotNull(strArray52);
        assertTrue(str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test150");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", 100);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test151");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write hi!", "03-24-2019 00:07:43", (int) (byte) 1, "This is a directory");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test152");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication35.findFolderContent("null output stream provided fail_echo_write", strArray50);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        echoApplication5.run(strArray50, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = strArray50.getClass();
        try {
            java.lang.String str61 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray50);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals(""));
        assertNotNull(wildcardClass60);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test153");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.String str29 = echoApplication0.constructResult(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        echoApplication0.run(strArray37, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = echoApplication0.constructResult(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = echoApplication0.constructResult(strArray55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        mkdirApplication60.createFolder(strArray73);
        java.lang.String[] strArray82 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication60.run(strArray82, inputStream83, outputStream84);
        java.lang.Class<?> wildcardClass86 = strArray82.getClass();
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        echoApplication0.run(strArray82, inputStream87, outputStream88);
        java.lang.String[] strArray90 = null;
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            echoApplication0.run(strArray90, inputStream91, outputStream92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: Empty arguments");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str29.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray37);
        assertNotNull(strArray47);
        assertTrue(str51.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray55);
        assertTrue(str59.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray63);
        assertNotNull(strArray73);
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray82);
        assertNotNull(wildcardClass86);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test154");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication26.findFolderContent("null input file provided", strArray50);
        java.lang.String str57 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray63);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            sedApplication0.run(strArray63, inputStream68, outputStream69);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals(""));
        assertTrue(str57.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray63);
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test155");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test156");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Could not write to output stream", "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", (int) (short) 0, "This is a directory Could not read stream Null Pointer Exception Exception Caught");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test157");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            dateApplication0.run(strArray6, inputStream9, outputStream10);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str8.equals(""));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test158");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication3.findFolderContent("null input file provided", strArray27);
        java.lang.String str34 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray40);
        java.lang.String[] strArray45 = null;
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            lsApplication0.run(strArray45, inputStream46, outputStream47);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertNotNull(strArray17);
        assertNotNull(strArray27);
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray40);
        assertTrue(str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test159");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication43 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = lsApplication43.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        mkdirApplication36.createFolder(strArray49);
        java.lang.String str55 = findApplication25.findFolderContent("null input file provided", strArray49);
        java.lang.String str56 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication57 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication62.run(strArray65, inputStream66, outputStream67);
        java.lang.String str69 = findApplication60.findFolderContent("", strArray65);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication78 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication81.run(strArray84, inputStream85, outputStream86);
        java.lang.String str88 = lsApplication78.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray84);
        mkdirApplication71.createFolder(strArray84);
        java.lang.String str90 = findApplication60.findFolderContent("null input file provided", strArray84);
        java.lang.String str91 = lsApplication57.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray84);
        java.lang.Class<?> wildcardClass92 = strArray84.getClass();
        java.lang.Class<?> wildcardClass93 = strArray84.getClass();
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            lsApplication0.run(strArray84, inputStream94, outputStream95);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray6);
        assertNotNull(strArray16);
        assertTrue(str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertNotNull(strArray39);
        assertNotNull(strArray49);
        assertTrue(str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str55.equals(""));
        assertTrue(str56.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray65);
        assertTrue(str69.equals(""));
        assertNotNull(strArray74);
        assertNotNull(strArray84);
        assertTrue(str88.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str90.equals(""));
        assertTrue(str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass92);
        assertNotNull(wildcardClass93);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test160");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("", "null output stream provided\r\nfail_echo_write", (int) (short) -1, "fail_echo_write\r\nhi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test161");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided null arguments null output stream provided", "null output stream provided\r\nfail_echo_write", (int) (byte) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test162");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("fail_echo_write\r\nhi!", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test163");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided null arguments null output stream provided", "fail_echo_write:\r\n\r\n\r\nhi!:", 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test164");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication2 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = lsApplication2.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        java.lang.Class<?> wildcardClass37 = mkdirApplication26.getClass();
        java.lang.String[] strArray42 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication26.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication15.run(strArray42, inputStream46, outputStream47);
        java.lang.String str49 = lsApplication2.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication1.run(strArray42, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication54 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.String str79 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication55.run(strArray74, inputStream80, outputStream81);
        java.lang.String str83 = echoApplication54.constructResult(strArray74);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray91 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        mkdirApplication84.run(strArray91, inputStream92, outputStream93);
        java.lang.String str95 = echoApplication54.constructResult(strArray91);
        java.lang.String str96 = echoApplication1.constructResult(strArray91);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            exitApplication0.run(strArray91, inputStream97, outputStream98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray22);
        assertNotNull(strArray33);
        assertNotNull(wildcardClass37);
        assertNotNull(strArray42);
        assertTrue(str49.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertNotNull(wildcardClass53);
        assertNotNull(strArray62);
        assertNotNull(strArray74);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray91);
        assertTrue(str95.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        assertTrue(str96.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test165");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray28);
        java.lang.Class<?> wildcardClass35 = strArray28.getClass();
        java.lang.String str36 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray28);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        try {
            wcApplication0.run(strArray28, inputStream37, outputStream38);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str11.equals(""));
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals(""));
        assertNotNull(wildcardClass35);
        assertTrue(str36.equals(""));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test166");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "", "", (int) '#');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test167");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication28.createFolder(strArray41);
        java.lang.String str47 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        mkdirApplication61.createFolder(strArray74);
        java.lang.String str80 = findApplication50.findFolderContent("null input file provided", strArray74);
        java.lang.String str81 = lsApplication25.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray74);
        java.lang.String str82 = findApplication2.findFolderContent("Terminate process.", strArray74);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            catApplication0.run(strArray74, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray41);
        assertTrue(str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray55);
        assertTrue(str59.equals(""));
        assertNotNull(strArray64);
        assertNotNull(strArray74);
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str80.equals(""));
        assertTrue(str81.equals("null output stream provided\r\nfail_echo_write"));
        assertTrue(str82.equals(""));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test168");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        mkdirApplication45.createFolder(strArray58);
        java.lang.String str64 = findApplication34.findFolderContent("null input file provided", strArray58);
        java.lang.String str65 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray58);
        java.lang.String str66 = echoApplication1.constructResult(strArray58);
        java.lang.Class<?> wildcardClass67 = echoApplication1.getClass();
        java.lang.Class<?> wildcardClass68 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication69.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = echoApplication1.constructResult(strArray76);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            dateApplication0.run(strArray76, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray39);
        assertTrue(str43.equals(""));
        assertNotNull(strArray48);
        assertNotNull(strArray58);
        assertTrue(str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str66.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass67);
        assertNotNull(wildcardClass68);
        assertNotNull(strArray76);
        assertTrue(str80.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test169");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Could not read file", "fail_sed_write", (int) 'a', "fail_echo_write:\r\n\r\n\r\nhi!:");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test170");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        try {
            java.lang.String str23 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray17);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test171");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication16.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication27.run(strArray34, inputStream35, outputStream36);
        java.lang.Class<?> wildcardClass38 = mkdirApplication27.getClass();
        java.lang.String[] strArray43 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication27.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication16.run(strArray43, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication3.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray43);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        echoApplication2.run(strArray43, inputStream51, outputStream52);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        try {
            catApplication0.run(strArray43, inputStream54, outputStream55);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(strArray34);
        assertNotNull(wildcardClass38);
        assertNotNull(strArray43);
        assertTrue(str50.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test172");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication79.run(strArray82, inputStream83, outputStream84);
        java.lang.Class<?> wildcardClass86 = strArray82.getClass();
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        try {
            grepApplication0.run(strArray82, inputStream87, outputStream88);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
        assertNotNull(strArray82);
        assertNotNull(wildcardClass86);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test173");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication81.createFolder(strArray84);
        java.lang.String str86 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray84);
        java.lang.String str87 = findApplication54.findFolderContent("hi!", strArray84);
        java.lang.String str88 = echoApplication2.constructResult(strArray84);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            catApplication0.run(strArray84, inputStream89, outputStream90);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray10);
        assertNotNull(strArray22);
        assertTrue(str26.equals(""));
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str31.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray39);
        assertNotNull(strArray49);
        assertTrue(str53.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray84);
        assertTrue(str86.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str87.equals(""));
        assertTrue(str88.equals("fail_echo_write hi!"));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test174");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = findApplication10.findFolderContent("", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        mkdirApplication21.createFolder(strArray34);
        java.lang.String str40 = findApplication10.findFolderContent("null input file provided", strArray34);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        try {
            pwdApplication0.run(strArray34, inputStream41, outputStream42);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertNotNull(strArray15);
        assertTrue(str19.equals(""));
        assertNotNull(strArray24);
        assertNotNull(strArray34);
        assertTrue(str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals(""));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test175");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication16.createFolder(strArray19);
        java.lang.String str21 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        java.lang.Class<?> wildcardClass35 = mkdirApplication24.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication36 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        java.lang.String str61 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication37.run(strArray56, inputStream62, outputStream63);
        java.lang.String str65 = echoApplication36.constructResult(strArray56);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication24.run(strArray56, inputStream66, outputStream67);
        java.lang.String str69 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication70.run(strArray77, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = mkdirApplication70.getClass();
        java.lang.String[] strArray86 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication70.run(strArray86, inputStream87, outputStream88);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            lsApplication0.run(strArray86, inputStream90, outputStream91);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray19);
        assertTrue(str21.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray31);
        assertNotNull(wildcardClass35);
        assertNotNull(strArray44);
        assertNotNull(strArray56);
        assertTrue(str60.equals(""));
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str65.equals("null output stream provided fail_echo_write"));
        assertTrue(str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray77);
        assertNotNull(wildcardClass81);
        assertNotNull(strArray86);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test176");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "", "File doesn't exist.", (int) (byte) 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test177");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication5.createFolder(strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication5.run(strArray13, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication5.run(strArray23, inputStream27, outputStream28);
        try {
            java.lang.String str30 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray8);
        assertNotNull(strArray13);
        assertNotNull(strArray23);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test178");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write\r\nhi!", "null output stream provided fail_echo_write", (int) (byte) 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test179");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication58 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
        mkdirApplication51.createFolder(strArray64);
        java.lang.String str70 = findApplication49.findFolderContent("null output stream provided fail_echo_write", strArray64);
        java.lang.Class<?> wildcardClass71 = strArray64.getClass();
        java.lang.String str72 = findApplication38.findFolderContent("null output stream provided fail_echo_write", strArray64);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication76.createFolder(strArray79);
        java.lang.String str81 = findApplication74.findFolderContent("fail_sed_write", strArray79);
        java.lang.String str82 = findApplication38.findFolderContent("null output stream provided\r\nfail_echo_write", strArray79);
        java.lang.String str83 = findApplication15.findFolderContent("Could not write to output stream", strArray79);
        java.lang.Class<?> wildcardClass84 = strArray79.getClass();
        mkdirApplication4.createFolder(strArray79);
        try {
            java.lang.String str86 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray11);
        assertNotNull(strArray20);
        assertNotNull(strArray30);
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str36.equals(""));
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertNotNull(strArray54);
        assertNotNull(strArray64);
        assertTrue(str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str70.equals(""));
        assertNotNull(wildcardClass71);
        assertTrue(str72.equals(""));
        assertNotNull(strArray79);
        assertTrue(str81.equals(""));
        assertTrue(str82.equals(""));
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass84);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test180");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        try {
            cdApplication0.run(strArray44, inputStream54, outputStream55);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertNotNull(strArray32);
        assertNotNull(strArray44);
        assertTrue(str48.equals(""));
        assertTrue(str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str53.equals(""));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test181");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        java.lang.String str17 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        java.lang.String str25 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray23);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray54);
        mkdirApplication41.createFolder(strArray54);
        java.lang.String str60 = findApplication39.findFolderContent("null output stream provided fail_echo_write", strArray54);
        java.lang.Class<?> wildcardClass61 = strArray54.getClass();
        java.lang.String str62 = findApplication28.findFolderContent("null output stream provided fail_echo_write", strArray54);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication64 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication66.createFolder(strArray69);
        java.lang.String str71 = findApplication64.findFolderContent("fail_sed_write", strArray69);
        java.lang.String str72 = findApplication28.findFolderContent("null output stream provided\r\nfail_echo_write", strArray69);
        java.lang.String[] strArray79 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str80 = findApplication28.findFolderContent("null output stream provided null arguments null output stream provided", strArray79);
        java.lang.Class<?> wildcardClass81 = strArray79.getClass();
        java.lang.Class<?> wildcardClass82 = strArray79.getClass();
        java.lang.String str83 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray79);
        try {
            java.lang.String str84 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertTrue(str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertTrue(str25.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray33);
        assertTrue(str37.equals(""));
        assertNotNull(strArray44);
        assertNotNull(strArray54);
        assertTrue(str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str60.equals(""));
        assertNotNull(wildcardClass61);
        assertTrue(str62.equals(""));
        assertNotNull(strArray69);
        assertTrue(str71.equals(""));
        assertTrue(str72.equals(""));
        assertNotNull(strArray79);
        assertTrue(str80.equals(""));
        assertNotNull(wildcardClass81);
        assertNotNull(wildcardClass82);
        assertTrue(str83.equals("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:"));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test182");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        java.lang.Class<?> wildcardClass49 = strArray42.getClass();
        try {
            java.lang.String str50 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(wildcardClass49);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test183");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.lang.Class<?> wildcardClass34 = strArray27.getClass();
        java.lang.String str35 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        java.lang.String str61 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication37.run(strArray56, inputStream62, outputStream63);
        java.lang.Class<?> wildcardClass65 = mkdirApplication37.getClass();
        java.lang.String[] strArray67 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication37.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication1.findFolderContent("Could not read stream", strArray67);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            exitApplication0.run(strArray67, inputStream72, outputStream73);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray17);
        assertNotNull(strArray27);
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals(""));
        assertNotNull(wildcardClass34);
        assertTrue(str35.equals(""));
        assertNotNull(strArray44);
        assertNotNull(strArray56);
        assertTrue(str60.equals(""));
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass65);
        assertNotNull(strArray67);
        assertTrue(str71.equals(""));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test184");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication25.createFolder(strArray28);
        java.lang.String str30 = findApplication23.findFolderContent("fail_sed_write", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.String str79 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication55.run(strArray74, inputStream80, outputStream81);
        java.lang.String str83 = findApplication44.findFolderContent("Could not read stream", strArray74);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication37.run(strArray74, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication32.run(strArray74, inputStream87, outputStream88);
        java.lang.Class<?> wildcardClass90 = strArray74.getClass();
        java.lang.String str91 = findApplication23.findFolderContent("", strArray74);
        mkdirApplication16.createFolder(strArray74);
        mkdirApplication5.createFolder(strArray74);
        java.lang.String str94 = findApplication3.findFolderContent("Exception Caught", strArray74);
        java.lang.Class<?> wildcardClass95 = strArray74.getClass();
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            dateApplication0.run(strArray74, inputStream96, outputStream97);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:33"));
        assertNotNull(strArray12);
        assertNotNull(strArray19);
        assertNotNull(strArray28);
        assertTrue(str30.equals(""));
        assertNotNull(strArray35);
        assertNotNull(strArray40);
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertNotNull(strArray62);
        assertNotNull(strArray74);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass90);
        assertTrue(str91.equals(""));
        assertTrue(str94.equals(""));
        assertNotNull(wildcardClass95);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test185");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        try {
            cdApplication0.changeToDirectory("fail_echo_write hi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_echo_write hi!: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass1);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test186");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        echoApplication11.run(strArray48, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = echoApplication11.constructResult(strArray58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication73 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        java.lang.String str83 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        mkdirApplication66.createFolder(strArray79);
        java.lang.String str85 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        echoApplication11.run(strArray79, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            cdApplication0.run(strArray79, inputStream89, outputStream90);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertNotNull(strArray58);
        assertTrue(str62.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray69);
        assertNotNull(strArray79);
        assertTrue(str83.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test187");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null arguments", "", 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test188");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided fail_echo_write", "hi!", (int) '#');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test189");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.lang.String[] strArray77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromFiles("File is null.", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: filesNames is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test190");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        java.lang.String str24 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication0.run(strArray19, inputStream25, outputStream26);
        java.lang.Class<?> wildcardClass28 = mkdirApplication0.getClass();
        java.lang.Class<?> wildcardClass29 = mkdirApplication0.getClass();
        java.lang.Class<?> wildcardClass30 = mkdirApplication0.getClass();
        assertNotNull(strArray7);
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass28);
        assertNotNull(wildcardClass29);
        assertNotNull(wildcardClass30);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test191");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory", "Could not write to output stream", 0, "null output stream provided\r\nfail_echo_write");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test192");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 9: fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test193");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication21.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.lang.Class<?> wildcardClass43 = mkdirApplication32.getClass();
        java.lang.String[] strArray48 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication32.run(strArray48, inputStream49, outputStream50);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication21.run(strArray48, inputStream52, outputStream53);
        java.lang.String str55 = lsApplication8.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication69.run(strArray76, inputStream77, outputStream78);
        java.lang.Class<?> wildcardClass80 = mkdirApplication69.getClass();
        java.lang.String[] strArray85 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication69.run(strArray85, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication58.run(strArray85, inputStream89, outputStream90);
        java.lang.String str92 = lsApplication8.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray85);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            pwdApplication0.run(strArray85, inputStream93, outputStream94);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str2.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str6.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str7.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray28);
        assertNotNull(strArray39);
        assertNotNull(wildcardClass43);
        assertNotNull(strArray48);
        assertTrue(str55.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertNotNull(strArray65);
        assertNotNull(strArray76);
        assertNotNull(wildcardClass80);
        assertNotNull(strArray85);
        assertTrue(str92.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test194");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        try {
            java.lang.String str35 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray25);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test195");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication23.run(strArray30, inputStream31, outputStream32);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        java.lang.String str47 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication23.run(strArray42, inputStream48, outputStream49);
        java.lang.String str51 = findApplication12.findFolderContent("Could not read stream", strArray42);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication5.run(strArray42, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication5.getClass();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication5.createFolder(strArray57);
        mkdirApplication4.createFolder(strArray57);
        try {
            java.lang.String str60 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray57);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertNotNull(strArray30);
        assertNotNull(strArray42);
        assertTrue(str46.equals(""));
        assertTrue(str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str51.equals(""));
        assertNotNull(wildcardClass55);
        assertNotNull(strArray57);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test196");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        java.lang.String str7 = findApplication0.findFolderContent("fail_sed_write", strArray5);
        java.lang.Class<?> wildcardClass8 = findApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        mkdirApplication22.createFolder(strArray35);
        java.lang.String str41 = findApplication20.findFolderContent("null output stream provided fail_echo_write", strArray35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication63 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication63.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray69);
        mkdirApplication56.createFolder(strArray69);
        java.lang.String str75 = findApplication54.findFolderContent("null output stream provided fail_echo_write", strArray69);
        java.lang.Class<?> wildcardClass76 = strArray69.getClass();
        java.lang.String str77 = findApplication43.findFolderContent("null output stream provided fail_echo_write", strArray69);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication79 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication81.createFolder(strArray84);
        java.lang.String str86 = findApplication79.findFolderContent("fail_sed_write", strArray84);
        java.lang.String str87 = findApplication43.findFolderContent("null output stream provided\r\nfail_echo_write", strArray84);
        java.lang.String str88 = findApplication20.findFolderContent("Could not write to output stream", strArray84);
        java.lang.Class<?> wildcardClass89 = strArray84.getClass();
        mkdirApplication9.createFolder(strArray84);
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            findApplication0.run(strArray84, inputStream91, outputStream92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str7.equals(""));
        assertNotNull(wildcardClass8);
        assertNotNull(strArray16);
        assertNotNull(strArray25);
        assertNotNull(strArray35);
        assertTrue(str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str41.equals(""));
        assertNotNull(strArray48);
        assertTrue(str52.equals(""));
        assertNotNull(strArray59);
        assertNotNull(strArray69);
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str75.equals(""));
        assertNotNull(wildcardClass76);
        assertTrue(str77.equals(""));
        assertNotNull(strArray84);
        assertTrue(str86.equals(""));
        assertTrue(str87.equals(""));
        assertTrue(str88.equals(""));
        assertNotNull(wildcardClass89);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test197");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication8.run(strArray45, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = echoApplication8.constructResult(strArray55);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication60 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication72 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication75 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication77 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray80 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication77.run(strArray80, inputStream81, outputStream82);
        java.lang.String str84 = findApplication75.findFolderContent("", strArray80);
        java.lang.String str85 = lsApplication72.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray80);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication61.run(strArray80, inputStream86, outputStream87);
        java.lang.String str89 = echoApplication60.constructResult(strArray80);
        java.lang.Class<?> wildcardClass90 = strArray80.getClass();
        java.lang.String str91 = echoApplication8.constructResult(strArray80);
        java.lang.Class<?> wildcardClass92 = strArray80.getClass();
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            pwdApplication0.run(strArray80, inputStream93, outputStream94);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray55);
        assertTrue(str59.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray68);
        assertNotNull(strArray80);
        assertTrue(str84.equals(""));
        assertTrue(str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str89.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass90);
        assertTrue(str91.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass92);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test198");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        mkdirApplication38.createFolder(strArray51);
        java.lang.String str57 = findApplication36.findFolderContent("null output stream provided fail_echo_write", strArray51);
        java.lang.Class<?> wildcardClass58 = strArray51.getClass();
        java.lang.String str59 = findApplication25.findFolderContent("null output stream provided fail_echo_write", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication61 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication63.createFolder(strArray66);
        java.lang.String str68 = findApplication61.findFolderContent("fail_sed_write", strArray66);
        java.lang.String str69 = findApplication25.findFolderContent("null output stream provided\r\nfail_echo_write", strArray66);
        java.lang.String str70 = findApplication2.findFolderContent("Could not write to output stream", strArray66);
        java.lang.Class<?> wildcardClass71 = strArray66.getClass();
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        try {
            catApplication0.run(strArray66, inputStream72, outputStream73);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals(""));
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertNotNull(strArray41);
        assertNotNull(strArray51);
        assertTrue(str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str57.equals(""));
        assertNotNull(wildcardClass58);
        assertTrue(str59.equals(""));
        assertNotNull(strArray66);
        assertTrue(str68.equals(""));
        assertTrue(str69.equals(""));
        assertTrue(str70.equals(""));
        assertNotNull(wildcardClass71);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test199");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        java.lang.Class<?> wildcardClass10 = findApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        echoApplication11.run(strArray48, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = echoApplication11.constructResult(strArray58);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = echoApplication11.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication74 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication77 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication79.run(strArray82, inputStream83, outputStream84);
        java.lang.String str86 = findApplication77.findFolderContent("", strArray82);
        java.lang.String str87 = lsApplication74.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray82);
        java.lang.Class<?> wildcardClass88 = strArray82.getClass();
        java.lang.String str89 = echoApplication11.constructResult(strArray82);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            findApplication0.run(strArray82, inputStream90, outputStream91);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str9.equals(""));
        assertNotNull(wildcardClass10);
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertNotNull(strArray58);
        assertTrue(str62.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray82);
        assertTrue(str86.equals(""));
        assertTrue(str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass88);
        assertTrue(str89.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test200");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication11.findFolderContent("null output stream provided fail_echo_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        mkdirApplication47.createFolder(strArray60);
        java.lang.String str66 = findApplication45.findFolderContent("null output stream provided fail_echo_write", strArray60);
        java.lang.Class<?> wildcardClass67 = strArray60.getClass();
        java.lang.String str68 = findApplication34.findFolderContent("null output stream provided fail_echo_write", strArray60);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication72.createFolder(strArray75);
        java.lang.String str77 = findApplication70.findFolderContent("fail_sed_write", strArray75);
        java.lang.String str78 = findApplication34.findFolderContent("null output stream provided\r\nfail_echo_write", strArray75);
        java.lang.String str79 = findApplication11.findFolderContent("Could not write to output stream", strArray75);
        java.lang.Class<?> wildcardClass80 = strArray75.getClass();
        mkdirApplication0.createFolder(strArray75);
        java.lang.String[] strArray82 = null;
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            mkdirApplication0.run(strArray82, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray16);
        assertNotNull(strArray26);
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals(""));
        assertNotNull(strArray39);
        assertTrue(str43.equals(""));
        assertNotNull(strArray50);
        assertNotNull(strArray60);
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str66.equals(""));
        assertNotNull(wildcardClass67);
        assertTrue(str68.equals(""));
        assertNotNull(strArray75);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
        assertTrue(str79.equals(""));
        assertNotNull(wildcardClass80);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test201");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) (short) 1, "");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test202");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = findApplication53.findFolderContent("", strArray58);
        java.lang.String str63 = echoApplication1.constructResult(strArray58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.lang.Class<?> wildcardClass78 = strArray72.getClass();
        java.lang.String str79 = echoApplication1.constructResult(strArray72);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        try {
            sortApplication0.run(strArray72, inputStream80, outputStream81);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray58);
        assertTrue(str62.equals(""));
        assertTrue(str63.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass78);
        assertTrue(str79.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test203");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_empty_params", "Could not read stream", (int) (short) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test204");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "null output stream provided\r\nfail_echo_write", 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test205");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.Class<?> wildcardClass35 = mkdirApplication7.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication36 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        java.lang.String str61 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication37.run(strArray56, inputStream62, outputStream63);
        java.lang.String str65 = echoApplication36.constructResult(strArray56);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication66 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication75 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = lsApplication75.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray81);
        mkdirApplication68.createFolder(strArray81);
        java.lang.String str87 = findApplication66.findFolderContent("null output stream provided fail_echo_write", strArray81);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        echoApplication36.run(strArray81, inputStream88, outputStream89);
        java.lang.Class<?> wildcardClass91 = strArray81.getClass();
        java.lang.Class<?> wildcardClass92 = strArray81.getClass();
        mkdirApplication7.createFolder(strArray81);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            cdApplication0.run(strArray81, inputStream94, outputStream95);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass35);
        assertNotNull(strArray44);
        assertNotNull(strArray56);
        assertTrue(str60.equals(""));
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str65.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray71);
        assertNotNull(strArray81);
        assertTrue(str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str87.equals(""));
        assertNotNull(wildcardClass91);
        assertNotNull(wildcardClass92);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test206");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray42);
        mkdirApplication29.createFolder(strArray42);
        java.lang.String str48 = findApplication18.findFolderContent("null input file provided", strArray42);
        java.lang.String str49 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray55);
        mkdirApplication4.createFolder(strArray55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication61.run(strArray68, inputStream69, outputStream70);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication72 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication75 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray78 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication75.run(strArray78, inputStream79, outputStream80);
        java.lang.String str82 = lsApplication72.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray78);
        mkdirApplication61.createFolder(strArray78);
        mkdirApplication4.createFolder(strArray78);
        try {
            java.lang.String str85 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray78);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertNotNull(strArray32);
        assertNotNull(strArray42);
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str48.equals(""));
        assertTrue(str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray55);
        assertTrue(str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray68);
        assertNotNull(strArray78);
        assertTrue(str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test207");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        mkdirApplication2.createFolder(strArray19);
        try {
            java.lang.String str25 = catApplication0.catFiles(strArray19);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(strArray19);
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test208");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication1.run(strArray43, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication55.createFolder(strArray58);
        java.lang.String str60 = findApplication53.findFolderContent("fail_sed_write", strArray58);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication64.createFolder(strArray67);
        java.lang.String str69 = findApplication62.findFolderContent("fail_sed_write", strArray67);
        java.lang.String str70 = findApplication53.findFolderContent("null input file provided", strArray67);
        mkdirApplication1.createFolder(strArray67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray75.getClass();
        mkdirApplication1.createFolder(strArray75);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            sedApplication0.run(strArray75, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
        assertNotNull(strArray58);
        assertTrue(str60.equals(""));
        assertNotNull(strArray67);
        assertTrue(str69.equals(""));
        assertTrue(str70.equals(""));
        assertNotNull(strArray75);
        assertNotNull(wildcardClass79);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test209");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided fail_echo_write", "Could not read file", "", "C:\\", "Could not read stream", "fail_echo_write hi!" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            sortApplication0.run(strArray8, inputStream9, outputStream10);
            fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray8);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test210");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication5.constructResult(strArray52);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication57 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication72 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = findApplication72.findFolderContent("", strArray77);
        java.lang.String str82 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication58.run(strArray77, inputStream83, outputStream84);
        java.lang.String str86 = echoApplication57.constructResult(strArray77);
        java.lang.Class<?> wildcardClass87 = strArray77.getClass();
        java.lang.String str88 = echoApplication5.constructResult(strArray77);
        java.lang.Class<?> wildcardClass89 = strArray77.getClass();
        try {
            java.lang.String str90 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray52);
        assertTrue(str56.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray65);
        assertNotNull(strArray77);
        assertTrue(str81.equals(""));
        assertTrue(str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str86.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass87);
        assertTrue(str88.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass89);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test211");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = findApplication30.findFolderContent("fail_sed_write", strArray35);
        java.lang.String str38 = findApplication21.findFolderContent("null input file provided", strArray35);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication51.run(strArray58, inputStream59, outputStream60);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication62 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication65 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = findApplication65.findFolderContent("", strArray70);
        java.lang.String str75 = lsApplication62.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication51.run(strArray70, inputStream76, outputStream77);
        java.lang.String str79 = findApplication40.findFolderContent("Could not read stream", strArray70);
        java.lang.String str80 = findApplication21.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray70);
        java.lang.String str81 = findApplication2.findFolderContent("File is null.", strArray70);
        mkdirApplication1.createFolder(strArray70);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            dateApplication0.run(strArray70, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray7);
        assertTrue(str9.equals(""));
        assertNotNull(strArray16);
        assertTrue(str18.equals(""));
        assertTrue(str19.equals(""));
        assertNotNull(strArray26);
        assertTrue(str28.equals(""));
        assertNotNull(strArray35);
        assertTrue(str37.equals(""));
        assertTrue(str38.equals(""));
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertNotNull(strArray58);
        assertNotNull(strArray70);
        assertTrue(str74.equals(""));
        assertTrue(str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test212");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication16.findFolderContent("null output stream provided fail_echo_write", strArray31);
        java.lang.Class<?> wildcardClass38 = strArray31.getClass();
        java.lang.String str39 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication41 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = findApplication41.findFolderContent("", strArray46);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication61 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = lsApplication61.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        mkdirApplication54.createFolder(strArray67);
        java.lang.String str73 = findApplication52.findFolderContent("null output stream provided fail_echo_write", strArray67);
        java.lang.Class<?> wildcardClass74 = strArray67.getClass();
        java.lang.String str75 = findApplication41.findFolderContent("null output stream provided fail_echo_write", strArray67);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication77 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication79.createFolder(strArray82);
        java.lang.String str84 = findApplication77.findFolderContent("fail_sed_write", strArray82);
        java.lang.String str85 = findApplication41.findFolderContent("null output stream provided\r\nfail_echo_write", strArray82);
        java.lang.String str86 = findApplication5.findFolderContent("File doesn't exist.", strArray82);
        java.lang.String str87 = echoApplication4.constructResult(strArray82);
        java.lang.Class<?> wildcardClass88 = strArray82.getClass();
        try {
            java.lang.String str89 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray10);
        assertTrue(str14.equals(""));
        assertNotNull(strArray21);
        assertNotNull(strArray31);
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals(""));
        assertNotNull(wildcardClass38);
        assertTrue(str39.equals(""));
        assertNotNull(strArray46);
        assertTrue(str50.equals(""));
        assertNotNull(strArray57);
        assertNotNull(strArray67);
        assertTrue(str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str73.equals(""));
        assertNotNull(wildcardClass74);
        assertTrue(str75.equals(""));
        assertNotNull(strArray82);
        assertTrue(str84.equals(""));
        assertTrue(str85.equals(""));
        assertTrue(str86.equals(""));
        assertTrue(str87.equals("fail_echo_write hi!"));
        assertNotNull(wildcardClass88);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test213");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.lang.String[] strArray4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromFiles("", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: filesNames is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test214");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory", "This is a directory Could not read stream Null Pointer Exception Exception Caught", (int) (short) -1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test215");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Null Pointer Exception", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test216");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication11.createFolder(strArray14);
        java.lang.String str16 = findApplication9.findFolderContent("fail_sed_write", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        java.lang.String str25 = findApplication18.findFolderContent("fail_sed_write", strArray23);
        java.lang.String str26 = findApplication9.findFolderContent("null input file provided", strArray23);
        java.lang.Class<?> wildcardClass27 = findApplication9.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication29 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        java.lang.Class<?> wildcardClass65 = mkdirApplication54.getClass();
        java.lang.String[] strArray70 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication54.run(strArray70, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication43.run(strArray70, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication30.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray70);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        echoApplication29.run(strArray70, inputStream78, outputStream79);
        java.lang.String str81 = findApplication9.findFolderContent("Null Pointer Exception", strArray70);
        java.lang.Class<?> wildcardClass82 = strArray70.getClass();
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        try {
            pwdApplication0.run(strArray70, inputStream83, outputStream84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertTrue(str2.equals("C:\\"));
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertNotNull(strArray14);
        assertTrue(str16.equals(""));
        assertNotNull(strArray23);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals(""));
        assertNotNull(wildcardClass27);
        assertNotNull(strArray36);
        assertTrue(str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray50);
        assertNotNull(strArray61);
        assertNotNull(wildcardClass65);
        assertNotNull(strArray70);
        assertTrue(str77.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertTrue(str81.equals(""));
        assertNotNull(wildcardClass82);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test217");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Exception Caught");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Exception Caught: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test218");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication15 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication16.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = findApplication30.findFolderContent("", strArray35);
        java.lang.String str40 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication16.run(strArray35, inputStream41, outputStream42);
        java.lang.String str44 = echoApplication15.constructResult(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        echoApplication15.run(strArray52, inputStream56, outputStream57);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication10.run(strArray52, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            pwdApplication0.run(strArray52, inputStream62, outputStream63);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertTrue(str2.equals("C:\\"));
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertNotNull(strArray13);
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertTrue(str39.equals(""));
        assertTrue(str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray52);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test219");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        java.lang.String str58 = findApplication49.findFolderContent("", strArray54);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication76.createFolder(strArray79);
        java.lang.String str81 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray79);
        java.lang.String str82 = findApplication49.findFolderContent("hi!", strArray79);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        echoApplication5.run(strArray79, inputStream83, outputStream84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            cdApplication0.run(strArray79, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray54);
        assertTrue(str58.equals(""));
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray79);
        assertTrue(str81.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str82.equals(""));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test220");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided:\r\n\r\n\r\nnull arguments:", "hi!", (int) (short) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test221");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        mkdirApplication1.createFolder(strArray81);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            grepApplication0.run(strArray81, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str15.equals(""));
        assertNotNull(strArray20);
        assertNotNull(strArray25);
        assertNotNull(strArray34);
        assertTrue(str38.equals(""));
        assertNotNull(strArray47);
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals(""));
        assertNotNull(wildcardClass75);
        assertTrue(str76.equals(""));
        assertNotNull(strArray81);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test222");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        mkdirApplication33.createFolder(strArray46);
        java.lang.String str52 = findApplication31.findFolderContent("null output stream provided fail_echo_write", strArray46);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        echoApplication1.run(strArray46, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        echoApplication1.run(strArray70, inputStream76, outputStream77);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            exitApplication0.run(strArray70, inputStream79, outputStream80);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray36);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
        assertNotNull(wildcardClass56);
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertTrue(str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test223");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read file", "null output stream provided fail_echo_write", (int) '#', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test224");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "fail_sed_write", (-1), inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test225");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test226");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo", "This is a directory", (int) (byte) 100, "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test227");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null input file provided", "null output stream provided:\r\n\r\n\r\nfail_echo_write:", (int) (short) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test228");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication26.findFolderContent("null input file provided", strArray50);
        java.lang.String str57 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray63);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            exitApplication0.run(strArray63, inputStream68, outputStream69);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals(""));
        assertTrue(str57.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray63);
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test229");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        java.lang.String[] strArray8 = new java.lang.String[] { "Could not read file", "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "null input file provided", "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            wcApplication0.run(strArray8, inputStream9, outputStream10);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray8);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test230");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("", "fail_echo_write\r\nhi!", (-1), inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test231");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication27 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication28.run(strArray35, inputStream36, outputStream37);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        java.lang.String str52 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication28.run(strArray47, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication27.constructResult(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = echoApplication27.constructResult(strArray64);
        mkdirApplication1.createFolder(strArray64);
        try {
            java.lang.String str70 = catApplication0.catFiles(strArray64);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertNotNull(strArray47);
        assertTrue(str51.equals(""));
        assertTrue(str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray64);
        assertTrue(str68.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test232");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = findApplication53.findFolderContent("", strArray58);
        java.lang.String str63 = echoApplication1.constructResult(strArray58);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication64.createFolder(strArray67);
        java.lang.String str69 = echoApplication1.constructResult(strArray67);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication70.createFolder(strArray73);
        java.lang.String str75 = echoApplication1.constructResult(strArray73);
        java.lang.Class<?> wildcardClass76 = strArray73.getClass();
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        try {
            dateApplication0.run(strArray73, inputStream77, outputStream78);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray58);
        assertTrue(str62.equals(""));
        assertTrue(str63.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray67);
        assertTrue(str69.equals("fail_echo_write hi!"));
        assertNotNull(strArray73);
        assertTrue(str75.equals("fail_echo_write hi!"));
        assertNotNull(wildcardClass76);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test233");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        mkdirApplication16.createFolder(strArray29);
        java.lang.String str35 = findApplication14.findFolderContent("null output stream provided fail_echo_write", strArray29);
        java.lang.Class<?> wildcardClass36 = strArray29.getClass();
        java.lang.String str37 = findApplication3.findFolderContent("null output stream provided fail_echo_write", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication62.run(strArray65, inputStream66, outputStream67);
        java.lang.String str69 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray65);
        mkdirApplication52.createFolder(strArray65);
        java.lang.String str71 = findApplication50.findFolderContent("null output stream provided fail_echo_write", strArray65);
        java.lang.Class<?> wildcardClass72 = strArray65.getClass();
        java.lang.String str73 = findApplication39.findFolderContent("null output stream provided fail_echo_write", strArray65);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication75 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication77 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray80 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication77.createFolder(strArray80);
        java.lang.String str82 = findApplication75.findFolderContent("fail_sed_write", strArray80);
        java.lang.String str83 = findApplication39.findFolderContent("null output stream provided\r\nfail_echo_write", strArray80);
        java.lang.String str84 = findApplication3.findFolderContent("File doesn't exist.", strArray80);
        java.lang.String str85 = echoApplication2.constructResult(strArray80);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            sortApplication0.run(strArray80, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertNotNull(strArray19);
        assertNotNull(strArray29);
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals(""));
        assertNotNull(wildcardClass36);
        assertTrue(str37.equals(""));
        assertNotNull(strArray44);
        assertTrue(str48.equals(""));
        assertNotNull(strArray55);
        assertNotNull(strArray65);
        assertTrue(str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str71.equals(""));
        assertNotNull(wildcardClass72);
        assertTrue(str73.equals(""));
        assertNotNull(strArray80);
        assertTrue(str82.equals(""));
        assertTrue(str83.equals(""));
        assertTrue(str84.equals(""));
        assertTrue(str85.equals("fail_echo_write hi!"));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test234");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication4.run(strArray35, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication43.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication64.run(strArray71, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = mkdirApplication64.getClass();
        java.lang.String[] strArray80 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication64.run(strArray80, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication53.run(strArray80, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication40.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray80);
        mkdirApplication4.createFolder(strArray80);
        try {
            java.lang.String str89 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray80);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertNotNull(strArray46);
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray60);
        assertNotNull(strArray71);
        assertNotNull(wildcardClass75);
        assertNotNull(strArray80);
        assertTrue(str87.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test235");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read file", "fail_echo_write\r\nhi!", (int) '4');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test236");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass9 = pwdApplication0.getClass();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        java.lang.String str11 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication23 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication23.constructResult(strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        echoApplication23.run(strArray60, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = echoApplication23.constructResult(strArray70);
        java.lang.Class<?> wildcardClass75 = strArray70.getClass();
        java.lang.String str76 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray70);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        try {
            pwdApplication0.run(strArray70, inputStream77, outputStream78);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertNotNull(wildcardClass9);
        assertTrue(str10.equals("C:\\"));
        assertTrue(str11.equals("C:\\"));
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertTrue(str74.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass75);
        assertTrue(str76.equals(""));
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test237");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "fail_echo", (int) (byte) 1, inputStream4);
            fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 3\r\nC:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test238");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        try {
            catApplication0.run(strArray7, inputStream10, outputStream11);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str9.equals(""));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test239");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication61 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = lsApplication61.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        mkdirApplication54.createFolder(strArray67);
        java.lang.String str73 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        java.lang.String str74 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray67);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication77 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication79 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray82 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication79.createFolder(strArray82);
        java.lang.String str84 = findApplication77.findFolderContent("fail_sed_write", strArray82);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication86 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication88 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray91 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication88.createFolder(strArray91);
        java.lang.String str93 = findApplication86.findFolderContent("fail_sed_write", strArray91);
        java.lang.String str94 = findApplication77.findFolderContent("null input file provided", strArray91);
        java.lang.String str95 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray91);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            catApplication0.run(strArray91, inputStream96, outputStream97);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray7);
        assertTrue(str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray21);
        assertNotNull(strArray32);
        assertNotNull(wildcardClass36);
        assertNotNull(strArray41);
        assertTrue(str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertNotNull(strArray57);
        assertNotNull(strArray67);
        assertTrue(str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray82);
        assertTrue(str84.equals(""));
        assertNotNull(strArray91);
        assertTrue(str93.equals(""));
        assertTrue(str94.equals(""));
        assertTrue(str95.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test240");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        try {
            java.lang.String str8 = dateApplication0.getDate("null output stream provided fail_echo_write");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:35"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:35"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:35"));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test241");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication8 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = lsApplication8.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray14);
        mkdirApplication1.createFolder(strArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication1.run(strArray23, inputStream24, outputStream25);
        java.lang.Class<?> wildcardClass27 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication44.createFolder(strArray47);
        java.lang.String str49 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray47);
        mkdirApplication1.createFolder(strArray47);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        mkdirApplication1.createFolder(strArray56);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            catApplication0.run(strArray56, inputStream62, outputStream63);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(wildcardClass27);
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray47);
        assertTrue(str49.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray56);
        assertTrue(str60.equals(""));
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test242");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        java.lang.String str24 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        java.lang.Class<?> wildcardClass25 = strArray19.getClass();
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication4.run(strArray19, inputStream26, outputStream27);
        try {
            java.lang.String str29 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray19);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass25);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test243");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("03-24-2019 00:07:43", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test244");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Terminate process.", "fail_echo_write hi!", (int) (short) -1, "fail_echo_write hi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test245");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        mkdirApplication12.createFolder(strArray29);
        mkdirApplication5.createFolder(strArray29);
        java.lang.Class<?> wildcardClass36 = mkdirApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        mkdirApplication5.createFolder(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication52 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = echoApplication52.constructResult(strArray72);
        mkdirApplication5.createFolder(strArray72);
        java.lang.Class<?> wildcardClass83 = strArray72.getClass();
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            cdApplication0.run(strArray72, inputStream84, outputStream85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray19);
        assertNotNull(strArray29);
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass36);
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray60);
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str81.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass83);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test246");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication7 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = lsApplication7.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication20.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.lang.Class<?> wildcardClass42 = mkdirApplication31.getClass();
        java.lang.String[] strArray47 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication31.run(strArray47, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication20.run(strArray47, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication7.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication68.run(strArray75, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = mkdirApplication68.getClass();
        java.lang.String[] strArray84 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication68.run(strArray84, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        mkdirApplication57.run(strArray84, inputStream88, outputStream89);
        java.lang.String str91 = lsApplication7.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray84);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            pwdApplication0.run(strArray84, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(wildcardClass6);
        assertNotNull(strArray13);
        assertTrue(str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray27);
        assertNotNull(strArray38);
        assertNotNull(wildcardClass42);
        assertNotNull(strArray47);
        assertTrue(str54.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertNotNull(strArray64);
        assertNotNull(strArray75);
        assertNotNull(wildcardClass79);
        assertNotNull(strArray84);
        assertTrue(str91.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test247");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        mkdirApplication12.createFolder(strArray29);
        mkdirApplication5.createFolder(strArray29);
        java.lang.Class<?> wildcardClass36 = mkdirApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        mkdirApplication5.createFolder(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication52 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = echoApplication52.constructResult(strArray72);
        mkdirApplication5.createFolder(strArray72);
        java.lang.Class<?> wildcardClass83 = strArray72.getClass();
        try {
            java.lang.String str84 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray72);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray8);
        assertNotNull(strArray19);
        assertNotNull(strArray29);
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass36);
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray60);
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str81.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass83);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test248");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "null output stream provided fail_echo_write", (int) '#', "fail_echo_write\r\nhi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test249");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = findApplication38.findFolderContent("Could not read stream", strArray68);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication31.run(strArray68, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = mkdirApplication31.getClass();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication31.createFolder(strArray83);
        java.lang.String str85 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication2.createFolder(strArray83);
        java.lang.Class<?> wildcardClass87 = strArray83.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            wcApplication0.run(strArray83, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray15);
        assertTrue(str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray24);
        assertNotNull(strArray34);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals(""));
        assertNotNull(wildcardClass81);
        assertNotNull(strArray83);
        assertTrue(str85.equals(""));
        assertNotNull(wildcardClass87);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test250");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Could not write to output stream", "03-24-2019 00:08:56", (-1), "fail_echo_write\r\nhi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test251");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication14 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        java.lang.String str39 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray34);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication15.run(strArray34, inputStream40, outputStream41);
        java.lang.String str43 = echoApplication14.constructResult(strArray34);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        mkdirApplication46.createFolder(strArray59);
        java.lang.String str65 = findApplication44.findFolderContent("null output stream provided fail_echo_write", strArray59);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        echoApplication14.run(strArray59, inputStream66, outputStream67);
        java.lang.Class<?> wildcardClass69 = echoApplication14.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication77 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication77.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication70.createFolder(strArray83);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        echoApplication14.run(strArray83, inputStream89, outputStream90);
        java.lang.Class<?> wildcardClass92 = strArray83.getClass();
        java.lang.String str93 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray83);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            exitApplication0.run(strArray83, inputStream94, outputStream95);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray7);
        assertTrue(str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray22);
        assertNotNull(strArray34);
        assertTrue(str38.equals(""));
        assertTrue(str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str43.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray49);
        assertNotNull(strArray59);
        assertTrue(str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str65.equals(""));
        assertNotNull(wildcardClass69);
        assertNotNull(strArray73);
        assertNotNull(strArray83);
        assertTrue(str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass92);
        assertTrue(str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test252");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        java.lang.String str18 = findApplication1.findFolderContent("null input file provided", strArray15);
        java.lang.Class<?> wildcardClass19 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        mkdirApplication24.createFolder(strArray37);
        java.lang.String str43 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.lang.String str76 = findApplication46.findFolderContent("null input file provided", strArray70);
        java.lang.String str77 = lsApplication21.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray70);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication80 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = findApplication80.findFolderContent("", strArray85);
        java.lang.String str90 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray85);
        java.lang.Class<?> wildcardClass91 = strArray85.getClass();
        java.lang.String str92 = findApplication1.findFolderContent("Exception Caught", strArray85);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        try {
            wcApplication0.run(strArray85, inputStream93, outputStream94);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str8.equals(""));
        assertNotNull(strArray15);
        assertTrue(str17.equals(""));
        assertTrue(str18.equals(""));
        assertNotNull(wildcardClass19);
        assertNotNull(strArray27);
        assertNotNull(strArray37);
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray51);
        assertTrue(str55.equals(""));
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertTrue(str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray85);
        assertTrue(str89.equals(""));
        assertTrue(str90.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass91);
        assertTrue(str92.equals(""));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test253");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("fail_echo_write hi!", (java.lang.Boolean) false, (java.lang.Boolean) true, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test254");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided fail_echo_write", "File is null.", (-1));
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test255");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        java.lang.Class<?> wildcardClass1 = cdApplication0.getClass();
        try {
            cdApplication0.changeToDirectory("03-24-2019 00:07:43");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 13: 03-24-2019 00:07:43\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass1);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test256");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        java.lang.Class<?> wildcardClass8 = strArray4.getClass();
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            exitApplication0.run(strArray4, inputStream9, outputStream10);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(wildcardClass8);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test257");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", "", 10);
            fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Illegal/unsupported escape sequence near index 3\r\nC:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\r\n   ^");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test258");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        java.lang.String str24 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication27.createFolder(strArray30);
        java.lang.String str32 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray30);
        java.lang.String str33 = findApplication0.findFolderContent("hi!", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = findApplication48.findFolderContent("", strArray53);
        java.lang.String str58 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray53);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication61.createFolder(strArray64);
        java.lang.String str66 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray64);
        java.lang.String str67 = findApplication34.findFolderContent("hi!", strArray64);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            findApplication0.run(strArray64, inputStream68, outputStream69);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str9.equals(""));
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray30);
        assertTrue(str32.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str33.equals(""));
        assertNotNull(strArray39);
        assertTrue(str43.equals(""));
        assertNotNull(strArray53);
        assertTrue(str57.equals(""));
        assertTrue(str58.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray64);
        assertTrue(str66.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str67.equals(""));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test259");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication1.run(strArray43, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = strArray43.getClass();
        java.lang.Class<?> wildcardClass54 = strArray43.getClass();
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            exitApplication0.run(strArray43, inputStream55, outputStream56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
        assertNotNull(wildcardClass53);
        assertNotNull(wildcardClass54);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test260");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write", "File is null.", 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test261");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Terminate process.", "fail_echo_write", (int) (byte) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test262");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        mkdirApplication53.createFolder(strArray66);
        java.lang.String str72 = findApplication51.findFolderContent("null output stream provided fail_echo_write", strArray66);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication1.run(strArray66, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = strArray66.getClass();
        java.lang.Class<?> wildcardClass77 = strArray66.getClass();
        try {
            java.lang.String str78 = catApplication0.catFiles(strArray66);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertNotNull(strArray26);
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray66);
        assertTrue(str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str72.equals(""));
        assertNotNull(wildcardClass76);
        assertNotNull(wildcardClass77);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test263");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        echoApplication10.run(strArray47, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication81.createFolder(strArray84);
        java.lang.String str86 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray84);
        java.lang.String str87 = findApplication54.findFolderContent("hi!", strArray84);
        java.lang.String str88 = echoApplication10.constructResult(strArray84);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        try {
            pwdApplication0.run(strArray84, inputStream89, outputStream90);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertNotNull(strArray18);
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray47);
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray84);
        assertTrue(str86.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str87.equals(""));
        assertTrue(str88.equals("fail_echo_write hi!"));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test264");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = findApplication7.findFolderContent("null input file provided", strArray31);
        java.lang.String str38 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray44);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication72 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication75 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray78 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication75.run(strArray78, inputStream79, outputStream80);
        java.lang.String str82 = lsApplication72.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray78);
        mkdirApplication65.createFolder(strArray78);
        java.lang.String str84 = findApplication54.findFolderContent("null input file provided", strArray78);
        java.lang.String str85 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray78);
        java.lang.String str86 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray78);
        try {
            java.lang.String str87 = grepApplication0.grepFromFiles("null output stream provided", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray78);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertNotNull(strArray21);
        assertNotNull(strArray31);
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals(""));
        assertTrue(str38.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray44);
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertNotNull(strArray68);
        assertNotNull(strArray78);
        assertTrue(str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str84.equals(""));
        assertTrue(str85.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str86.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test265");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        mkdirApplication25.createFolder(strArray38);
        java.lang.String str44 = findApplication23.findFolderContent("null output stream provided fail_echo_write", strArray38);
        java.lang.Class<?> wildcardClass45 = strArray38.getClass();
        java.lang.String str46 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication50.createFolder(strArray53);
        java.lang.String str55 = findApplication48.findFolderContent("fail_sed_write", strArray53);
        java.lang.String str56 = findApplication12.findFolderContent("null output stream provided\r\nfail_echo_write", strArray53);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        try {
            cdApplication0.run(strArray53, inputStream57, outputStream58);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertNotNull(strArray28);
        assertNotNull(strArray38);
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals(""));
        assertNotNull(wildcardClass45);
        assertTrue(str46.equals(""));
        assertNotNull(strArray53);
        assertTrue(str55.equals(""));
        assertTrue(str56.equals(""));
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test266");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication14.createFolder(strArray17);
        java.lang.String str19 = findApplication12.findFolderContent("fail_sed_write", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication21.createFolder(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = findApplication58.findFolderContent("", strArray63);
        java.lang.String str68 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication44.run(strArray63, inputStream69, outputStream70);
        java.lang.String str72 = findApplication33.findFolderContent("Could not read stream", strArray63);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication26.run(strArray63, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication21.run(strArray63, inputStream76, outputStream77);
        java.lang.Class<?> wildcardClass79 = strArray63.getClass();
        java.lang.String str80 = findApplication12.findFolderContent("", strArray63);
        java.lang.String str81 = findApplication10.findFolderContent("", strArray63);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication3.run(strArray63, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        try {
            dateApplication0.run(strArray63, inputStream85, outputStream86);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:36"));
        assertNotNull(strArray6);
        assertNotNull(strArray17);
        assertTrue(str19.equals(""));
        assertNotNull(strArray24);
        assertNotNull(strArray29);
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertNotNull(strArray51);
        assertNotNull(strArray63);
        assertTrue(str67.equals(""));
        assertTrue(str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str72.equals(""));
        assertNotNull(wildcardClass79);
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test267");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.lang.String[] strArray77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromFiles("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: filesNames is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test268");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication16.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = findApplication30.findFolderContent("", strArray35);
        java.lang.String str40 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication16.run(strArray35, inputStream41, outputStream42);
        java.lang.Class<?> wildcardClass44 = mkdirApplication16.getClass();
        java.lang.String[] strArray46 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication16.run(strArray46, inputStream47, outputStream48);
        java.lang.String str50 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray46);
        java.lang.String[] strArray51 = null;
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        try {
            lsApplication0.run(strArray51, inputStream52, outputStream53);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertTrue(str39.equals(""));
        assertTrue(str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass44);
        assertNotNull(strArray46);
        assertTrue(str50.equals(""));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test269");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) (short) 0, "03-24-2019 00:08:56");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test270");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication27.createFolder(strArray30);
        java.lang.String str32 = findApplication25.findFolderContent("fail_sed_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication34.createFolder(strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication71 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = findApplication71.findFolderContent("", strArray76);
        java.lang.String str81 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication57.run(strArray76, inputStream82, outputStream83);
        java.lang.String str85 = findApplication46.findFolderContent("Could not read stream", strArray76);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication39.run(strArray76, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication34.run(strArray76, inputStream89, outputStream90);
        java.lang.Class<?> wildcardClass92 = strArray76.getClass();
        java.lang.String str93 = findApplication25.findFolderContent("", strArray76);
        mkdirApplication18.createFolder(strArray76);
        mkdirApplication7.createFolder(strArray76);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            dateApplication0.run(strArray76, inputStream96, outputStream97);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:36"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:36"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:36"));
        assertNotNull(strArray14);
        assertNotNull(strArray21);
        assertNotNull(strArray30);
        assertTrue(str32.equals(""));
        assertNotNull(strArray37);
        assertNotNull(strArray42);
        assertNotNull(strArray51);
        assertTrue(str55.equals(""));
        assertNotNull(strArray64);
        assertNotNull(strArray76);
        assertTrue(str80.equals(""));
        assertTrue(str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str85.equals(""));
        assertNotNull(wildcardClass92);
        assertTrue(str93.equals(""));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test271");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication9.run(strArray46, inputStream50, outputStream51);
        mkdirApplication2.createFolder(strArray46);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication54 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = lsApplication54.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication2.run(strArray60, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            catApplication0.run(strArray60, inputStream68, outputStream69);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str38.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray46);
        assertNotNull(strArray60);
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test272");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        java.lang.Class<?> wildcardClass78 = strArray59.getClass();
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            pwdApplication0.run(strArray59, inputStream79, outputStream80);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str15.equals(""));
        assertNotNull(strArray20);
        assertNotNull(strArray25);
        assertNotNull(strArray34);
        assertTrue(str38.equals(""));
        assertNotNull(strArray47);
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals(""));
        assertNotNull(wildcardClass75);
        assertTrue(str76.equals(""));
        assertNotNull(wildcardClass78);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test273");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication7.createFolder(strArray10);
        java.lang.String str12 = findApplication5.findFolderContent("fail_sed_write", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication16.createFolder(strArray19);
        java.lang.String str21 = findApplication14.findFolderContent("fail_sed_write", strArray19);
        java.lang.String str22 = findApplication5.findFolderContent("null input file provided", strArray19);
        java.lang.Class<?> wildcardClass23 = findApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication25 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication26 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = lsApplication26.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray32);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        java.lang.Class<?> wildcardClass61 = mkdirApplication50.getClass();
        java.lang.String[] strArray66 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication50.run(strArray66, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication39.run(strArray66, inputStream70, outputStream71);
        java.lang.String str73 = lsApplication26.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray66);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        echoApplication25.run(strArray66, inputStream74, outputStream75);
        java.lang.String str77 = findApplication5.findFolderContent("Null Pointer Exception", strArray66);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        try {
            dateApplication0.run(strArray66, inputStream78, outputStream79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:36"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:36"));
        assertNotNull(strArray10);
        assertTrue(str12.equals(""));
        assertNotNull(strArray19);
        assertTrue(str21.equals(""));
        assertTrue(str22.equals(""));
        assertNotNull(wildcardClass23);
        assertNotNull(strArray32);
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray46);
        assertNotNull(strArray57);
        assertNotNull(wildcardClass61);
        assertNotNull(strArray66);
        assertTrue(str73.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
        assertTrue(str77.equals(""));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test274");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided null arguments null output stream provided", "null output stream provided", (-1));
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test275");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not write to output stream", "null arguments", 100, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test276");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        java.lang.Class<?> wildcardClass23 = mkdirApplication12.getClass();
        java.lang.String[] strArray28 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication12.run(strArray28, inputStream29, outputStream30);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication1.run(strArray28, inputStream32, outputStream33);
        java.lang.Class<?> wildcardClass35 = strArray28.getClass();
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        try {
            grepApplication0.run(strArray28, inputStream36, outputStream37);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray19);
        assertNotNull(wildcardClass23);
        assertNotNull(strArray28);
        assertNotNull(wildcardClass35);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test277");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory", "03-24-2019 00:08:56", (int) (short) 0, "null output stream provided null arguments null output stream provided");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test278");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write\r\nhi!", "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", (int) (short) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test279");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        java.lang.String str9 = findApplication0.findFolderContent("", strArray5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication11.findFolderContent("null output stream provided fail_echo_write", strArray26);
        java.lang.Class<?> wildcardClass33 = strArray26.getClass();
        java.lang.String str34 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = findApplication36.findFolderContent("", strArray41);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        mkdirApplication49.createFolder(strArray62);
        java.lang.String str68 = findApplication47.findFolderContent("null output stream provided fail_echo_write", strArray62);
        java.lang.Class<?> wildcardClass69 = strArray62.getClass();
        java.lang.String str70 = findApplication36.findFolderContent("null output stream provided fail_echo_write", strArray62);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication72 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication74.createFolder(strArray77);
        java.lang.String str79 = findApplication72.findFolderContent("fail_sed_write", strArray77);
        java.lang.String str80 = findApplication36.findFolderContent("null output stream provided\r\nfail_echo_write", strArray77);
        java.lang.String str81 = findApplication0.findFolderContent("File doesn't exist.", strArray77);
        java.lang.Class<?> wildcardClass82 = findApplication0.getClass();
        java.lang.String[] strArray84 = null;
        try {
            java.lang.String str85 = findApplication0.findFolderContent("fail_echo_empty_params", strArray84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Arguments for findFolderContent are not allowed to be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertTrue(str9.equals(""));
        assertNotNull(strArray16);
        assertNotNull(strArray26);
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals(""));
        assertNotNull(wildcardClass33);
        assertTrue(str34.equals(""));
        assertNotNull(strArray41);
        assertTrue(str45.equals(""));
        assertNotNull(strArray52);
        assertNotNull(strArray62);
        assertTrue(str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals(""));
        assertNotNull(wildcardClass69);
        assertTrue(str70.equals(""));
        assertNotNull(strArray77);
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
        assertNotNull(wildcardClass82);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test280");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided fail_echo_write", "null output stream provided fail_echo_write", (int) (byte) 0, "C:\\");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test281");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "fail_echo_write", (int) '#');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test282");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication33.createFolder(strArray36);
        java.lang.String str38 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray36);
        java.lang.String str39 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray36);
        try {
            java.lang.String str40 = catApplication0.catFiles(strArray36);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertTrue(str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray36);
        assertTrue(str38.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str39.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test283");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication29.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        java.lang.String str53 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication29.run(strArray48, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication57.createFolder(strArray60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication29.run(strArray60, inputStream62, outputStream63);
        java.lang.String[] strArray70 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication29.createFolder(strArray70);
        java.lang.Class<?> wildcardClass72 = strArray70.getClass();
        mkdirApplication1.createFolder(strArray70);
        java.lang.Class<?> wildcardClass74 = strArray70.getClass();
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            grepApplication0.run(strArray70, inputStream75, outputStream76);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray36);
        assertNotNull(strArray48);
        assertTrue(str52.equals(""));
        assertTrue(str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertNotNull(wildcardClass72);
        assertNotNull(wildcardClass74);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test284");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = sortApplication0.sortFromStdin((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream77);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test285");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("03-24-2019 00:07:43", "File doesn't exist.", (int) (byte) 10, "null input file provided");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test286");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        java.lang.Class<?> wildcardClass19 = mkdirApplication8.getClass();
        java.lang.Class<?> wildcardClass20 = mkdirApplication8.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication28 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication29.run(strArray36, inputStream37, outputStream38);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication40 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        java.lang.String str53 = lsApplication40.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication29.run(strArray48, inputStream54, outputStream55);
        java.lang.String str57 = echoApplication28.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication28.run(strArray65, inputStream69, outputStream70);
        mkdirApplication21.createFolder(strArray65);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication8.run(strArray65, inputStream73, outputStream74);
        mkdirApplication1.createFolder(strArray65);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        try {
            sortApplication0.run(strArray65, inputStream77, outputStream78);
            fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray15);
        assertNotNull(wildcardClass19);
        assertNotNull(wildcardClass20);
        assertNotNull(strArray24);
        assertNotNull(strArray36);
        assertNotNull(strArray48);
        assertTrue(str52.equals(""));
        assertTrue(str53.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str57.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray65);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test287");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray41);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            catApplication0.run(strArray41, inputStream46, outputStream47);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray41);
        assertTrue(str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test288");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication28.createFolder(strArray31);
        java.lang.String str33 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray31);
        java.lang.String str34 = findApplication1.findFolderContent("hi!", strArray31);
        java.lang.Class<?> wildcardClass35 = findApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication37.run(strArray44, inputStream45, outputStream46);
        java.lang.Class<?> wildcardClass48 = mkdirApplication37.getClass();
        java.lang.String[] strArray53 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication37.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication59.createFolder(strArray62);
        java.lang.String str64 = findApplication57.findFolderContent("fail_sed_write", strArray62);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication37.run(strArray62, inputStream65, outputStream66);
        java.lang.String str68 = findApplication1.findFolderContent("fail_echo_write\r\nhi!", strArray62);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        try {
            dateApplication0.run(strArray62, inputStream69, outputStream70);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertTrue(str33.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str34.equals(""));
        assertNotNull(wildcardClass35);
        assertNotNull(strArray44);
        assertNotNull(wildcardClass48);
        assertNotNull(strArray53);
        assertNotNull(strArray62);
        assertTrue(str64.equals(""));
        assertTrue(str68.equals(""));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test289");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("null output stream provided\r\nfail_echo_write");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <\r> at index 27: null output stream provided\r\nfail_echo_write\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test290");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String str45 = findApplication15.findFolderContent("null input file provided", strArray39);
        java.lang.String str46 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray52);
        mkdirApplication1.createFolder(strArray52);
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        try {
            exitApplication0.run(strArray52, inputStream58, outputStream59);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertNotNull(strArray29);
        assertNotNull(strArray39);
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals(""));
        assertTrue(str46.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray52);
        assertTrue(str56.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test291");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.Class<?> wildcardClass38 = mkdirApplication10.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = findApplication55.findFolderContent("", strArray60);
        java.lang.String str65 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication41.run(strArray60, inputStream66, outputStream67);
        java.lang.Class<?> wildcardClass69 = mkdirApplication41.getClass();
        java.lang.String[] strArray71 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication41.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = findApplication39.findFolderContent("", strArray71);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication10.run(strArray71, inputStream76, outputStream77);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication79 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication81.createFolder(strArray84);
        java.lang.String str86 = findApplication79.findFolderContent("fail_sed_write", strArray84);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication10.run(strArray84, inputStream87, outputStream88);
        java.lang.Class<?> wildcardClass90 = strArray84.getClass();
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            cdApplication0.run(strArray84, inputStream91, outputStream92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass38);
        assertNotNull(strArray48);
        assertNotNull(strArray60);
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass69);
        assertNotNull(strArray71);
        assertTrue(str75.equals(""));
        assertNotNull(strArray84);
        assertTrue(str86.equals(""));
        assertNotNull(wildcardClass90);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test292");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication10 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        java.lang.String str20 = lsApplication10.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray16);
        mkdirApplication3.createFolder(strArray16);
        java.lang.String str22 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray16);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication44 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = lsApplication44.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        mkdirApplication37.createFolder(strArray50);
        java.lang.String str56 = findApplication35.findFolderContent("null output stream provided fail_echo_write", strArray50);
        java.lang.Class<?> wildcardClass57 = strArray50.getClass();
        java.lang.String str58 = findApplication24.findFolderContent("null output stream provided fail_echo_write", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication62.createFolder(strArray65);
        java.lang.String str67 = findApplication60.findFolderContent("fail_sed_write", strArray65);
        java.lang.String str68 = findApplication24.findFolderContent("null output stream provided\r\nfail_echo_write", strArray65);
        java.lang.String str69 = findApplication1.findFolderContent("Could not write to output stream", strArray65);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            wcApplication0.run(strArray65, inputStream70, outputStream71);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray6);
        assertNotNull(strArray16);
        assertTrue(str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str22.equals(""));
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str56.equals(""));
        assertNotNull(wildcardClass57);
        assertTrue(str58.equals(""));
        assertNotNull(strArray65);
        assertTrue(str67.equals(""));
        assertTrue(str68.equals(""));
        assertTrue(str69.equals(""));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test293");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray35);
        java.lang.String str38 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray35);
        java.lang.String[] strArray39 = null;
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        try {
            lsApplication0.run(strArray39, inputStream40, outputStream41);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertTrue(str37.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str38.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test294");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication16 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication17.run(strArray36, inputStream42, outputStream43);
        java.lang.String str45 = echoApplication16.constructResult(strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        java.lang.Class<?> wildcardClass68 = mkdirApplication57.getClass();
        java.lang.String[] strArray73 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication57.run(strArray73, inputStream74, outputStream75);
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication46.run(strArray73, inputStream77, outputStream78);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        echoApplication16.run(strArray73, inputStream80, outputStream81);
        java.lang.String str83 = findApplication14.findFolderContent("fail_echo_write hi!", strArray73);
        java.lang.Class<?> wildcardClass84 = strArray73.getClass();
        java.lang.Class<?> wildcardClass85 = strArray73.getClass();
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            cdApplication0.run(strArray73, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray24);
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray53);
        assertNotNull(strArray64);
        assertNotNull(wildcardClass68);
        assertNotNull(strArray73);
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass84);
        assertNotNull(wildcardClass85);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test295");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication2 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication6 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass7 = wcApplication6.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication52.run(strArray59, inputStream60, outputStream61);
        java.lang.Class<?> wildcardClass63 = mkdirApplication52.getClass();
        java.lang.String[] strArray68 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication52.run(strArray68, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication41.run(strArray68, inputStream72, outputStream73);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        echoApplication11.run(strArray68, inputStream75, outputStream76);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        java.lang.String str79 = echoApplication11.constructResult(strArray78);
        java.lang.String str80 = wcApplication6.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray78);
        java.lang.String str81 = sortApplication2.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray78);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            wcApplication0.run(strArray78, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: Not correct number of arguments for grep!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(wildcardClass7);
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertNotNull(strArray59);
        assertNotNull(wildcardClass63);
        assertNotNull(strArray68);
        assertNotNull(strArray78);
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test296");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.Class<?> wildcardClass74 = strArray72.getClass();
        java.lang.String str75 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream79 = null;
        try {
            java.lang.String str80 = wcApplication0.countFromStdin((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray53);
        assertNotNull(wildcardClass57);
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str73.equals(""));
        assertNotNull(wildcardClass74);
        assertTrue(str75.equals(""));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test297");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication7.createFolder(strArray10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        java.lang.String str54 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray49);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication30.run(strArray49, inputStream55, outputStream56);
        java.lang.String str58 = findApplication19.findFolderContent("Could not read stream", strArray49);
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication12.run(strArray49, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication7.run(strArray49, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication65.run(strArray72, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication65.getClass();
        java.lang.String[] strArray81 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication65.run(strArray81, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication7.run(strArray81, inputStream85, outputStream86);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            dateApplication0.run(strArray81, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:37"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:37"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:37"));
        assertNotNull(strArray10);
        assertNotNull(strArray15);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertNotNull(strArray37);
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertTrue(str54.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str58.equals(""));
        assertNotNull(strArray72);
        assertNotNull(wildcardClass76);
        assertNotNull(strArray81);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test298");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        mkdirApplication6.createFolder(strArray19);
        java.lang.String str25 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray19);
        java.lang.Class<?> wildcardClass26 = strArray19.getClass();
        java.lang.Class<?> wildcardClass27 = strArray19.getClass();
        java.lang.Class<?> wildcardClass28 = strArray19.getClass();
        try {
            java.lang.String str29 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray19);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray19);
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str25.equals(""));
        assertNotNull(wildcardClass26);
        assertNotNull(wildcardClass27);
        assertNotNull(wildcardClass28);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test299");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_empty_params", "03-24-2019 00:07:26", 100, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test300");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        java.lang.String str14 = findApplication5.findFolderContent("", strArray10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        java.lang.String str37 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray35);
        java.lang.String str38 = findApplication5.findFolderContent("hi!", strArray35);
        try {
            java.lang.String str39 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray35);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray10);
        assertTrue(str14.equals(""));
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertTrue(str37.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str38.equals(""));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test301");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null arguments", "null output stream provided", (int) (short) 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test302");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = findApplication38.findFolderContent("Could not read stream", strArray68);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication31.run(strArray68, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = mkdirApplication31.getClass();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication31.createFolder(strArray83);
        java.lang.String str85 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication2.createFolder(strArray83);
        java.lang.Class<?> wildcardClass87 = strArray83.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            catApplication0.run(strArray83, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray15);
        assertTrue(str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray24);
        assertNotNull(strArray34);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals(""));
        assertNotNull(wildcardClass81);
        assertNotNull(strArray83);
        assertTrue(str85.equals(""));
        assertNotNull(wildcardClass87);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test303");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        java.lang.Class<?> wildcardClass2 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication8.run(strArray45, inputStream49, outputStream50);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication3.run(strArray45, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = strArray45.getClass();
        java.lang.Class<?> wildcardClass56 = strArray45.getClass();
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        echoApplication1.run(strArray45, inputStream57, outputStream58);
        try {
            java.lang.String str60 = catApplication0.catFiles(strArray45);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(strArray6);
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(wildcardClass55);
        assertNotNull(wildcardClass56);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test304");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "File is null.", "fail_echo_write", (int) (byte) 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test305");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication32.run(strArray39, inputStream40, outputStream41);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        echoApplication2.run(strArray39, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = echoApplication2.constructResult(strArray49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication81.createFolder(strArray84);
        java.lang.String str86 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray84);
        java.lang.String str87 = findApplication54.findFolderContent("hi!", strArray84);
        java.lang.String str88 = echoApplication2.constructResult(strArray84);
        java.lang.Class<?> wildcardClass89 = strArray84.getClass();
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            catApplication0.run(strArray84, inputStream90, outputStream91);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray10);
        assertNotNull(strArray22);
        assertTrue(str26.equals(""));
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str31.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray39);
        assertNotNull(strArray49);
        assertTrue(str53.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray84);
        assertTrue(str86.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str87.equals(""));
        assertTrue(str88.equals("fail_echo_write hi!"));
        assertNotNull(wildcardClass89);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test306");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_echo_write", (int) 'a');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test307");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        java.lang.Class<?> wildcardClass13 = mkdirApplication2.getClass();
        java.lang.Class<?> wildcardClass14 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication15.run(strArray37, inputStream38, outputStream39);
        java.lang.Class<?> wildcardClass41 = mkdirApplication15.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication42 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        java.lang.String str55 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication58.createFolder(strArray61);
        java.lang.String str63 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray61);
        mkdirApplication15.createFolder(strArray61);
        mkdirApplication2.createFolder(strArray61);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        try {
            catApplication0.run(strArray61, inputStream66, outputStream67);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(wildcardClass13);
        assertNotNull(wildcardClass14);
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray37);
        assertNotNull(wildcardClass41);
        assertNotNull(strArray50);
        assertTrue(str54.equals(""));
        assertTrue(str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray61);
        assertTrue(str63.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test308");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("03-24-2019 00:08:56", "null output stream provided null arguments null output stream provided", (int) (short) 0, "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test309");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.Class<?> wildcardClass74 = strArray72.getClass();
        java.lang.String str75 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream79 = null;
        try {
            java.lang.String str80 = wcApplication0.countFromStdin((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray53);
        assertNotNull(wildcardClass57);
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str73.equals(""));
        assertNotNull(wildcardClass74);
        assertTrue(str75.equals(""));
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test310");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication42.run(strArray49, inputStream50, outputStream51);
        java.lang.Class<?> wildcardClass53 = mkdirApplication42.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication42.run(strArray58, inputStream59, outputStream60);
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication31.run(strArray58, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        echoApplication1.run(strArray58, inputStream65, outputStream66);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        java.lang.String str69 = echoApplication1.constructResult(strArray68);
        java.lang.Class<?> wildcardClass70 = strArray68.getClass();
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            catApplication0.run(strArray68, inputStream71, outputStream72);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray49);
        assertNotNull(wildcardClass53);
        assertNotNull(strArray58);
        assertNotNull(strArray68);
        assertTrue(str69.equals(""));
        assertNotNull(wildcardClass70);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test311");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass4 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        java.lang.String str18 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray13);
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        try {
            pwdApplication0.run(strArray13, inputStream19, outputStream20);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\"));
        assertNotNull(wildcardClass4);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertTrue(str18.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test312");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication4.createFolder(strArray7);
        java.lang.String str9 = findApplication2.findFolderContent("fail_sed_write", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.String str19 = findApplication2.findFolderContent("null input file provided", strArray16);
        java.lang.Class<?> wildcardClass20 = findApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        mkdirApplication25.createFolder(strArray38);
        java.lang.String str44 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication68.run(strArray71, inputStream72, outputStream73);
        java.lang.String str75 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        mkdirApplication58.createFolder(strArray71);
        java.lang.String str77 = findApplication47.findFolderContent("null input file provided", strArray71);
        java.lang.String str78 = lsApplication22.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication81 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.lang.String str90 = findApplication81.findFolderContent("", strArray86);
        java.lang.String str91 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray86);
        java.lang.Class<?> wildcardClass92 = strArray86.getClass();
        java.lang.String str93 = findApplication2.findFolderContent("Exception Caught", strArray86);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            wcApplication0.run(strArray86, inputStream94, outputStream95);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str9.equals(""));
        assertNotNull(strArray16);
        assertTrue(str18.equals(""));
        assertTrue(str19.equals(""));
        assertNotNull(wildcardClass20);
        assertNotNull(strArray28);
        assertNotNull(strArray38);
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray52);
        assertTrue(str56.equals(""));
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray86);
        assertTrue(str90.equals(""));
        assertTrue(str91.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass92);
        assertTrue(str93.equals(""));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test313");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        java.lang.String str29 = echoApplication0.constructResult(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication30.run(strArray37, inputStream38, outputStream39);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        echoApplication0.run(strArray37, inputStream41, outputStream42);
        java.lang.Class<?> wildcardClass44 = echoApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication47.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication58 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication61 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = findApplication61.findFolderContent("", strArray66);
        java.lang.String str71 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication47.run(strArray66, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = mkdirApplication47.getClass();
        java.lang.String[] strArray77 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication47.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = findApplication45.findFolderContent("", strArray77);
        java.lang.String str82 = echoApplication0.constructResult(strArray77);
        java.lang.String[] strArray83 = null;
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            echoApplication0.run(strArray83, inputStream84, outputStream85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: Empty arguments");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str29.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray37);
        assertNotNull(wildcardClass44);
        assertNotNull(strArray54);
        assertNotNull(strArray66);
        assertTrue(str70.equals(""));
        assertTrue(str71.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass75);
        assertNotNull(strArray77);
        assertTrue(str81.equals(""));
        assertTrue(str82.equals("This is a directory Could not read stream Null Pointer Exception Exception Caught"));
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test314");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("C:\\", "03-24-2019 00:07:26", (int) (byte) 0, inputStream4);
            fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unexpected internal error near index 3\r\nC:\\");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test315");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.Class<?> wildcardClass74 = strArray72.getClass();
        java.lang.String str75 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray72);
        java.lang.String[] strArray76 = null;
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        try {
            wcApplication0.run(strArray76, inputStream77, outputStream78);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray53);
        assertNotNull(wildcardClass57);
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str73.equals(""));
        assertNotNull(wildcardClass74);
        assertTrue(str75.equals(""));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test316");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("null arguments");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\null arguments: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test317");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "", "Null Pointer Exception", (int) (byte) 100);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test318");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("null output stream provided\r\nfail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test319");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_sed_write");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_sed_write: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test320");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        try {
            dateApplication0.run(strArray12, inputStream16, outputStream17);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:38"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:38"));
        assertNotNull(strArray12);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test321");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication6.createFolder(strArray9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication6.createFolder(strArray27);
        mkdirApplication5.createFolder(strArray27);
        try {
            java.lang.String str36 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(strArray17);
        assertNotNull(strArray27);
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test322");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("fail_echo_empty_params", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test323");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        java.lang.String[] strArray5 = null;
        try {
            java.lang.String str6 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray5);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: no argument can be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test324");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray41);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication48 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = findApplication51.findFolderContent("", strArray56);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication62.run(strArray65, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        java.lang.String str79 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray75);
        mkdirApplication62.createFolder(strArray75);
        java.lang.String str81 = findApplication51.findFolderContent("null input file provided", strArray75);
        java.lang.String str82 = lsApplication48.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray75);
        java.lang.String str83 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            dateApplication0.run(strArray75, inputStream84, outputStream85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray41);
        assertTrue(str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray56);
        assertTrue(str60.equals(""));
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str81.equals(""));
        assertTrue(str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test325");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        java.lang.Class<?> wildcardClass11 = mkdirApplication0.getClass();
        java.lang.Class<?> wildcardClass12 = mkdirApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication20 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication21.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication35 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        java.lang.String str44 = findApplication35.findFolderContent("", strArray40);
        java.lang.String str45 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray40);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication21.run(strArray40, inputStream46, outputStream47);
        java.lang.String str49 = echoApplication20.constructResult(strArray40);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication50.run(strArray57, inputStream58, outputStream59);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        echoApplication20.run(strArray57, inputStream61, outputStream62);
        mkdirApplication13.createFolder(strArray57);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication0.run(strArray57, inputStream65, outputStream66);
        java.lang.String[] strArray68 = null;
        try {
            mkdirApplication0.createFolder(strArray68);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.MkdirException; message: mkdir: Please check the filename.");
        } catch (sg.edu.nus.comp.cs4218.exception.MkdirException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(wildcardClass11);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertNotNull(strArray40);
        assertTrue(str44.equals(""));
        assertTrue(str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str49.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray57);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test326");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Null Pointer Exception", "hi!", (int) (short) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test327");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication8.run(strArray45, inputStream49, outputStream50);
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication3.run(strArray45, inputStream52, outputStream53);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            dateApplication0.run(strArray45, inputStream55, outputStream56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:38"));
        assertNotNull(strArray6);
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test328");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read stream", "Could not write to output stream", 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test329");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        mkdirApplication20.createFolder(strArray33);
        java.lang.String str39 = findApplication18.findFolderContent("null output stream provided fail_echo_write", strArray33);
        java.lang.Class<?> wildcardClass40 = strArray33.getClass();
        java.lang.String str41 = findApplication7.findFolderContent("null output stream provided fail_echo_write", strArray33);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication45.createFolder(strArray48);
        java.lang.String str50 = findApplication43.findFolderContent("fail_sed_write", strArray48);
        java.lang.String str51 = findApplication7.findFolderContent("null output stream provided\r\nfail_echo_write", strArray48);
        java.lang.String str52 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
        try {
            java.lang.String str53 = grepApplication0.grepFromFiles("fail_echo", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray48);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertNotNull(strArray23);
        assertNotNull(strArray33);
        assertTrue(str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals(""));
        assertNotNull(wildcardClass40);
        assertTrue(str41.equals(""));
        assertNotNull(strArray48);
        assertTrue(str50.equals(""));
        assertTrue(str51.equals(""));
        assertTrue(str52.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test330");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication25 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = lsApplication25.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication18.createFolder(strArray31);
        java.lang.String str37 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        mkdirApplication10.createFolder(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication39 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        mkdirApplication42.createFolder(strArray55);
        java.lang.String str61 = lsApplication39.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray55);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication64 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication66.run(strArray69, inputStream70, outputStream71);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication73 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        java.lang.String str83 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        mkdirApplication66.createFolder(strArray79);
        java.lang.String str85 = findApplication64.findFolderContent("null output stream provided fail_echo_write", strArray79);
        java.lang.String str86 = lsApplication39.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray79);
        mkdirApplication10.createFolder(strArray79);
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            cdApplication0.run(strArray79, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray13);
        assertNotNull(strArray21);
        assertNotNull(strArray31);
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray45);
        assertNotNull(strArray55);
        assertTrue(str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray69);
        assertNotNull(strArray79);
        assertTrue(str83.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str85.equals(""));
        assertTrue(str86.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test331");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        echoApplication8.run(strArray45, inputStream49, outputStream50);
        mkdirApplication1.createFolder(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication81.createFolder(strArray84);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication53.run(strArray84, inputStream86, outputStream87);
        java.lang.String[] strArray94 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication53.createFolder(strArray94);
        mkdirApplication1.createFolder(strArray94);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            grepApplication0.run(strArray94, inputStream97, outputStream98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray60);
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray84);
        assertNotNull(strArray94);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test332");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Null Pointer Exception", "This is a directory Could not read stream Null Pointer Exception Exception Caught", (-1));
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test333");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.Class<?> wildcardClass33 = strArray24.getClass();
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        try {
            pwdApplication0.run(strArray24, inputStream34, outputStream35);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str2.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass33);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test334");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null arguments", "File doesn't exist.", (int) 'a');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test335");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication29.createFolder(strArray32);
        java.lang.String str34 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray32);
        java.lang.String str35 = findApplication2.findFolderContent("hi!", strArray32);
        java.lang.Class<?> wildcardClass36 = findApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.lang.Class<?> wildcardClass49 = mkdirApplication38.getClass();
        java.lang.String[] strArray54 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication38.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication58 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication60.createFolder(strArray63);
        java.lang.String str65 = findApplication58.findFolderContent("fail_sed_write", strArray63);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication38.run(strArray63, inputStream66, outputStream67);
        java.lang.String str69 = findApplication2.findFolderContent("fail_echo_write\r\nhi!", strArray63);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        try {
            catApplication0.run(strArray63, inputStream70, outputStream71);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str11.equals(""));
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray32);
        assertTrue(str34.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str35.equals(""));
        assertNotNull(wildcardClass36);
        assertNotNull(strArray45);
        assertNotNull(wildcardClass49);
        assertNotNull(strArray54);
        assertNotNull(strArray63);
        assertTrue(str65.equals(""));
        assertTrue(str69.equals(""));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test336");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        java.lang.String str24 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication27.createFolder(strArray30);
        java.lang.String str32 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray30);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        try {
            cdApplication0.run(strArray30, inputStream33, outputStream34);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray30);
        assertTrue(str32.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test337");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("03-24-2019 00:09:39", "null output stream provided fail_echo_write", (int) (short) 0, "fail_echo_empty_params");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test338");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        echoApplication5.run(strArray42, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = echoApplication5.constructResult(strArray52);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication57 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication67 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = lsApplication67.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        mkdirApplication60.createFolder(strArray73);
        java.lang.String str79 = lsApplication57.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        echoApplication5.run(strArray73, inputStream80, outputStream81);
        java.lang.Class<?> wildcardClass83 = strArray73.getClass();
        try {
            java.lang.String str84 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray73);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray52);
        assertTrue(str56.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray63);
        assertNotNull(strArray73);
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass83);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test339");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("", "03-24-2019 00:08:56", (int) (byte) -1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test340");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo", "null arguments", (int) (byte) 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test341");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\");
        try {
            cdApplication0.changeToDirectory("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <\r> at index 19: This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test342");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("hi!", "03-24-2019 00:09:39", 10, "fail_echo");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test343");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication2.run(strArray24, inputStream25, outputStream26);
        java.lang.Class<?> wildcardClass28 = strArray24.getClass();
        try {
            java.lang.String str29 = catApplication0.catFiles(strArray24);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray15);
        assertTrue(str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray24);
        assertNotNull(wildcardClass28);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test344");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read file", "null output stream provided:\r\n\r\n\r\nfail_echo_write:", 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test345");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("File doesn't exist.", "Exception Caught", (int) (short) 100, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test346");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication12.createFolder(strArray25);
        java.lang.String str31 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        mkdirApplication45.createFolder(strArray58);
        java.lang.String str64 = findApplication34.findFolderContent("null input file provided", strArray58);
        java.lang.String str65 = lsApplication9.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray58);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication77 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication80 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication80.run(strArray83, inputStream84, outputStream85);
        java.lang.String str87 = lsApplication77.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray83);
        mkdirApplication70.createFolder(strArray83);
        java.lang.String str89 = findApplication68.findFolderContent("null output stream provided fail_echo_write", strArray83);
        java.lang.String str90 = lsApplication9.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray83);
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            pwdApplication0.run(strArray83, inputStream91, outputStream92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertNotNull(strArray15);
        assertNotNull(strArray25);
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray39);
        assertTrue(str43.equals(""));
        assertNotNull(strArray48);
        assertNotNull(strArray58);
        assertTrue(str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(strArray73);
        assertNotNull(strArray83);
        assertTrue(str87.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str89.equals(""));
        assertTrue(str90.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test347");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        mkdirApplication53.createFolder(strArray66);
        java.lang.String str72 = findApplication51.findFolderContent("null output stream provided fail_echo_write", strArray66);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication1.run(strArray66, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = strArray66.getClass();
        try {
            java.lang.String str77 = catApplication0.catFiles(strArray66);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertNotNull(strArray26);
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray66);
        assertTrue(str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str72.equals(""));
        assertNotNull(wildcardClass76);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test348");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        java.lang.String str11 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication12.createFolder(strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        try {
            pwdApplication0.run(strArray25, inputStream31, outputStream32);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertTrue(str10.equals("C:\\"));
        assertTrue(str11.equals("C:\\"));
        assertNotNull(strArray15);
        assertNotNull(strArray25);
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test349");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided", "hi!", (-1));
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test350");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication11 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = lsApplication11.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        mkdirApplication4.createFolder(strArray17);
        java.lang.String str23 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        java.lang.String str45 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray41);
        mkdirApplication28.createFolder(strArray41);
        java.lang.String str47 = findApplication26.findFolderContent("null output stream provided fail_echo_write", strArray41);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray41);
        java.lang.Class<?> wildcardClass49 = strArray41.getClass();
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        try {
            wcApplication0.run(strArray41, inputStream50, outputStream51);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray7);
        assertNotNull(strArray17);
        assertTrue(str21.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertNotNull(strArray41);
        assertTrue(str45.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(wildcardClass49);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test351");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided null arguments null output stream provided", "Could not read stream", 100, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test352");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided fail_echo_write", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) ' ', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test353");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.lang.Class<?> wildcardClass83 = strArray73.getClass();
        java.lang.String str84 = echoApplication1.constructResult(strArray73);
        java.lang.Class<?> wildcardClass85 = strArray73.getClass();
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            sedApplication0.run(strArray73, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray61);
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str82.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass83);
        assertTrue(str84.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass85);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test354");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication5.createFolder(strArray8);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication10 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication11.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        java.lang.String str35 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication11.run(strArray30, inputStream36, outputStream37);
        java.lang.String str39 = echoApplication10.constructResult(strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        echoApplication10.run(strArray47, inputStream51, outputStream52);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication5.run(strArray47, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication57 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication59.createFolder(strArray62);
        java.lang.String str64 = findApplication57.findFolderContent("fail_sed_write", strArray62);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication66 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication68.createFolder(strArray71);
        java.lang.String str73 = findApplication66.findFolderContent("fail_sed_write", strArray71);
        java.lang.String str74 = findApplication57.findFolderContent("null input file provided", strArray71);
        mkdirApplication5.createFolder(strArray71);
        try {
            java.lang.String str76 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray8);
        assertNotNull(strArray18);
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray47);
        assertNotNull(strArray62);
        assertTrue(str64.equals(""));
        assertNotNull(strArray71);
        assertTrue(str73.equals(""));
        assertTrue(str74.equals(""));
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test355");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("", "C:\\", (int) ' ', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test356");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        echoApplication4.run(strArray41, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = echoApplication4.constructResult(strArray51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        mkdirApplication59.createFolder(strArray72);
        java.lang.String str78 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        echoApplication4.run(strArray72, inputStream79, outputStream80);
        try {
            java.lang.String str82 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray72);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray51);
        assertTrue(str55.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str76.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test357");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        try {
            java.lang.String str8 = dateApplication0.getDate("File is null.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:39"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:39"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:39"));
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test358");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write\r\nhi!", "This is a directory", (int) (byte) 1, "");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test359");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication22 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = findApplication22.findFolderContent("", strArray27);
        java.lang.String str32 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication35.createFolder(strArray38);
        java.lang.String str40 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray38);
        java.lang.String str41 = findApplication8.findFolderContent("hi!", strArray38);
        java.lang.Class<?> wildcardClass42 = findApplication8.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication44.getClass();
        java.lang.String[] strArray60 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication44.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication64 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication66 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray69 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication66.createFolder(strArray69);
        java.lang.String str71 = findApplication64.findFolderContent("fail_sed_write", strArray69);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication44.run(strArray69, inputStream72, outputStream73);
        java.lang.String str75 = findApplication8.findFolderContent("fail_echo_write\r\nhi!", strArray69);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            cdApplication0.run(strArray69, inputStream76, outputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertNotNull(strArray27);
        assertTrue(str31.equals(""));
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray38);
        assertTrue(str40.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str41.equals(""));
        assertNotNull(wildcardClass42);
        assertNotNull(strArray51);
        assertNotNull(wildcardClass55);
        assertNotNull(strArray60);
        assertNotNull(strArray69);
        assertTrue(str71.equals(""));
        assertTrue(str75.equals(""));
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test360");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication1.constructResult(strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication43 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication43.run(strArray50, inputStream51, outputStream52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        java.lang.Class<?> wildcardClass65 = mkdirApplication54.getClass();
        java.lang.String[] strArray70 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication54.run(strArray70, inputStream71, outputStream72);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication43.run(strArray70, inputStream74, outputStream75);
        java.lang.Class<?> wildcardClass77 = strArray70.getClass();
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        echoApplication1.run(strArray70, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = strArray70.getClass();
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            exitApplication0.run(strArray70, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertTrue(str42.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        assertNotNull(strArray50);
        assertNotNull(strArray61);
        assertNotNull(wildcardClass65);
        assertNotNull(strArray70);
        assertNotNull(wildcardClass77);
        assertNotNull(wildcardClass81);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test361");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray62);
        mkdirApplication49.createFolder(strArray62);
        java.lang.String str68 = findApplication38.findFolderContent("null input file provided", strArray62);
        java.lang.String str69 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray62);
        java.lang.String str70 = echoApplication5.constructResult(strArray62);
        try {
            java.lang.String str71 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray62);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertNotNull(strArray52);
        assertNotNull(strArray62);
        assertTrue(str66.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals(""));
        assertTrue(str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str70.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test362");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass2 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        mkdirApplication7.createFolder(strArray20);
        java.lang.String str26 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray20);
        java.lang.Class<?> wildcardClass27 = strArray20.getClass();
        java.lang.String str28 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.lang.Class<?> wildcardClass29 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.lang.String str43 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        try {
            sedApplication0.run(strArray38, inputStream44, outputStream45);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(strArray10);
        assertNotNull(strArray20);
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str26.equals(""));
        assertNotNull(wildcardClass27);
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass29);
        assertNotNull(strArray38);
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test363");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        java.lang.String str8 = dateApplication0.getDate("");
        try {
            java.lang.String str10 = dateApplication0.getDate("Terminate process.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str8.equals("03-24-2019 00:09:40"));
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test364");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory", "Could not read stream", (int) 'a', "fail_echo_write\r\nhi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test365");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication34 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray61);
        mkdirApplication48.createFolder(strArray61);
        java.lang.String str67 = findApplication37.findFolderContent("null input file provided", strArray61);
        java.lang.String str68 = lsApplication34.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray61);
        java.lang.String str69 = echoApplication4.constructResult(strArray61);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication70 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass71 = lsApplication70.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication83 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication86 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray89 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication86.run(strArray89, inputStream90, outputStream91);
        java.lang.String str93 = lsApplication83.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
        mkdirApplication76.createFolder(strArray89);
        java.lang.String str95 = findApplication74.findFolderContent("null output stream provided fail_echo_write", strArray89);
        java.lang.Class<?> wildcardClass96 = strArray89.getClass();
        java.lang.String str97 = lsApplication70.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
        java.lang.String str98 = echoApplication4.constructResult(strArray89);
        try {
            java.lang.String str99 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertTrue(str46.equals(""));
        assertNotNull(strArray51);
        assertNotNull(strArray61);
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str67.equals(""));
        assertTrue(str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str69.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass71);
        assertNotNull(strArray79);
        assertNotNull(strArray89);
        assertTrue(str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str95.equals(""));
        assertNotNull(wildcardClass96);
        assertTrue(str97.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str98.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test366");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication7.createFolder(strArray10);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication7.run(strArray15, inputStream19, outputStream20);
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        try {
            cdApplication0.run(strArray15, inputStream22, outputStream23);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray10);
        assertNotNull(strArray15);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test367");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("03-24-2019 00:08:56", (java.lang.Boolean) false, (java.lang.Boolean) false, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test368");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication4.findFolderContent("null input file provided", strArray28);
        java.lang.String str35 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray28);
        java.lang.Class<?> wildcardClass36 = strArray28.getClass();
        java.lang.Class<?> wildcardClass37 = strArray28.getClass();
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        try {
            dateApplication0.run(strArray28, inputStream38, outputStream39);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals(""));
        assertTrue(str35.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass36);
        assertNotNull(wildcardClass37);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test369");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        java.lang.String str8 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.Class<?> wildcardClass16 = strArray12.getClass();
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        try {
            dateApplication0.run(strArray12, inputStream17, outputStream18);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str8.equals("03-24-2019 00:09:40"));
        assertNotNull(strArray12);
        assertNotNull(wildcardClass16);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test370");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication10.createFolder(strArray13);
        java.lang.String str15 = findApplication8.findFolderContent("fail_sed_write", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication29 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication29.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication54 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = findApplication54.findFolderContent("", strArray59);
        java.lang.String str64 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication40.run(strArray59, inputStream65, outputStream66);
        java.lang.String str68 = findApplication29.findFolderContent("Could not read stream", strArray59);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication22.run(strArray59, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication17.run(strArray59, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = strArray59.getClass();
        java.lang.String str76 = findApplication8.findFolderContent("", strArray59);
        mkdirApplication1.createFolder(strArray59);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        try {
            dateApplication0.run(strArray59, inputStream78, outputStream79);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str15.equals(""));
        assertNotNull(strArray20);
        assertNotNull(strArray25);
        assertNotNull(strArray34);
        assertTrue(str38.equals(""));
        assertNotNull(strArray47);
        assertNotNull(strArray59);
        assertTrue(str63.equals(""));
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str68.equals(""));
        assertNotNull(wildcardClass75);
        assertTrue(str76.equals(""));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test371");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        mkdirApplication44.createFolder(strArray57);
        java.lang.String str63 = findApplication33.findFolderContent("null input file provided", strArray57);
        java.lang.String str64 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray57);
        java.lang.Class<?> wildcardClass65 = strArray57.getClass();
        mkdirApplication2.createFolder(strArray57);
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        try {
            wcApplication0.run(strArray57, inputStream67, outputStream68);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertNotNull(strArray47);
        assertNotNull(strArray57);
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str63.equals(""));
        assertTrue(str64.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass65);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test372");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "03-24-2019 00:08:56", "fail_echo_write\r\nhi!", 100);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test373");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication79 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication79.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            grepApplication0.run(strArray85, inputStream90, outputStream91);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
        assertNotNull(strArray85);
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test374");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        echoApplication4.run(strArray41, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = echoApplication4.constructResult(strArray51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        mkdirApplication59.createFolder(strArray72);
        java.lang.String str78 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        echoApplication4.run(strArray72, inputStream79, outputStream80);
        java.lang.Class<?> wildcardClass82 = strArray72.getClass();
        try {
            java.lang.String str83 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray51);
        assertTrue(str55.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str76.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass82);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test375");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication56 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication59 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = findApplication59.findFolderContent("", strArray64);
        java.lang.String str69 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication72.createFolder(strArray75);
        java.lang.String str77 = lsApplication56.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = findApplication45.findFolderContent("hi!", strArray75);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        echoApplication1.run(strArray75, inputStream79, outputStream80);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            wcApplication0.run(strArray75, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray50);
        assertTrue(str54.equals(""));
        assertNotNull(strArray64);
        assertTrue(str68.equals(""));
        assertTrue(str69.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray75);
        assertTrue(str77.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test376");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("fail_echo_write:\r\n\r\n\r\nhi!:", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test377");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("03-24-2019 00:07:26", "null arguments", (int) (short) -1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test378");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Null Pointer Exception", "03-24-2019 00:09:39", (-1), "fail_echo");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test379");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication35.createFolder(strArray38);
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication7.run(strArray38, inputStream40, outputStream41);
        java.lang.String[] strArray48 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication7.createFolder(strArray48);
        java.lang.Class<?> wildcardClass50 = strArray48.getClass();
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        try {
            dateApplication0.run(strArray48, inputStream51, outputStream52);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:40"));
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertNotNull(wildcardClass50);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test380");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test381");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray33);
        mkdirApplication20.createFolder(strArray33);
        java.lang.String str39 = findApplication18.findFolderContent("null output stream provided fail_echo_write", strArray33);
        java.lang.Class<?> wildcardClass40 = strArray33.getClass();
        java.lang.String str41 = findApplication7.findFolderContent("null output stream provided fail_echo_write", strArray33);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication45.createFolder(strArray48);
        java.lang.String str50 = findApplication43.findFolderContent("fail_sed_write", strArray48);
        java.lang.String str51 = findApplication7.findFolderContent("null output stream provided\r\nfail_echo_write", strArray48);
        java.lang.Class<?> wildcardClass52 = strArray48.getClass();
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        try {
            cdApplication0.run(strArray48, inputStream53, outputStream54);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertNotNull(strArray23);
        assertNotNull(strArray33);
        assertTrue(str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str39.equals(""));
        assertNotNull(wildcardClass40);
        assertTrue(str41.equals(""));
        assertNotNull(strArray48);
        assertTrue(str50.equals(""));
        assertTrue(str51.equals(""));
        assertNotNull(wildcardClass52);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test382");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.lang.Class<?> wildcardClass83 = strArray73.getClass();
        java.lang.String str84 = echoApplication1.constructResult(strArray73);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        try {
            dateApplication0.run(strArray73, inputStream85, outputStream86);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray61);
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str82.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass83);
        assertTrue(str84.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test383");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("03-24-2019 00:07:43", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test384");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass6 = lsApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        mkdirApplication11.createFolder(strArray24);
        java.lang.String str30 = findApplication9.findFolderContent("null output stream provided fail_echo_write", strArray24);
        java.lang.Class<?> wildcardClass31 = strArray24.getClass();
        java.lang.String str32 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.lang.Class<?> wildcardClass33 = strArray24.getClass();
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        try {
            dateApplication0.run(strArray24, inputStream34, outputStream35);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:40"));
        assertNotNull(wildcardClass6);
        assertNotNull(strArray14);
        assertNotNull(strArray24);
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals(""));
        assertNotNull(wildcardClass31);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass33);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test385");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        try {
            java.lang.String str8 = dateApplication0.getDate("Could not read file");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:40"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:40"));
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test386");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        java.lang.Class<?> wildcardClass45 = echoApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication48.run(strArray55, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication59 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication62 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        java.lang.String str71 = findApplication62.findFolderContent("", strArray67);
        java.lang.String str72 = lsApplication59.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray67);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication48.run(strArray67, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = mkdirApplication48.getClass();
        java.lang.String[] strArray78 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication48.run(strArray78, inputStream79, outputStream80);
        java.lang.String str82 = findApplication46.findFolderContent("", strArray78);
        java.lang.String str83 = echoApplication1.constructResult(strArray78);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        try {
            sedApplication0.run(strArray78, inputStream84, outputStream85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(wildcardClass45);
        assertNotNull(strArray55);
        assertNotNull(strArray67);
        assertTrue(str71.equals(""));
        assertTrue(str72.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass76);
        assertNotNull(strArray78);
        assertTrue(str82.equals(""));
        assertTrue(str83.equals("This is a directory Could not read stream Null Pointer Exception Exception Caught"));
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test387");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication14.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        java.lang.Class<?> wildcardClass36 = mkdirApplication25.getClass();
        java.lang.String[] strArray41 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication25.run(strArray41, inputStream42, outputStream43);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication14.run(strArray41, inputStream45, outputStream46);
        java.lang.String str48 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray41);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        try {
            exitApplication0.run(strArray41, inputStream49, outputStream50);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray7);
        assertTrue(str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray21);
        assertNotNull(strArray32);
        assertNotNull(wildcardClass36);
        assertNotNull(strArray41);
        assertTrue(str48.equals("This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught"));
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test388");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_sed_write", "C:\\", (int) (byte) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test389");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        java.lang.Class<?> wildcardClass16 = mkdirApplication5.getClass();
        java.lang.Class<?> wildcardClass17 = mkdirApplication5.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication25 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication26.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication42.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = findApplication40.findFolderContent("", strArray45);
        java.lang.String str50 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication26.run(strArray45, inputStream51, outputStream52);
        java.lang.String str54 = echoApplication25.constructResult(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        echoApplication25.run(strArray62, inputStream66, outputStream67);
        mkdirApplication18.createFolder(strArray62);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication5.run(strArray62, inputStream70, outputStream71);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication73 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication83 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication86 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray89 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication86.run(strArray89, inputStream90, outputStream91);
        java.lang.String str93 = lsApplication83.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
        mkdirApplication76.createFolder(strArray89);
        java.lang.String str95 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray89);
        mkdirApplication5.createFolder(strArray89);
        try {
            java.lang.String str97 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray12);
        assertNotNull(wildcardClass16);
        assertNotNull(wildcardClass17);
        assertNotNull(strArray21);
        assertNotNull(strArray33);
        assertNotNull(strArray45);
        assertTrue(str49.equals(""));
        assertTrue(str50.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str54.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray62);
        assertNotNull(strArray79);
        assertNotNull(strArray89);
        assertTrue(str93.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str95.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test390");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("File doesn't exist.", "null output stream provided:\r\n\r\n\r\nnull arguments:", (int) (byte) 100, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test391");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        java.lang.String str17 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication36.createFolder(strArray39);
        java.lang.String str41 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray39);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication44.run(strArray51, inputStream52, outputStream53);
        java.lang.Class<?> wildcardClass55 = mkdirApplication44.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication56 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication71 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = findApplication71.findFolderContent("", strArray76);
        java.lang.String str81 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication57.run(strArray76, inputStream82, outputStream83);
        java.lang.String str85 = echoApplication56.constructResult(strArray76);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication44.run(strArray76, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray76);
        java.lang.String str90 = lsApplication4.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray76);
        java.lang.Class<?> wildcardClass91 = strArray76.getClass();
        try {
            java.lang.String str92 = grepApplication0.grepFromFiles("", (java.lang.Boolean) false, (java.lang.Boolean) true, strArray76);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertTrue(str17.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray39);
        assertTrue(str41.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray51);
        assertNotNull(wildcardClass55);
        assertNotNull(strArray64);
        assertNotNull(strArray76);
        assertTrue(str80.equals(""));
        assertTrue(str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str85.equals("null output stream provided fail_echo_write"));
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str90.equals("null output stream provided\r\nfail_echo_write"));
        assertNotNull(wildcardClass91);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test392");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("null output stream provided:\r\n\r\n\r\nnull arguments:", "null input file provided", (int) 'a', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test393");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided fail_echo_write", "C:\\", 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test394");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication77 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray80 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication77.createFolder(strArray80);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication77.run(strArray85, inputStream89, outputStream90);
        try {
            java.lang.String str92 = grepApplication0.grepFromFiles("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray85);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
        assertNotNull(strArray80);
        assertNotNull(strArray85);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test395");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = echoApplication1.constructResult(strArray38);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication43 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = findApplication43.findFolderContent("", strArray48);
        java.lang.String str53 = echoApplication1.constructResult(strArray48);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        try {
            wcApplication0.run(strArray48, inputStream54, outputStream55);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertTrue(str42.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        assertNotNull(strArray48);
        assertTrue(str52.equals(""));
        assertTrue(str53.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test396");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication33 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = lsApplication33.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        mkdirApplication26.createFolder(strArray39);
        java.lang.String str45 = findApplication24.findFolderContent("null output stream provided fail_echo_write", strArray39);
        java.lang.Class<?> wildcardClass46 = strArray39.getClass();
        java.lang.String str47 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray39);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication49 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication51.createFolder(strArray54);
        java.lang.String str56 = findApplication49.findFolderContent("fail_sed_write", strArray54);
        java.lang.String str57 = findApplication13.findFolderContent("null output stream provided\r\nfail_echo_write", strArray54);
        java.lang.String[] strArray64 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str65 = findApplication13.findFolderContent("null output stream provided null arguments null output stream provided", strArray64);
        java.lang.Class<?> wildcardClass66 = strArray64.getClass();
        mkdirApplication1.createFolder(strArray64);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            exitApplication0.run(strArray64, inputStream68, outputStream69);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray18);
        assertTrue(str22.equals(""));
        assertNotNull(strArray29);
        assertNotNull(strArray39);
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals(""));
        assertNotNull(wildcardClass46);
        assertTrue(str47.equals(""));
        assertNotNull(strArray54);
        assertTrue(str56.equals(""));
        assertTrue(str57.equals(""));
        assertNotNull(strArray64);
        assertTrue(str65.equals(""));
        assertNotNull(wildcardClass66);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test397");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication4 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = mkdirApplication49.getClass();
        java.lang.String[] strArray65 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication49.run(strArray65, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication38.run(strArray65, inputStream69, outputStream70);
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        echoApplication8.run(strArray65, inputStream72, outputStream73);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String str76 = echoApplication8.constructResult(strArray75);
        java.lang.String str77 = grepApplication4.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray75);
        java.lang.String str78 = grepApplication0.grepFromFiles("null output stream provided fail_echo_write", (java.lang.Boolean) true, (java.lang.Boolean) false, strArray75);
        java.io.InputStream inputStream82 = null;
        try {
            java.lang.String str83 = grepApplication0.grepFromStdin("File is null.", (java.lang.Boolean) true, (java.lang.Boolean) true, inputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertNotNull(strArray56);
        assertNotNull(wildcardClass60);
        assertNotNull(strArray65);
        assertNotNull(strArray75);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals(""));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test398");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication11 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication12.run(strArray19, inputStream20, outputStream21);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication12.run(strArray31, inputStream37, outputStream38);
        java.lang.String str40 = echoApplication11.constructResult(strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication41.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication11.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication64.run(strArray71, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = mkdirApplication64.getClass();
        java.lang.String[] strArray80 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication64.run(strArray80, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication53.run(strArray80, inputStream84, outputStream85);
        java.lang.Class<?> wildcardClass87 = strArray80.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        echoApplication11.run(strArray80, inputStream88, outputStream89);
        java.lang.Class<?> wildcardClass91 = strArray80.getClass();
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            cdApplication0.run(strArray80, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray19);
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str40.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertTrue(str52.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        assertNotNull(strArray60);
        assertNotNull(strArray71);
        assertNotNull(wildcardClass75);
        assertNotNull(strArray80);
        assertNotNull(wildcardClass87);
        assertNotNull(wildcardClass91);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test399");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass7 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication11.createFolder(strArray14);
        java.lang.String str16 = findApplication9.findFolderContent("fail_sed_write", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication20.createFolder(strArray23);
        java.lang.String str25 = findApplication18.findFolderContent("fail_sed_write", strArray23);
        java.lang.String str26 = findApplication9.findFolderContent("null input file provided", strArray23);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        java.lang.String str35 = findApplication28.findFolderContent("fail_sed_write", strArray33);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication39.createFolder(strArray42);
        java.lang.String str44 = findApplication37.findFolderContent("fail_sed_write", strArray42);
        java.lang.String str45 = findApplication28.findFolderContent("null input file provided", strArray42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication47 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication49.run(strArray52, inputStream53, outputStream54);
        java.lang.String str56 = findApplication47.findFolderContent("", strArray52);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication58.run(strArray65, inputStream66, outputStream67);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication69 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication72 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = findApplication72.findFolderContent("", strArray77);
        java.lang.String str82 = lsApplication69.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream83 = null;
        java.io.OutputStream outputStream84 = null;
        mkdirApplication58.run(strArray77, inputStream83, outputStream84);
        java.lang.String str86 = findApplication47.findFolderContent("Could not read stream", strArray77);
        java.lang.String str87 = findApplication28.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray77);
        java.lang.String str88 = findApplication9.findFolderContent("File is null.", strArray77);
        mkdirApplication8.createFolder(strArray77);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        try {
            pwdApplication0.run(strArray77, inputStream90, outputStream91);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertNotNull(wildcardClass7);
        assertNotNull(strArray14);
        assertTrue(str16.equals(""));
        assertNotNull(strArray23);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals(""));
        assertNotNull(strArray33);
        assertTrue(str35.equals(""));
        assertNotNull(strArray42);
        assertTrue(str44.equals(""));
        assertTrue(str45.equals(""));
        assertNotNull(strArray52);
        assertTrue(str56.equals(""));
        assertNotNull(strArray65);
        assertNotNull(strArray77);
        assertTrue(str81.equals(""));
        assertTrue(str82.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str86.equals(""));
        assertTrue(str87.equals(""));
        assertTrue(str88.equals(""));
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test400");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory", "Could not read file", (int) (short) 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test401");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read file", "null output stream provided fail_echo_write", (int) (byte) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test402");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("Could not read file", "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", (int) '#', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test403");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication51 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.lang.String str70 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray66);
        mkdirApplication53.createFolder(strArray66);
        java.lang.String str72 = findApplication51.findFolderContent("null output stream provided fail_echo_write", strArray66);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication1.run(strArray66, inputStream73, outputStream74);
        java.lang.Class<?> wildcardClass76 = strArray66.getClass();
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        try {
            dateApplication0.run(strArray66, inputStream77, outputStream78);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertNotNull(strArray26);
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray66);
        assertTrue(str70.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str72.equals(""));
        assertNotNull(wildcardClass76);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test404");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass2 = lsApplication1.getClass();
        java.lang.Class<?> wildcardClass3 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = echoApplication6.constructResult(strArray53);
        java.lang.Class<?> wildcardClass58 = strArray53.getClass();
        java.lang.String str59 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray53);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        try {
            sedApplication0.run(strArray53, inputStream60, outputStream61);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
        assertNotNull(strArray53);
        assertTrue(str57.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass58);
        assertTrue(str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test405");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided\r\nfail_echo_write", "03-24-2019 00:07:26", (int) (short) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test406");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory Could not read stream Null Pointer Exception Exception Caught", "null output stream provided:\r\n\r\n\r\nnull arguments:", (int) (short) -1, "File is null.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test407");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication5 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        mkdirApplication8.createFolder(strArray21);
        java.lang.String str27 = lsApplication5.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        try {
            dateApplication0.run(strArray21, inputStream28, outputStream29);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:41"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:41"));
        assertNotNull(strArray11);
        assertNotNull(strArray21);
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test408");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write:\r\n\r\n\r\nhi!:", "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", (int) (byte) 100, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test409");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication8 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication10.run(strArray13, inputStream14, outputStream15);
        java.lang.String str17 = findApplication8.findFolderContent("", strArray13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication19.run(strArray26, inputStream27, outputStream28);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication30 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = findApplication33.findFolderContent("", strArray38);
        java.lang.String str43 = lsApplication30.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication19.run(strArray38, inputStream44, outputStream45);
        java.lang.String str47 = findApplication8.findFolderContent("Could not read stream", strArray38);
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication1.run(strArray38, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication51 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray54 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        mkdirApplication51.run(strArray54, inputStream55, outputStream56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication58 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication61 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication61.run(strArray64, inputStream65, outputStream66);
        java.lang.String str68 = lsApplication58.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray64);
        mkdirApplication51.createFolder(strArray64);
        mkdirApplication1.createFolder(strArray64);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        try {
            catApplication0.run(strArray64, inputStream71, outputStream72);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray13);
        assertTrue(str17.equals(""));
        assertNotNull(strArray26);
        assertNotNull(strArray38);
        assertTrue(str42.equals(""));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str47.equals(""));
        assertNotNull(strArray54);
        assertNotNull(strArray64);
        assertTrue(str68.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test410");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_echo_write", 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test411");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("This is a directory Could not read stream Null Pointer Exception Exception Caught", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test412");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication5 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray13 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream14 = null;
        java.io.OutputStream outputStream15 = null;
        mkdirApplication6.run(strArray13, inputStream14, outputStream15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication17 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        java.lang.String str30 = lsApplication17.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication6.run(strArray25, inputStream31, outputStream32);
        java.lang.String str34 = echoApplication5.constructResult(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication35.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = mkdirApplication46.getClass();
        java.lang.String[] strArray62 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication46.run(strArray62, inputStream63, outputStream64);
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication35.run(strArray62, inputStream66, outputStream67);
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        echoApplication5.run(strArray62, inputStream69, outputStream70);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        java.lang.String str73 = echoApplication5.constructResult(strArray72);
        java.lang.String str74 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray72);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication78.createFolder(strArray81);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication83 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray86 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication83.run(strArray86, inputStream87, outputStream88);
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication78.run(strArray86, inputStream90, outputStream91);
        try {
            java.lang.String str93 = wcApplication0.countFromFiles((java.lang.Boolean) true, (java.lang.Boolean) false, (java.lang.Boolean) false, strArray86);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray13);
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray42);
        assertNotNull(strArray53);
        assertNotNull(wildcardClass57);
        assertNotNull(strArray62);
        assertNotNull(strArray72);
        assertTrue(str73.equals(""));
        assertTrue(str74.equals(""));
        assertNotNull(strArray81);
        assertNotNull(strArray86);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test413");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write hi!", "Could not read stream", 100);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test414");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        java.lang.Class<?> wildcardClass1 = wcApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication13.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        mkdirApplication13.createFolder(strArray26);
        java.lang.String str32 = findApplication2.findFolderContent("null input file provided", strArray26);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        try {
            wcApplication0.run(strArray26, inputStream33, outputStream34);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str11.equals(""));
        assertNotNull(strArray16);
        assertNotNull(strArray26);
        assertTrue(str30.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals(""));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test415");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        java.lang.Class<?> wildcardClass12 = mkdirApplication1.getClass();
        java.lang.String[] strArray17 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication1.run(strArray17, inputStream18, outputStream19);
        java.lang.Class<?> wildcardClass21 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        mkdirApplication22.createFolder(strArray35);
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication22.run(strArray44, inputStream45, outputStream46);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication48 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = echoApplication48.constructResult(strArray68);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication78.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = echoApplication48.constructResult(strArray85);
        mkdirApplication22.createFolder(strArray85);
        mkdirApplication1.createFolder(strArray85);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            sedApplication0.run(strArray85, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(wildcardClass12);
        assertNotNull(strArray17);
        assertNotNull(wildcardClass21);
        assertNotNull(strArray25);
        assertNotNull(strArray35);
        assertTrue(str39.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray44);
        assertNotNull(strArray56);
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray85);
        assertTrue(str89.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test416");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.lang.String[] strArray80 = new java.lang.String[] { "This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "This is a directory", "fail_sed_write", "This is a directory Could not read stream Null Pointer Exception Exception Caught", "fail_echo", "fail_echo_write" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            grepApplication0.run(strArray80, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
        assertNotNull(strArray80);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test417");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        try {
            java.lang.String str2 = dateApplication0.getDate("Could not read file");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test418");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        java.lang.String str31 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray27);
        mkdirApplication14.createFolder(strArray27);
        java.lang.String str33 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray27);
        java.lang.Class<?> wildcardClass34 = strArray27.getClass();
        java.lang.String str35 = findApplication1.findFolderContent("null output stream provided fail_echo_write", strArray27);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication37 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        java.lang.String str46 = findApplication37.findFolderContent("", strArray42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication57 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication60 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray63 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication60.run(strArray63, inputStream64, outputStream65);
        java.lang.String str67 = lsApplication57.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray63);
        mkdirApplication50.createFolder(strArray63);
        java.lang.String str69 = findApplication48.findFolderContent("null output stream provided fail_echo_write", strArray63);
        java.lang.Class<?> wildcardClass70 = strArray63.getClass();
        java.lang.String str71 = findApplication37.findFolderContent("null output stream provided fail_echo_write", strArray63);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication73 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication75 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray78 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication75.createFolder(strArray78);
        java.lang.String str80 = findApplication73.findFolderContent("fail_sed_write", strArray78);
        java.lang.String str81 = findApplication37.findFolderContent("null output stream provided\r\nfail_echo_write", strArray78);
        java.lang.String str82 = findApplication1.findFolderContent("File doesn't exist.", strArray78);
        java.lang.String str83 = echoApplication0.constructResult(strArray78);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication84 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray87 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication84.createFolder(strArray87);
        java.lang.String str89 = echoApplication0.constructResult(strArray87);
        java.lang.String[] strArray90 = null;
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        try {
            echoApplication0.run(strArray90, inputStream91, outputStream92);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException; message: echo: Empty arguments");
        } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray17);
        assertNotNull(strArray27);
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals(""));
        assertNotNull(wildcardClass34);
        assertTrue(str35.equals(""));
        assertNotNull(strArray42);
        assertTrue(str46.equals(""));
        assertNotNull(strArray53);
        assertNotNull(strArray63);
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str69.equals(""));
        assertNotNull(wildcardClass70);
        assertTrue(str71.equals(""));
        assertNotNull(strArray78);
        assertTrue(str80.equals(""));
        assertTrue(str81.equals(""));
        assertTrue(str82.equals(""));
        assertTrue(str83.equals("fail_echo_write hi!"));
        assertNotNull(strArray87);
        assertTrue(str89.equals("fail_echo_write hi!"));
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test419");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        mkdirApplication25.createFolder(strArray38);
        java.lang.String str44 = findApplication23.findFolderContent("null output stream provided fail_echo_write", strArray38);
        java.lang.Class<?> wildcardClass45 = strArray38.getClass();
        java.lang.String str46 = findApplication12.findFolderContent("null output stream provided fail_echo_write", strArray38);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication48 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication50.createFolder(strArray53);
        java.lang.String str55 = findApplication48.findFolderContent("fail_sed_write", strArray53);
        java.lang.String str56 = findApplication12.findFolderContent("null output stream provided\r\nfail_echo_write", strArray53);
        java.lang.String[] strArray63 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str64 = findApplication12.findFolderContent("null output stream provided null arguments null output stream provided", strArray63);
        java.lang.Class<?> wildcardClass65 = strArray63.getClass();
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        try {
            cdApplication0.run(strArray63, inputStream66, outputStream67);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertNotNull(strArray28);
        assertNotNull(strArray38);
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals(""));
        assertNotNull(wildcardClass45);
        assertTrue(str46.equals(""));
        assertNotNull(strArray53);
        assertTrue(str55.equals(""));
        assertTrue(str56.equals(""));
        assertNotNull(strArray63);
        assertTrue(str64.equals(""));
        assertNotNull(wildcardClass65);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test420");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("File doesn't exist.");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\File doesn't exist.: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test421");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication15.run(strArray22, inputStream23, outputStream24);
        java.lang.Class<?> wildcardClass26 = mkdirApplication15.getClass();
        java.lang.String[] strArray31 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication15.run(strArray31, inputStream32, outputStream33);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication4.run(strArray31, inputStream35, outputStream36);
        java.lang.Class<?> wildcardClass38 = strArray31.getClass();
        try {
            java.lang.String str39 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) false, (java.lang.Boolean) true, strArray31);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray11);
        assertNotNull(strArray22);
        assertNotNull(wildcardClass26);
        assertNotNull(strArray31);
        assertNotNull(wildcardClass38);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test422");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("fail_sed_write");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\fail_sed_write: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test423");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication3.createFolder(strArray6);
        java.lang.String str8 = findApplication1.findFolderContent("fail_sed_write", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication12.createFolder(strArray15);
        java.lang.String str17 = findApplication10.findFolderContent("fail_sed_write", strArray15);
        java.lang.String str18 = findApplication1.findFolderContent("null input file provided", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication20 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = findApplication20.findFolderContent("", strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication42 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication45 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = findApplication45.findFolderContent("", strArray50);
        java.lang.String str55 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray50);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication31.run(strArray50, inputStream56, outputStream57);
        java.lang.String str59 = findApplication20.findFolderContent("Could not read stream", strArray50);
        java.lang.String str60 = findApplication1.findFolderContent("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", strArray50);
        java.lang.Class<?> wildcardClass61 = strArray50.getClass();
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        try {
            exitApplication0.run(strArray50, inputStream62, outputStream63);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str8.equals(""));
        assertNotNull(strArray15);
        assertTrue(str17.equals(""));
        assertTrue(str18.equals(""));
        assertNotNull(strArray25);
        assertTrue(str29.equals(""));
        assertNotNull(strArray38);
        assertNotNull(strArray50);
        assertTrue(str54.equals(""));
        assertTrue(str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str59.equals(""));
        assertTrue(str60.equals(""));
        assertNotNull(wildcardClass61);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test424");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        mkdirApplication6.createFolder(strArray19);
        java.lang.String str25 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray19);
        java.lang.Class<?> wildcardClass26 = strArray19.getClass();
        java.lang.String str27 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray19);
        java.lang.Class<?> wildcardClass28 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray34 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication31.run(strArray34, inputStream35, outputStream36);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication49 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication49.run(strArray56, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication60 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication63 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication65.run(strArray68, inputStream69, outputStream70);
        java.lang.String str72 = findApplication63.findFolderContent("", strArray68);
        java.lang.String str73 = lsApplication60.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray68);
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication49.run(strArray68, inputStream74, outputStream75);
        java.lang.String str77 = findApplication38.findFolderContent("Could not read stream", strArray68);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication31.run(strArray68, inputStream78, outputStream79);
        java.lang.Class<?> wildcardClass81 = mkdirApplication31.getClass();
        java.lang.String[] strArray83 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication31.createFolder(strArray83);
        java.lang.Class<?> wildcardClass85 = strArray83.getClass();
        java.lang.Class<?> wildcardClass86 = strArray83.getClass();
        java.lang.String str87 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray83);
        java.lang.Class<?> wildcardClass88 = lsApplication0.getClass();
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(strArray19);
        assertTrue(str23.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str25.equals(""));
        assertNotNull(wildcardClass26);
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass28);
        assertNotNull(strArray34);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertNotNull(strArray56);
        assertNotNull(strArray68);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str77.equals(""));
        assertNotNull(wildcardClass81);
        assertNotNull(strArray83);
        assertNotNull(wildcardClass85);
        assertNotNull(wildcardClass86);
        assertTrue(str87.equals("null output stream provided"));
        assertNotNull(wildcardClass88);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test425");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write hi!", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (int) (short) 100);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test426");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication3 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.String str32 = echoApplication3.constructResult(strArray23);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication33.run(strArray40, inputStream41, outputStream42);
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        echoApplication3.run(strArray40, inputStream44, outputStream45);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication47 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray50 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream51 = null;
        java.io.OutputStream outputStream52 = null;
        mkdirApplication47.run(strArray50, inputStream51, outputStream52);
        java.lang.String str54 = echoApplication3.constructResult(strArray50);
        java.io.InputStream inputStream55 = null;
        java.io.OutputStream outputStream56 = null;
        try {
            dateApplication0.run(strArray50, inputStream55, outputStream56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:42"));
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str32.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray40);
        assertNotNull(strArray50);
        assertTrue(str54.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test427");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Could not read file", "File is null.", (int) (byte) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test428");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication16.createFolder(strArray19);
        java.lang.String str21 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray19);
        java.lang.String[] strArray24 = null;
        try {
            java.lang.String str25 = lsApplication0.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray24);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.LsException; message: ls: Input arguments cannot be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.LsException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray19);
        assertTrue(str21.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test429");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        java.lang.String str11 = pwdApplication0.getAbsolutePath();
        java.lang.String str12 = pwdApplication0.getAbsolutePath();
        java.lang.String str13 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication23.createFolder(strArray26);
        java.lang.String str28 = findApplication21.findFolderContent("fail_sed_write", strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication30.createFolder(strArray33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication42 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = findApplication42.findFolderContent("", strArray47);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = findApplication42.findFolderContent("Could not read stream", strArray72);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication35.run(strArray72, inputStream82, outputStream83);
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication30.run(strArray72, inputStream85, outputStream86);
        java.lang.Class<?> wildcardClass88 = strArray72.getClass();
        java.lang.String str89 = findApplication21.findFolderContent("", strArray72);
        mkdirApplication14.createFolder(strArray72);
        java.lang.Class<?> wildcardClass91 = strArray72.getClass();
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            pwdApplication0.run(strArray72, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertTrue(str10.equals("C:\\"));
        assertTrue(str11.equals("C:\\"));
        assertTrue(str12.equals("C:\\"));
        assertTrue(str13.equals("C:\\"));
        assertNotNull(strArray17);
        assertNotNull(strArray26);
        assertTrue(str28.equals(""));
        assertNotNull(strArray33);
        assertNotNull(strArray38);
        assertNotNull(strArray47);
        assertTrue(str51.equals(""));
        assertNotNull(strArray60);
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str81.equals(""));
        assertNotNull(wildcardClass88);
        assertTrue(str89.equals(""));
        assertNotNull(wildcardClass91);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test430");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo", "null output stream provided", (int) ' ');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test431");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication3 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication5.run(strArray8, inputStream9, outputStream10);
        java.lang.String str12 = findApplication3.findFolderContent("", strArray8);
        java.lang.String str13 = lsApplication0.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray8);
        java.lang.Class<?> wildcardClass14 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication15 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication16.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication27 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication30 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        mkdirApplication32.run(strArray35, inputStream36, outputStream37);
        java.lang.String str39 = findApplication30.findFolderContent("", strArray35);
        java.lang.String str40 = lsApplication27.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray35);
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication16.run(strArray35, inputStream41, outputStream42);
        java.lang.String str44 = echoApplication15.constructResult(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        echoApplication15.run(strArray52, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication59.run(strArray62, inputStream63, outputStream64);
        java.lang.String str66 = echoApplication15.constructResult(strArray62);
        java.lang.Class<?> wildcardClass67 = strArray62.getClass();
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        try {
            lsApplication0.run(strArray62, inputStream68, outputStream69);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(strArray8);
        assertTrue(str12.equals(""));
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass14);
        assertNotNull(strArray23);
        assertNotNull(strArray35);
        assertTrue(str39.equals(""));
        assertTrue(str40.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str44.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray52);
        assertNotNull(strArray62);
        assertTrue(str66.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass67);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test432");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.Class<?> wildcardClass1 = findApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication4.run(strArray23, inputStream29, outputStream30);
        java.lang.Class<?> wildcardClass32 = mkdirApplication4.getClass();
        java.lang.String[] strArray34 = new java.lang.String[] { "This is a directory Could not read stream Null Pointer Exception Exception Caught" };
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication4.run(strArray34, inputStream35, outputStream36);
        java.lang.String str38 = findApplication2.findFolderContent("", strArray34);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication40.run(strArray47, inputStream48, outputStream49);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication51 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = lsApplication51.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        mkdirApplication40.createFolder(strArray57);
        java.lang.String str63 = findApplication2.findFolderContent("null input file provided", strArray57);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        try {
            findApplication0.run(strArray57, inputStream64, outputStream65);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: output stream is null");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass32);
        assertNotNull(strArray34);
        assertTrue(str38.equals(""));
        assertNotNull(strArray47);
        assertNotNull(strArray57);
        assertTrue(str61.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str63.equals(""));
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test433");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo", "fail_echo", (int) (short) 1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test434");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication6 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication9.createFolder(strArray22);
        java.lang.String str28 = lsApplication6.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        mkdirApplication1.createFolder(strArray22);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        try {
            sortApplication0.run(strArray22, inputStream30, outputStream31);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray12);
        assertNotNull(strArray22);
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test435");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication11 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication13.createFolder(strArray16);
        java.lang.String str18 = findApplication11.findFolderContent("fail_sed_write", strArray16);
        java.lang.Class<?> wildcardClass19 = findApplication11.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication24.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        mkdirApplication24.createFolder(strArray37);
        java.lang.String str43 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray70 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication67.run(strArray70, inputStream71, outputStream72);
        java.lang.String str74 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray70);
        mkdirApplication57.createFolder(strArray70);
        java.lang.String str76 = findApplication46.findFolderContent("null input file provided", strArray70);
        java.lang.String str77 = lsApplication21.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray70);
        java.lang.String str78 = findApplication11.findFolderContent("03-24-2019 00:07:26", strArray70);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        try {
            pwdApplication0.run(strArray70, inputStream79, outputStream80);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertTrue(str9.equals("C:\\"));
        assertTrue(str10.equals("C:\\"));
        assertNotNull(strArray16);
        assertTrue(str18.equals(""));
        assertNotNull(wildcardClass19);
        assertNotNull(strArray27);
        assertNotNull(strArray37);
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray51);
        assertTrue(str55.equals(""));
        assertNotNull(strArray60);
        assertNotNull(strArray70);
        assertTrue(str74.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided\r\nfail_echo_write"));
        assertTrue(str78.equals(""));
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test436");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("Exception Caught");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Exception Caught: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test437");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.String str2 = pwdApplication0.getAbsolutePath();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String[] strArray8 = null;
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        try {
            pwdApplication0.run(strArray8, inputStream9, outputStream10);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertTrue(str2.equals("C:\\"));
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test438");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("null output stream provided fail_echo_write", "fail_echo_write", (int) (short) 1, "fail_echo_write hi!");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test439");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication0.run(strArray7, inputStream8, outputStream9);
        java.lang.Class<?> wildcardClass11 = mkdirApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication12 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication13 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication13.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication29.run(strArray32, inputStream33, outputStream34);
        java.lang.String str36 = findApplication27.findFolderContent("", strArray32);
        java.lang.String str37 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray32);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication13.run(strArray32, inputStream38, outputStream39);
        java.lang.String str41 = echoApplication12.constructResult(strArray32);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication0.run(strArray32, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication52 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication64 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication67 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication69 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray72 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        mkdirApplication69.run(strArray72, inputStream73, outputStream74);
        java.lang.String str76 = findApplication67.findFolderContent("", strArray72);
        java.lang.String str77 = lsApplication64.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray72);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication53.run(strArray72, inputStream78, outputStream79);
        java.lang.String str81 = echoApplication52.constructResult(strArray72);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray89 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream90 = null;
        java.io.OutputStream outputStream91 = null;
        mkdirApplication82.run(strArray89, inputStream90, outputStream91);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        echoApplication52.run(strArray89, inputStream93, outputStream94);
        mkdirApplication45.createFolder(strArray89);
        mkdirApplication0.createFolder(strArray89);
        assertNotNull(strArray7);
        assertNotNull(wildcardClass11);
        assertNotNull(strArray20);
        assertNotNull(strArray32);
        assertTrue(str36.equals(""));
        assertTrue(str37.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str41.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray48);
        assertNotNull(strArray60);
        assertNotNull(strArray72);
        assertTrue(str76.equals(""));
        assertTrue(str77.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str81.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray89);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test440");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass6 = pwdApplication0.getClass();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.String str8 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication9.run(strArray46, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication9.constructResult(strArray56);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication61 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray67 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication64.run(strArray67, inputStream68, outputStream69);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication74 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray77 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        mkdirApplication74.run(strArray77, inputStream78, outputStream79);
        java.lang.String str81 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        mkdirApplication64.createFolder(strArray77);
        java.lang.String str83 = lsApplication61.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray77);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        echoApplication9.run(strArray77, inputStream84, outputStream85);
        java.lang.Class<?> wildcardClass87 = strArray77.getClass();
        java.io.InputStream inputStream88 = null;
        java.io.OutputStream outputStream89 = null;
        try {
            pwdApplication0.run(strArray77, inputStream88, outputStream89);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertNotNull(wildcardClass6);
        assertTrue(str7.equals("C:\\"));
        assertTrue(str8.equals("C:\\"));
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str38.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray46);
        assertNotNull(strArray56);
        assertTrue(str60.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray67);
        assertNotNull(strArray77);
        assertTrue(str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass87);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test441");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        try {
            java.lang.String str2 = dateApplication0.getDate("03-24-2019 00:08:56");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test442");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = grepApplication0.grepFromStdin("File doesn't exist.", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream4);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test443");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist.", "fail_echo_write hi!", (int) '#');
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test444");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication2 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication3.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        java.lang.String str27 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray22);
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication3.run(strArray22, inputStream28, outputStream29);
        java.lang.String str31 = echoApplication2.constructResult(strArray22);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication41 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication44 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray47 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream48 = null;
        java.io.OutputStream outputStream49 = null;
        mkdirApplication44.run(strArray47, inputStream48, outputStream49);
        java.lang.String str51 = lsApplication41.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray47);
        mkdirApplication34.createFolder(strArray47);
        java.lang.String str53 = findApplication32.findFolderContent("null output stream provided fail_echo_write", strArray47);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        echoApplication2.run(strArray47, inputStream54, outputStream55);
        java.lang.Class<?> wildcardClass57 = echoApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication58.createFolder(strArray61);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication63.run(strArray66, inputStream67, outputStream68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication58.run(strArray66, inputStream70, outputStream71);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        echoApplication2.run(strArray66, inputStream73, outputStream74);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            sortApplication0.run(strArray66, inputStream76, outputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray10);
        assertNotNull(strArray22);
        assertTrue(str26.equals(""));
        assertTrue(str27.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str31.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray37);
        assertNotNull(strArray47);
        assertTrue(str51.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str53.equals(""));
        assertNotNull(wildcardClass57);
        assertNotNull(strArray61);
        assertNotNull(strArray66);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test445");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "This is a directory", "fail_echo_write hi!", 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test446");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("This is a directory Could not read stream Null Pointer Exception Exception Caught", "Terminate process.", (int) (byte) 10, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test447");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass7 = pwdApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication8.run(strArray11, inputStream12, outputStream13);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication15 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication18 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray23 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication20.run(strArray23, inputStream24, outputStream25);
        java.lang.String str27 = findApplication18.findFolderContent("", strArray23);
        java.lang.String str28 = lsApplication15.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray23);
        java.lang.Class<?> wildcardClass29 = strArray23.getClass();
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication8.run(strArray23, inputStream30, outputStream31);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication33 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication42 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = lsApplication42.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray48);
        mkdirApplication35.createFolder(strArray48);
        java.lang.String str54 = findApplication33.findFolderContent("null output stream provided fail_echo_write", strArray48);
        mkdirApplication8.createFolder(strArray48);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        try {
            pwdApplication0.run(strArray48, inputStream56, outputStream57);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertNotNull(wildcardClass7);
        assertNotNull(strArray11);
        assertNotNull(strArray23);
        assertTrue(str27.equals(""));
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass29);
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str54.equals(""));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test448");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication1.run(strArray9, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication1.run(strArray19, inputStream23, outputStream24);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        try {
            catApplication0.run(strArray19, inputStream26, outputStream27);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray9);
        assertNotNull(strArray19);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test449");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray11 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream12 = null;
        java.io.OutputStream outputStream13 = null;
        mkdirApplication4.run(strArray11, inputStream12, outputStream13);
        try {
            java.lang.String str15 = wcApplication0.countFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray11);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray11);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test450");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication24 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = lsApplication24.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray30);
        mkdirApplication17.createFolder(strArray30);
        java.lang.String str36 = findApplication15.findFolderContent("null output stream provided fail_echo_write", strArray30);
        java.lang.Class<?> wildcardClass37 = strArray30.getClass();
        java.lang.String str38 = findApplication4.findFolderContent("null output stream provided fail_echo_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication40 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication42 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication42.createFolder(strArray45);
        java.lang.String str47 = findApplication40.findFolderContent("fail_sed_write", strArray45);
        java.lang.String str48 = findApplication4.findFolderContent("null output stream provided\r\nfail_echo_write", strArray45);
        java.lang.String str49 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray45);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication52 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication55 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication57.run(strArray60, inputStream61, outputStream62);
        java.lang.String str64 = findApplication55.findFolderContent("", strArray60);
        java.lang.String str65 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray60);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication68 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication68.createFolder(strArray71);
        java.lang.String str73 = lsApplication52.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray71);
        java.lang.String str74 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray71);
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        try {
            sedApplication0.run(strArray71, inputStream75, outputStream76);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertNotNull(strArray20);
        assertNotNull(strArray30);
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str36.equals(""));
        assertNotNull(wildcardClass37);
        assertTrue(str38.equals(""));
        assertNotNull(strArray45);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals(""));
        assertTrue(str49.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray60);
        assertTrue(str64.equals(""));
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray71);
        assertTrue(str73.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str74.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test451");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        try {
            cdApplication0.changeToDirectory("null output stream provided:\r\n\r\n\r\nnull arguments:");
            fail("Expected exception of type java.nio.file.InvalidPathException; message: Illegal char <:> at index 27: null output stream provided:\r\n\r\n\r\nnull arguments:\\");
        } catch (java.nio.file.InvalidPathException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test452");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "C:\\", "hi!", (int) (byte) 1);
            fail("Expected exception of type java.util.regex.PatternSyntaxException; message: Unexpected internal error near index 3\r\nC:\\");
        } catch (java.util.regex.PatternSyntaxException e) {
        }
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test453");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "null arguments", (int) '4', inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test454");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication9 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication11 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication11.run(strArray14, inputStream15, outputStream16);
        java.lang.String str18 = findApplication9.findFolderContent("", strArray14);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication20 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray27 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream28 = null;
        java.io.OutputStream outputStream29 = null;
        mkdirApplication20.run(strArray27, inputStream28, outputStream29);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication31 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication34 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray39 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream40 = null;
        java.io.OutputStream outputStream41 = null;
        mkdirApplication36.run(strArray39, inputStream40, outputStream41);
        java.lang.String str43 = findApplication34.findFolderContent("", strArray39);
        java.lang.String str44 = lsApplication31.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray39);
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication20.run(strArray39, inputStream45, outputStream46);
        java.lang.String str48 = findApplication9.findFolderContent("Could not read stream", strArray39);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication2.run(strArray39, inputStream49, outputStream50);
        java.lang.Class<?> wildcardClass52 = mkdirApplication2.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        mkdirApplication2.createFolder(strArray59);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication65 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray68 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication65.createFolder(strArray68);
        java.io.InputStream inputStream70 = null;
        java.io.OutputStream outputStream71 = null;
        mkdirApplication2.run(strArray68, inputStream70, outputStream71);
        java.io.InputStream inputStream73 = null;
        java.io.OutputStream outputStream74 = null;
        try {
            sortApplication0.run(strArray68, inputStream73, outputStream74);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: ");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray14);
        assertTrue(str18.equals(""));
        assertNotNull(strArray27);
        assertNotNull(strArray39);
        assertTrue(str43.equals(""));
        assertTrue(str44.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str48.equals(""));
        assertNotNull(wildcardClass52);
        assertNotNull(strArray59);
        assertTrue(str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray68);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test455");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass5 = lsApplication4.getClass();
        java.lang.Class<?> wildcardClass6 = lsApplication4.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication9 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication10 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication10.run(strArray17, inputStream18, outputStream19);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication21 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication24 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication26 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray29 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication26.run(strArray29, inputStream30, outputStream31);
        java.lang.String str33 = findApplication24.findFolderContent("", strArray29);
        java.lang.String str34 = lsApplication21.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray29);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication10.run(strArray29, inputStream35, outputStream36);
        java.lang.String str38 = echoApplication9.constructResult(strArray29);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        echoApplication9.run(strArray46, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray56 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication53.run(strArray56, inputStream57, outputStream58);
        java.lang.String str60 = echoApplication9.constructResult(strArray56);
        java.lang.Class<?> wildcardClass61 = strArray56.getClass();
        java.lang.String str62 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray56);
        try {
            java.lang.String str63 = grepApplication0.grepFromFiles("Could not read stream", (java.lang.Boolean) false, (java.lang.Boolean) false, strArray56);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(wildcardClass6);
        assertNotNull(strArray17);
        assertNotNull(strArray29);
        assertTrue(str33.equals(""));
        assertTrue(str34.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str38.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray46);
        assertNotNull(strArray56);
        assertTrue(str60.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass61);
        assertTrue(str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test456");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        try {
            exitApplication0.run(strArray6, inputStream11, outputStream12);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test457");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        java.lang.Class<?> wildcardClass16 = mkdirApplication5.getClass();
        java.lang.String[] strArray21 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication5.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication27.createFolder(strArray30);
        java.lang.String str32 = findApplication25.findFolderContent("fail_sed_write", strArray30);
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication5.run(strArray30, inputStream33, outputStream34);
        java.io.InputStream inputStream36 = null;
        java.io.OutputStream outputStream37 = null;
        try {
            cdApplication0.run(strArray30, inputStream36, outputStream37);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(wildcardClass16);
        assertNotNull(strArray21);
        assertNotNull(strArray30);
        assertTrue(str32.equals(""));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test458");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication8.createFolder(strArray25);
        mkdirApplication1.createFolder(strArray25);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication32 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray35 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication32.createFolder(strArray35);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication37 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray40 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream41 = null;
        java.io.OutputStream outputStream42 = null;
        mkdirApplication37.run(strArray40, inputStream41, outputStream42);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication44 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        java.lang.String str53 = findApplication44.findFolderContent("", strArray49);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray62 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication55.run(strArray62, inputStream63, outputStream64);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication66 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication69 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication71 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication71.run(strArray74, inputStream75, outputStream76);
        java.lang.String str78 = findApplication69.findFolderContent("", strArray74);
        java.lang.String str79 = lsApplication66.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray74);
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication55.run(strArray74, inputStream80, outputStream81);
        java.lang.String str83 = findApplication44.findFolderContent("Could not read stream", strArray74);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication37.run(strArray74, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        mkdirApplication32.run(strArray74, inputStream87, outputStream88);
        java.lang.Class<?> wildcardClass90 = strArray74.getClass();
        java.io.InputStream inputStream91 = null;
        java.io.OutputStream outputStream92 = null;
        mkdirApplication1.run(strArray74, inputStream91, outputStream92);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        try {
            sedApplication0.run(strArray74, inputStream94, outputStream95);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray15);
        assertNotNull(strArray25);
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray35);
        assertNotNull(strArray40);
        assertNotNull(strArray49);
        assertTrue(str53.equals(""));
        assertNotNull(strArray62);
        assertNotNull(strArray74);
        assertTrue(str78.equals(""));
        assertTrue(str79.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str83.equals(""));
        assertNotNull(wildcardClass90);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test459");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        java.lang.String[] strArray1 = null;
        java.io.InputStream inputStream2 = null;
        java.io.OutputStream outputStream3 = null;
        try {
            findApplication0.run(strArray1, inputStream2, outputStream3);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Args cannot be null for find!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test460");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass8 = pwdApplication0.getClass();
        java.lang.String str9 = pwdApplication0.getAbsolutePath();
        java.lang.String str10 = pwdApplication0.getAbsolutePath();
        java.lang.String str11 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray18);
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        try {
            pwdApplication0.run(strArray18, inputStream23, outputStream24);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\"));
        assertTrue(str4.equals("C:\\"));
        assertTrue(str5.equals("C:\\"));
        assertTrue(str6.equals("C:\\"));
        assertTrue(str7.equals("C:\\"));
        assertNotNull(wildcardClass8);
        assertTrue(str9.equals("C:\\"));
        assertTrue(str10.equals("C:\\"));
        assertTrue(str11.equals("C:\\"));
        assertNotNull(strArray18);
        assertTrue(str22.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test461");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        try {
            java.lang.String str8 = dateApplication0.getDate("null arguments");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Invalid format. Date format must start with '+'");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:43"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:43"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:43"));
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test462");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null input file provided", "Could not write to output stream", (int) (byte) 10);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test463");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream6 = null;
        java.io.OutputStream outputStream7 = null;
        mkdirApplication2.run(strArray5, inputStream6, outputStream7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication9 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = lsApplication9.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        mkdirApplication2.createFolder(strArray15);
        java.lang.String str21 = findApplication0.findFolderContent("null output stream provided fail_echo_write", strArray15);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication23 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication23.constructResult(strArray43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication53 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray60 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        mkdirApplication53.run(strArray60, inputStream61, outputStream62);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication64 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray71 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream72 = null;
        java.io.OutputStream outputStream73 = null;
        mkdirApplication64.run(strArray71, inputStream72, outputStream73);
        java.lang.Class<?> wildcardClass75 = mkdirApplication64.getClass();
        java.lang.String[] strArray80 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        mkdirApplication64.run(strArray80, inputStream81, outputStream82);
        java.io.InputStream inputStream84 = null;
        java.io.OutputStream outputStream85 = null;
        mkdirApplication53.run(strArray80, inputStream84, outputStream85);
        java.io.InputStream inputStream87 = null;
        java.io.OutputStream outputStream88 = null;
        echoApplication23.run(strArray80, inputStream87, outputStream88);
        java.lang.String str90 = findApplication0.findFolderContent("fail_echo_write:\r\n\r\n\r\nhi!:", strArray80);
        java.lang.Class<?> wildcardClass91 = findApplication0.getClass();
        java.lang.String[] strArray93 = null;
        try {
            java.lang.String str94 = findApplication0.findFolderContent("fail_echo_empty_params", strArray93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FindException; message: find: Arguments for findFolderContent are not allowed to be null!");
        } catch (sg.edu.nus.comp.cs4218.exception.FindException e) {
        }
        assertNotNull(strArray5);
        assertNotNull(strArray15);
        assertTrue(str19.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str21.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray60);
        assertNotNull(strArray71);
        assertNotNull(wildcardClass75);
        assertNotNull(strArray80);
        assertTrue(str90.equals(""));
        assertNotNull(wildcardClass91);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test464");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        java.lang.Class<?> wildcardClass1 = catApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray5 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication2.createFolder(strArray5);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication14 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream20 = null;
        java.io.OutputStream outputStream21 = null;
        mkdirApplication16.run(strArray19, inputStream20, outputStream21);
        java.lang.String str23 = findApplication14.findFolderContent("", strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream33 = null;
        java.io.OutputStream outputStream34 = null;
        mkdirApplication25.run(strArray32, inputStream33, outputStream34);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication36 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication39 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication41 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray44 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream45 = null;
        java.io.OutputStream outputStream46 = null;
        mkdirApplication41.run(strArray44, inputStream45, outputStream46);
        java.lang.String str48 = findApplication39.findFolderContent("", strArray44);
        java.lang.String str49 = lsApplication36.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray44);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication25.run(strArray44, inputStream50, outputStream51);
        java.lang.String str53 = findApplication14.findFolderContent("Could not read stream", strArray44);
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication7.run(strArray44, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        mkdirApplication2.run(strArray44, inputStream57, outputStream58);
        java.lang.Class<?> wildcardClass60 = strArray44.getClass();
        java.lang.Class<?> wildcardClass61 = strArray44.getClass();
        try {
            java.lang.String str62 = catApplication0.catFiles(strArray44);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray5);
        assertNotNull(strArray10);
        assertNotNull(strArray19);
        assertTrue(str23.equals(""));
        assertNotNull(strArray32);
        assertNotNull(strArray44);
        assertTrue(str48.equals(""));
        assertTrue(str49.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str53.equals(""));
        assertNotNull(wildcardClass60);
        assertNotNull(wildcardClass61);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test465");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "fail_echo_write:\r\n\r\n\r\nhi!:", "C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write", (int) (byte) 0);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test466");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication0 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass1 = lsApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication2 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = findApplication2.findFolderContent("", strArray7);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication22 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = lsApplication22.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        mkdirApplication15.createFolder(strArray28);
        java.lang.String str34 = findApplication13.findFolderContent("null output stream provided fail_echo_write", strArray28);
        java.lang.Class<?> wildcardClass35 = strArray28.getClass();
        java.lang.String str36 = findApplication2.findFolderContent("null output stream provided fail_echo_write", strArray28);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication40.createFolder(strArray43);
        java.lang.String str45 = findApplication38.findFolderContent("fail_sed_write", strArray43);
        java.lang.String str46 = findApplication2.findFolderContent("null output stream provided\r\nfail_echo_write", strArray43);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        try {
            lsApplication0.run(strArray43, inputStream47, outputStream48);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray7);
        assertTrue(str11.equals(""));
        assertNotNull(strArray18);
        assertNotNull(strArray28);
        assertTrue(str32.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str34.equals(""));
        assertNotNull(wildcardClass35);
        assertTrue(str36.equals(""));
        assertNotNull(strArray43);
        assertTrue(str45.equals(""));
        assertTrue(str46.equals(""));
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test467");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        java.lang.Class<?> wildcardClass18 = mkdirApplication7.getClass();
        java.lang.String[] strArray23 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream24 = null;
        java.io.OutputStream outputStream25 = null;
        mkdirApplication7.run(strArray23, inputStream24, outputStream25);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication27 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication29.createFolder(strArray32);
        java.lang.String str34 = findApplication27.findFolderContent("fail_sed_write", strArray32);
        java.io.InputStream inputStream35 = null;
        java.io.OutputStream outputStream36 = null;
        mkdirApplication7.run(strArray32, inputStream35, outputStream36);
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        try {
            cdApplication0.run(strArray32, inputStream38, outputStream39);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(strArray14);
        assertNotNull(wildcardClass18);
        assertNotNull(strArray23);
        assertNotNull(strArray32);
        assertTrue(str34.equals(""));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test468");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", (int) (short) 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test469");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication1 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication2 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication2.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication13 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication16 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        java.lang.String str25 = findApplication16.findFolderContent("", strArray21);
        java.lang.String str26 = lsApplication13.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray21);
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication2.run(strArray21, inputStream27, outputStream28);
        java.lang.String str30 = echoApplication1.constructResult(strArray21);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication31 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication31.run(strArray38, inputStream39, outputStream40);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        echoApplication1.run(strArray38, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray48 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication45.run(strArray48, inputStream49, outputStream50);
        java.lang.String str52 = echoApplication1.constructResult(strArray48);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication53 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication54.run(strArray61, inputStream62, outputStream63);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication65 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream74 = null;
        java.io.OutputStream outputStream75 = null;
        mkdirApplication70.run(strArray73, inputStream74, outputStream75);
        java.lang.String str77 = findApplication68.findFolderContent("", strArray73);
        java.lang.String str78 = lsApplication65.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray73);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication54.run(strArray73, inputStream79, outputStream80);
        java.lang.String str82 = echoApplication53.constructResult(strArray73);
        java.lang.Class<?> wildcardClass83 = strArray73.getClass();
        java.lang.String str84 = echoApplication1.constructResult(strArray73);
        java.lang.Class<?> wildcardClass85 = strArray73.getClass();
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        try {
            exitApplication0.run(strArray73, inputStream86, outputStream87);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray9);
        assertNotNull(strArray21);
        assertTrue(str25.equals(""));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str30.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray38);
        assertNotNull(strArray48);
        assertTrue(str52.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray61);
        assertNotNull(strArray73);
        assertTrue(str77.equals(""));
        assertTrue(str78.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str82.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass83);
        assertTrue(str84.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass85);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test470");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\");
        cdApplication0.changeToDirectory("");
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication16 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication17.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication28 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication31 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication33 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray36 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream37 = null;
        java.io.OutputStream outputStream38 = null;
        mkdirApplication33.run(strArray36, inputStream37, outputStream38);
        java.lang.String str40 = findApplication31.findFolderContent("", strArray36);
        java.lang.String str41 = lsApplication28.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray36);
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication17.run(strArray36, inputStream42, outputStream43);
        java.lang.String str45 = echoApplication16.constructResult(strArray36);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication46.run(strArray53, inputStream54, outputStream55);
        java.io.InputStream inputStream57 = null;
        java.io.OutputStream outputStream58 = null;
        echoApplication16.run(strArray53, inputStream57, outputStream58);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication60 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication62 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray65 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream66 = null;
        java.io.OutputStream outputStream67 = null;
        mkdirApplication62.run(strArray65, inputStream66, outputStream67);
        java.lang.String str69 = findApplication60.findFolderContent("", strArray65);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication71 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication74 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication76 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray79 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream80 = null;
        java.io.OutputStream outputStream81 = null;
        mkdirApplication76.run(strArray79, inputStream80, outputStream81);
        java.lang.String str83 = findApplication74.findFolderContent("", strArray79);
        java.lang.String str84 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray79);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication87 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray90 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication87.createFolder(strArray90);
        java.lang.String str92 = lsApplication71.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray90);
        java.lang.String str93 = findApplication60.findFolderContent("hi!", strArray90);
        java.io.InputStream inputStream94 = null;
        java.io.OutputStream outputStream95 = null;
        echoApplication16.run(strArray90, inputStream94, outputStream95);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            cdApplication0.run(strArray90, inputStream97, outputStream98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: cd only takes one argument");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
        assertNotNull(strArray24);
        assertNotNull(strArray36);
        assertTrue(str40.equals(""));
        assertTrue(str41.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str45.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray53);
        assertNotNull(strArray65);
        assertTrue(str69.equals(""));
        assertNotNull(strArray79);
        assertTrue(str83.equals(""));
        assertTrue(str84.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray90);
        assertTrue(str92.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str93.equals(""));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test471");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = grepApplication0.grepFromFiles("Could not write to output stream", (java.lang.Boolean) true, (java.lang.Boolean) true, strArray71);
        java.io.InputStream inputStream77 = null;
        try {
            java.lang.String str78 = grepApplication0.grepFromStdin("null output stream provided:\r\n\r\n\r\nnull arguments:", (java.lang.Boolean) true, (java.lang.Boolean) false, inputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: Stdin is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test472");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        java.lang.Class<?> wildcardClass1 = sortApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication6.getClass();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided" };
        mkdirApplication6.createFolder(strArray58);
        mkdirApplication5.createFolder(strArray58);
        java.lang.Class<?> wildcardClass61 = strArray58.getClass();
        try {
            java.lang.String str62 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray58);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(wildcardClass1);
        assertNotNull(strArray9);
        assertNotNull(strArray18);
        assertTrue(str22.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
        assertNotNull(wildcardClass56);
        assertNotNull(strArray58);
        assertNotNull(wildcardClass61);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test473");
        java.io.InputStream inputStream0 = null;
        try {
            java.util.List<java.lang.String> strList4 = sg.edu.nus.comp.cs4218.impl.app.SedApplication.replace(inputStream0, "null output stream provided fail_echo_write", "null output stream provided", (int) (short) -1);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test474");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        java.lang.String str8 = dateApplication0.getDate("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        try {
            dateApplication0.initMap(strMap9);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:44"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:44"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:44"));
// flaky:         assertTrue(str8.equals("03-24-2019 00:09:44"));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test475");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = strArray43.getClass();
        java.lang.Class<?> wildcardClass60 = strArray43.getClass();
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        try {
            grepApplication0.run(strArray43, inputStream61, outputStream62);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray9);
        assertNotNull(strArray18);
        assertTrue(str22.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
        assertNotNull(wildcardClass59);
        assertNotNull(wildcardClass60);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test476");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication4 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = findApplication4.findFolderContent("", strArray9);
        java.lang.String str14 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication17.createFolder(strArray20);
        java.lang.String str22 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray20);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream31 = null;
        java.io.OutputStream outputStream32 = null;
        mkdirApplication27.run(strArray30, inputStream31, outputStream32);
        java.lang.String str34 = findApplication25.findFolderContent("", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication36 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication38.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray51);
        mkdirApplication38.createFolder(strArray51);
        java.lang.String str57 = findApplication36.findFolderContent("null output stream provided fail_echo_write", strArray51);
        java.lang.Class<?> wildcardClass58 = strArray51.getClass();
        java.lang.String str59 = findApplication25.findFolderContent("null output stream provided fail_echo_write", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication61 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication63 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication63.createFolder(strArray66);
        java.lang.String str68 = findApplication61.findFolderContent("fail_sed_write", strArray66);
        java.lang.String str69 = findApplication25.findFolderContent("null output stream provided\r\nfail_echo_write", strArray66);
        java.lang.String[] strArray76 = new java.lang.String[] { "fail_echo", "null arguments", "null arguments", "fail_echo_write", "fail_echo_write" };
        java.lang.String str77 = findApplication25.findFolderContent("null output stream provided null arguments null output stream provided", strArray76);
        java.lang.Class<?> wildcardClass78 = strArray76.getClass();
        java.lang.Class<?> wildcardClass79 = strArray76.getClass();
        java.lang.String str80 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray76);
        java.io.InputStream inputStream81 = null;
        java.io.OutputStream outputStream82 = null;
        try {
            sedApplication0.run(strArray76, inputStream81, outputStream82);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: Invalid syntax.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
        assertNotNull(strArray9);
        assertTrue(str13.equals(""));
        assertTrue(str14.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray20);
        assertTrue(str22.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertNotNull(strArray30);
        assertTrue(str34.equals(""));
        assertNotNull(strArray41);
        assertNotNull(strArray51);
        assertTrue(str55.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str57.equals(""));
        assertNotNull(wildcardClass58);
        assertTrue(str59.equals(""));
        assertNotNull(strArray66);
        assertTrue(str68.equals(""));
        assertTrue(str69.equals(""));
        assertNotNull(strArray76);
        assertTrue(str77.equals(""));
        assertNotNull(wildcardClass78);
        assertNotNull(wildcardClass79);
        assertTrue(str80.equals("fail_echo:\r\n\r\n\r\nnull arguments:\r\nfail_echo_write:"));
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test477");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication3 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        java.lang.String str13 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray9);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication16 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray19 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication16.createFolder(strArray19);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        java.lang.String str37 = findApplication28.findFolderContent("", strArray33);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray46 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication39.run(strArray46, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication50 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream59 = null;
        java.io.OutputStream outputStream60 = null;
        mkdirApplication55.run(strArray58, inputStream59, outputStream60);
        java.lang.String str62 = findApplication53.findFolderContent("", strArray58);
        java.lang.String str63 = lsApplication50.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        mkdirApplication39.run(strArray58, inputStream64, outputStream65);
        java.lang.String str67 = findApplication28.findFolderContent("Could not read stream", strArray58);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        mkdirApplication21.run(strArray58, inputStream68, outputStream69);
        java.io.InputStream inputStream71 = null;
        java.io.OutputStream outputStream72 = null;
        mkdirApplication16.run(strArray58, inputStream71, outputStream72);
        java.lang.Class<?> wildcardClass74 = strArray58.getClass();
        java.lang.String str75 = lsApplication3.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        try {
            dateApplication0.run(strArray58, inputStream76, outputStream77);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:44"));
        assertNotNull(strArray9);
        assertTrue(str13.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray19);
        assertNotNull(strArray24);
        assertNotNull(strArray33);
        assertTrue(str37.equals(""));
        assertNotNull(strArray46);
        assertNotNull(strArray58);
        assertTrue(str62.equals(""));
        assertTrue(str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str67.equals(""));
        assertNotNull(wildcardClass74);
        assertTrue(str75.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test478");
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication0 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray3 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream4 = null;
        java.io.OutputStream outputStream5 = null;
        mkdirApplication0.run(strArray3, inputStream4, outputStream5);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication9.run(strArray12, inputStream13, outputStream14);
        java.lang.String str16 = findApplication7.findFolderContent("", strArray12);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication18.run(strArray25, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication29 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication32 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream38 = null;
        java.io.OutputStream outputStream39 = null;
        mkdirApplication34.run(strArray37, inputStream38, outputStream39);
        java.lang.String str41 = findApplication32.findFolderContent("", strArray37);
        java.lang.String str42 = lsApplication29.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray37);
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication18.run(strArray37, inputStream43, outputStream44);
        java.lang.String str46 = findApplication7.findFolderContent("Could not read stream", strArray37);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        mkdirApplication0.run(strArray37, inputStream47, outputStream48);
        java.lang.Class<?> wildcardClass50 = mkdirApplication0.getClass();
        java.lang.Class<?> wildcardClass51 = mkdirApplication0.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication59.run(strArray66, inputStream67, outputStream68);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication70 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = lsApplication70.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        mkdirApplication59.createFolder(strArray76);
        mkdirApplication52.createFolder(strArray76);
        java.lang.Class<?> wildcardClass83 = mkdirApplication52.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication84 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication87 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication89 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray92 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        mkdirApplication89.run(strArray92, inputStream93, outputStream94);
        java.lang.String str96 = findApplication87.findFolderContent("", strArray92);
        java.lang.String str97 = lsApplication84.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray92);
        mkdirApplication52.createFolder(strArray92);
        mkdirApplication0.createFolder(strArray92);
        assertNotNull(strArray3);
        assertNotNull(strArray12);
        assertTrue(str16.equals(""));
        assertNotNull(strArray25);
        assertNotNull(strArray37);
        assertTrue(str41.equals(""));
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str46.equals(""));
        assertNotNull(wildcardClass50);
        assertNotNull(wildcardClass51);
        assertNotNull(strArray55);
        assertNotNull(strArray66);
        assertNotNull(strArray76);
        assertTrue(str80.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass83);
        assertNotNull(strArray92);
        assertTrue(str96.equals(""));
        assertTrue(str97.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test479");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("fail_echo_write:\r\n\r\n\r\nhi!:", "03-24-2019 00:07:26", (int) (short) 0, "null output stream provided null arguments null output stream provided");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test480");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        java.lang.Class<?> wildcardClass5 = cdApplication0.getClass();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("null output stream provided");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\null output stream provided: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
        assertNotNull(wildcardClass5);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test481");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass2 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        mkdirApplication7.createFolder(strArray20);
        java.lang.String str26 = findApplication5.findFolderContent("null output stream provided fail_echo_write", strArray20);
        java.lang.Class<?> wildcardClass27 = strArray20.getClass();
        java.lang.String str28 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.lang.Class<?> wildcardClass29 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication32 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication35 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray38 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream39 = null;
        java.io.OutputStream outputStream40 = null;
        mkdirApplication35.run(strArray38, inputStream39, outputStream40);
        java.lang.String str42 = lsApplication32.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray38);
        java.lang.String str43 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray38);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication46 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray49 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication46.run(strArray49, inputStream50, outputStream51);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication53 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication56 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray59 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        mkdirApplication56.run(strArray59, inputStream60, outputStream61);
        java.lang.String str63 = lsApplication53.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray59);
        mkdirApplication46.createFolder(strArray59);
        java.lang.String[] strArray68 = new java.lang.String[] { "null output stream provided", "null arguments", "null output stream provided" };
        java.io.InputStream inputStream69 = null;
        java.io.OutputStream outputStream70 = null;
        mkdirApplication46.run(strArray68, inputStream69, outputStream70);
        java.lang.Class<?> wildcardClass72 = mkdirApplication46.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication73 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication76 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication78 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray81 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication78.run(strArray81, inputStream82, outputStream83);
        java.lang.String str85 = findApplication76.findFolderContent("", strArray81);
        java.lang.String str86 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray81);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication89 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray92 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication89.createFolder(strArray92);
        java.lang.String str94 = lsApplication73.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray92);
        mkdirApplication46.createFolder(strArray92);
        java.lang.String str96 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray92);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            catApplication0.run(strArray92, inputStream97, outputStream98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(strArray10);
        assertNotNull(strArray20);
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str26.equals(""));
        assertNotNull(wildcardClass27);
        assertTrue(str28.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(wildcardClass29);
        assertNotNull(strArray38);
        assertTrue(str42.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str43.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray49);
        assertNotNull(strArray59);
        assertTrue(str63.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray68);
        assertNotNull(wildcardClass72);
        assertNotNull(strArray81);
        assertTrue(str85.equals(""));
        assertTrue(str86.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray92);
        assertTrue(str94.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str96.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test482");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication5 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication18 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray21 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream22 = null;
        java.io.OutputStream outputStream23 = null;
        mkdirApplication18.run(strArray21, inputStream22, outputStream23);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication25 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication27 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray30 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication27.createFolder(strArray30);
        java.lang.String str32 = findApplication25.findFolderContent("fail_sed_write", strArray30);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray37 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication34.createFolder(strArray37);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream43 = null;
        java.io.OutputStream outputStream44 = null;
        mkdirApplication39.run(strArray42, inputStream43, outputStream44);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication46 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        java.lang.String str55 = findApplication46.findFolderContent("", strArray51);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication57 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray64 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication57.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication68 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication71 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication73 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray76 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream77 = null;
        java.io.OutputStream outputStream78 = null;
        mkdirApplication73.run(strArray76, inputStream77, outputStream78);
        java.lang.String str80 = findApplication71.findFolderContent("", strArray76);
        java.lang.String str81 = lsApplication68.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray76);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        mkdirApplication57.run(strArray76, inputStream82, outputStream83);
        java.lang.String str85 = findApplication46.findFolderContent("Could not read stream", strArray76);
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication39.run(strArray76, inputStream86, outputStream87);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication34.run(strArray76, inputStream89, outputStream90);
        java.lang.Class<?> wildcardClass92 = strArray76.getClass();
        java.lang.String str93 = findApplication25.findFolderContent("", strArray76);
        mkdirApplication18.createFolder(strArray76);
        mkdirApplication7.createFolder(strArray76);
        java.lang.String str96 = findApplication5.findFolderContent("Exception Caught", strArray76);
        java.io.InputStream inputStream97 = null;
        java.io.OutputStream outputStream98 = null;
        try {
            dateApplication0.run(strArray76, inputStream97, outputStream98);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:44"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:44"));
        assertNotNull(strArray14);
        assertNotNull(strArray21);
        assertNotNull(strArray30);
        assertTrue(str32.equals(""));
        assertNotNull(strArray37);
        assertNotNull(strArray42);
        assertNotNull(strArray51);
        assertTrue(str55.equals(""));
        assertNotNull(strArray64);
        assertNotNull(strArray76);
        assertTrue(str80.equals(""));
        assertTrue(str81.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str85.equals(""));
        assertNotNull(wildcardClass92);
        assertTrue(str93.equals(""));
        assertTrue(str96.equals(""));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test483");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication29.createFolder(strArray32);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication1.run(strArray32, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication37 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication49 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication52 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication54 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray57 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream58 = null;
        java.io.OutputStream outputStream59 = null;
        mkdirApplication54.run(strArray57, inputStream58, outputStream59);
        java.lang.String str61 = findApplication52.findFolderContent("", strArray57);
        java.lang.String str62 = lsApplication49.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray57);
        java.io.InputStream inputStream63 = null;
        java.io.OutputStream outputStream64 = null;
        mkdirApplication38.run(strArray57, inputStream63, outputStream64);
        java.lang.String str66 = echoApplication37.constructResult(strArray57);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication67 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray74 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream75 = null;
        java.io.OutputStream outputStream76 = null;
        mkdirApplication67.run(strArray74, inputStream75, outputStream76);
        java.io.InputStream inputStream78 = null;
        java.io.OutputStream outputStream79 = null;
        echoApplication37.run(strArray74, inputStream78, outputStream79);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication81 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication81.run(strArray84, inputStream85, outputStream86);
        java.lang.String str88 = echoApplication37.constructResult(strArray84);
        java.io.InputStream inputStream89 = null;
        java.io.OutputStream outputStream90 = null;
        mkdirApplication1.run(strArray84, inputStream89, outputStream90);
        java.io.InputStream inputStream92 = null;
        java.io.OutputStream outputStream93 = null;
        try {
            catApplication0.run(strArray84, inputStream92, outputStream93);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray32);
        assertNotNull(strArray45);
        assertNotNull(strArray57);
        assertTrue(str61.equals(""));
        assertTrue(str62.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str66.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray74);
        assertNotNull(strArray84);
        assertTrue(str88.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test484");
        sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
        java.lang.String str2 = dateApplication0.getDate("");
        java.lang.String str4 = dateApplication0.getDate("");
        java.lang.String str6 = dateApplication0.getDate("");
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication7 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication10 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication12 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication12.run(strArray15, inputStream16, outputStream17);
        java.lang.String str19 = findApplication10.findFolderContent("", strArray15);
        java.lang.String str20 = lsApplication7.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray15);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication39.createFolder(strArray42);
        java.lang.String str44 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray42);
        java.lang.String str45 = lsApplication7.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray42);
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        try {
            dateApplication0.run(strArray42, inputStream46, outputStream47);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException; message: date: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
        }
// flaky:         assertTrue(str2.equals("03-24-2019 00:09:44"));
// flaky:         assertTrue(str4.equals("03-24-2019 00:09:44"));
// flaky:         assertTrue(str6.equals("03-24-2019 00:09:44"));
        assertNotNull(strArray15);
        assertTrue(str19.equals(""));
        assertTrue(str20.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray42);
        assertTrue(str44.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str45.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test485");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        java.io.InputStream inputStream50 = null;
        java.io.OutputStream outputStream51 = null;
        mkdirApplication1.run(strArray43, inputStream50, outputStream51);
        try {
            java.lang.String str53 = catApplication0.catFiles(strArray43);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test486");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("File doesn't exist.", "fail_echo_write\r\nhi!", (int) (byte) 0, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test487");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        java.io.InputStream inputStream4 = null;
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInStdin("fail_echo_write:\r\n\r\n\r\nhi!:", "null output stream provided\r\nfail_echo_write", 1, inputStream4);
            fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test488");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        java.lang.Class<?> wildcardClass2 = lsApplication1.getClass();
        java.lang.Class<?> wildcardClass3 = lsApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication6 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray14 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        mkdirApplication7.run(strArray14, inputStream15, outputStream16);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication18 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication21 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication23 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray26 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream27 = null;
        java.io.OutputStream outputStream28 = null;
        mkdirApplication23.run(strArray26, inputStream27, outputStream28);
        java.lang.String str30 = findApplication21.findFolderContent("", strArray26);
        java.lang.String str31 = lsApplication18.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray26);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication7.run(strArray26, inputStream32, outputStream33);
        java.lang.String str35 = echoApplication6.constructResult(strArray26);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication36 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication36.run(strArray43, inputStream44, outputStream45);
        java.io.InputStream inputStream47 = null;
        java.io.OutputStream outputStream48 = null;
        echoApplication6.run(strArray43, inputStream47, outputStream48);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication50 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray53 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream54 = null;
        java.io.OutputStream outputStream55 = null;
        mkdirApplication50.run(strArray53, inputStream54, outputStream55);
        java.lang.String str57 = echoApplication6.constructResult(strArray53);
        java.lang.Class<?> wildcardClass58 = strArray53.getClass();
        java.lang.String str59 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray53);
        java.io.InputStream inputStream60 = null;
        java.io.OutputStream outputStream61 = null;
        try {
            exitApplication0.run(strArray53, inputStream60, outputStream61);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertNotNull(strArray14);
        assertNotNull(strArray26);
        assertTrue(str30.equals(""));
        assertTrue(str31.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str35.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray43);
        assertNotNull(strArray53);
        assertTrue(str57.equals("null output stream provided fail_echo_write"));
        assertNotNull(wildcardClass58);
        assertTrue(str59.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test489");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream5 = null;
        java.io.OutputStream outputStream6 = null;
        mkdirApplication1.run(strArray4, inputStream5, outputStream6);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication8 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray15 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream16 = null;
        java.io.OutputStream outputStream17 = null;
        mkdirApplication8.run(strArray15, inputStream16, outputStream17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication19 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication22 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray25 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication22.run(strArray25, inputStream26, outputStream27);
        java.lang.String str29 = lsApplication19.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray25);
        mkdirApplication8.createFolder(strArray25);
        mkdirApplication1.createFolder(strArray25);
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        try {
            exitApplication0.run(strArray25, inputStream32, outputStream33);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray15);
        assertNotNull(strArray25);
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test490");
        sg.edu.nus.comp.cs4218.impl.app.CdApplication cdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CdApplication();
        cdApplication0.changeToDirectory("");
        cdApplication0.changeToDirectory("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write");
        try {
            cdApplication0.changeToDirectory("fail_echo_empty_params");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CdException; message: cd: C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write\\fail_echo_empty_params: No such file or directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CdException e) {
        }
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test491");
        sg.edu.nus.comp.cs4218.impl.app.WcApplication wcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.WcApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication1 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication4 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray7 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream8 = null;
        java.io.OutputStream outputStream9 = null;
        mkdirApplication4.run(strArray7, inputStream8, outputStream9);
        java.lang.String str11 = lsApplication1.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray7);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication17 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication19 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray22 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream23 = null;
        java.io.OutputStream outputStream24 = null;
        mkdirApplication19.run(strArray22, inputStream23, outputStream24);
        java.lang.String str26 = findApplication17.findFolderContent("", strArray22);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication28 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication30 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray33 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication30.run(strArray33, inputStream34, outputStream35);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication37 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = lsApplication37.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        mkdirApplication30.createFolder(strArray43);
        java.lang.String str49 = findApplication28.findFolderContent("null output stream provided fail_echo_write", strArray43);
        java.lang.Class<?> wildcardClass50 = strArray43.getClass();
        java.lang.String str51 = findApplication17.findFolderContent("null output stream provided fail_echo_write", strArray43);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication53 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication55 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray58 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication55.createFolder(strArray58);
        java.lang.String str60 = findApplication53.findFolderContent("fail_sed_write", strArray58);
        java.lang.String str61 = findApplication17.findFolderContent("null output stream provided\r\nfail_echo_write", strArray58);
        java.lang.String str62 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray58);
        java.lang.String str63 = lsApplication1.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) true, strArray58);
        java.io.InputStream inputStream64 = null;
        java.io.OutputStream outputStream65 = null;
        try {
            wcApplication0.run(strArray58, inputStream64, outputStream65);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.WcException; message: wc: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.WcException e) {
        }
        assertNotNull(strArray7);
        assertTrue(str11.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray22);
        assertTrue(str26.equals(""));
        assertNotNull(strArray33);
        assertNotNull(strArray43);
        assertTrue(str47.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str49.equals(""));
        assertNotNull(wildcardClass50);
        assertTrue(str51.equals(""));
        assertNotNull(strArray58);
        assertTrue(str60.equals(""));
        assertTrue(str61.equals(""));
        assertTrue(str62.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str63.equals("fail_echo_write\r\nhi!"));
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test492");
        sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray4 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication1.createFolder(strArray4);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication6 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray9 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream10 = null;
        java.io.OutputStream outputStream11 = null;
        mkdirApplication6.run(strArray9, inputStream10, outputStream11);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication13 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication15 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray18 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream19 = null;
        java.io.OutputStream outputStream20 = null;
        mkdirApplication15.run(strArray18, inputStream19, outputStream20);
        java.lang.String str22 = findApplication13.findFolderContent("", strArray18);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication24 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication24.run(strArray31, inputStream32, outputStream33);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication35 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication38 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication40 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray43 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream44 = null;
        java.io.OutputStream outputStream45 = null;
        mkdirApplication40.run(strArray43, inputStream44, outputStream45);
        java.lang.String str47 = findApplication38.findFolderContent("", strArray43);
        java.lang.String str48 = lsApplication35.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray43);
        java.io.InputStream inputStream49 = null;
        java.io.OutputStream outputStream50 = null;
        mkdirApplication24.run(strArray43, inputStream49, outputStream50);
        java.lang.String str52 = findApplication13.findFolderContent("Could not read stream", strArray43);
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication6.run(strArray43, inputStream53, outputStream54);
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication1.run(strArray43, inputStream56, outputStream57);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication59 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray66 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream67 = null;
        java.io.OutputStream outputStream68 = null;
        mkdirApplication59.run(strArray66, inputStream67, outputStream68);
        java.lang.Class<?> wildcardClass70 = mkdirApplication59.getClass();
        java.lang.String[] strArray75 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication59.run(strArray75, inputStream76, outputStream77);
        java.io.InputStream inputStream79 = null;
        java.io.OutputStream outputStream80 = null;
        mkdirApplication1.run(strArray75, inputStream79, outputStream80);
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            catApplication0.run(strArray75, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException; message: cat: This is a directory");
        } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
        }
        assertNotNull(strArray4);
        assertNotNull(strArray9);
        assertNotNull(strArray18);
        assertTrue(str22.equals(""));
        assertNotNull(strArray31);
        assertNotNull(strArray43);
        assertTrue(str47.equals(""));
        assertTrue(str48.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str52.equals(""));
        assertNotNull(strArray66);
        assertNotNull(wildcardClass70);
        assertNotNull(strArray75);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test493");
        sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication4 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication5 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream13 = null;
        java.io.OutputStream outputStream14 = null;
        mkdirApplication5.run(strArray12, inputStream13, outputStream14);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication16 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication19 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication21 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray24 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream25 = null;
        java.io.OutputStream outputStream26 = null;
        mkdirApplication21.run(strArray24, inputStream25, outputStream26);
        java.lang.String str28 = findApplication19.findFolderContent("", strArray24);
        java.lang.String str29 = lsApplication16.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray24);
        java.io.InputStream inputStream30 = null;
        java.io.OutputStream outputStream31 = null;
        mkdirApplication5.run(strArray24, inputStream30, outputStream31);
        java.lang.String str33 = echoApplication4.constructResult(strArray24);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication34 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray41 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream42 = null;
        java.io.OutputStream outputStream43 = null;
        mkdirApplication34.run(strArray41, inputStream42, outputStream43);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication45 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray52 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream53 = null;
        java.io.OutputStream outputStream54 = null;
        mkdirApplication45.run(strArray52, inputStream53, outputStream54);
        java.lang.Class<?> wildcardClass56 = mkdirApplication45.getClass();
        java.lang.String[] strArray61 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication45.run(strArray61, inputStream62, outputStream63);
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication34.run(strArray61, inputStream65, outputStream66);
        java.io.InputStream inputStream68 = null;
        java.io.OutputStream outputStream69 = null;
        echoApplication4.run(strArray61, inputStream68, outputStream69);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String str72 = echoApplication4.constructResult(strArray71);
        java.lang.String str73 = sortApplication0.sortFromFiles((java.lang.Boolean) false, (java.lang.Boolean) true, (java.lang.Boolean) false, strArray71);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication77 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray84 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream85 = null;
        java.io.OutputStream outputStream86 = null;
        mkdirApplication77.run(strArray84, inputStream85, outputStream86);
        try {
            java.lang.String str88 = sortApplication0.sortFromFiles((java.lang.Boolean) true, (java.lang.Boolean) true, (java.lang.Boolean) true, strArray84);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException; message: sort: File not found!");
        } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
        }
        assertNotNull(strArray12);
        assertNotNull(strArray24);
        assertTrue(str28.equals(""));
        assertTrue(str29.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str33.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray41);
        assertNotNull(strArray52);
        assertNotNull(wildcardClass56);
        assertNotNull(strArray61);
        assertNotNull(strArray71);
        assertTrue(str72.equals(""));
        assertTrue(str73.equals(""));
        assertNotNull(strArray84);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test494");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication4 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication7 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray10 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream11 = null;
        java.io.OutputStream outputStream12 = null;
        mkdirApplication7.run(strArray10, inputStream11, outputStream12);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication14 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = lsApplication14.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        mkdirApplication7.createFolder(strArray20);
        java.lang.String str26 = lsApplication4.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        try {
            java.lang.String str27 = grepApplication0.grepFromFiles("03-24-2019 00:07:26", (java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: IO not working");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray10);
        assertNotNull(strArray20);
        assertTrue(str24.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str26.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test495");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("Could not write to output stream", "null output stream provided\r\nfail_echo_write", 100, "This is a directory Could not read stream Null Pointer Exception Exception Caught");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test496");
        sg.edu.nus.comp.cs4218.impl.app.SedApplication sedApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SedApplication();
        try {
            java.lang.String str5 = sedApplication0.replaceSubstringInFile("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", "null arguments", (int) (byte) 100, "fail_echo");
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SedException; message: sed: File doesn't exist.");
        } catch (sg.edu.nus.comp.cs4218.exception.SedException e) {
        }
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test497");
        sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication1 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray8 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream9 = null;
        java.io.OutputStream outputStream10 = null;
        mkdirApplication1.run(strArray8, inputStream9, outputStream10);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication12 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication15 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication17 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray20 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream21 = null;
        java.io.OutputStream outputStream22 = null;
        mkdirApplication17.run(strArray20, inputStream21, outputStream22);
        java.lang.String str24 = findApplication15.findFolderContent("", strArray20);
        java.lang.String str25 = lsApplication12.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray20);
        java.io.InputStream inputStream26 = null;
        java.io.OutputStream outputStream27 = null;
        mkdirApplication1.run(strArray20, inputStream26, outputStream27);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication29 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray32 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication29.createFolder(strArray32);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication1.run(strArray32, inputStream34, outputStream35);
        java.lang.String[] strArray42 = new java.lang.String[] { "null input file provided", "This is a directory\r\nCould not read stream\r\nNull Pointer Exception\r\nException Caught", "fail_sed_write", "null output stream provided", "Exception Caught" };
        mkdirApplication1.createFolder(strArray42);
        java.lang.Class<?> wildcardClass44 = mkdirApplication1.getClass();
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication45 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray51 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream52 = null;
        java.io.OutputStream outputStream53 = null;
        mkdirApplication48.run(strArray51, inputStream52, outputStream53);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication55 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication58 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray61 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream62 = null;
        java.io.OutputStream outputStream63 = null;
        mkdirApplication58.run(strArray61, inputStream62, outputStream63);
        java.lang.String str65 = lsApplication55.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray61);
        mkdirApplication48.createFolder(strArray61);
        java.lang.String str67 = lsApplication45.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray61);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication70 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication72 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray75 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication72.run(strArray75, inputStream76, outputStream77);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication79 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication82 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray85 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream86 = null;
        java.io.OutputStream outputStream87 = null;
        mkdirApplication82.run(strArray85, inputStream86, outputStream87);
        java.lang.String str89 = lsApplication79.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray85);
        mkdirApplication72.createFolder(strArray85);
        java.lang.String str91 = findApplication70.findFolderContent("null output stream provided fail_echo_write", strArray85);
        java.lang.String str92 = lsApplication45.listFolderContent((java.lang.Boolean) true, (java.lang.Boolean) false, strArray85);
        java.io.InputStream inputStream93 = null;
        java.io.OutputStream outputStream94 = null;
        mkdirApplication1.run(strArray85, inputStream93, outputStream94);
        java.io.InputStream inputStream96 = null;
        java.io.OutputStream outputStream97 = null;
        try {
            grepApplication0.run(strArray85, inputStream96, outputStream97);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException; message: grep: output stream is null!");
        } catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
        }
        assertNotNull(strArray8);
        assertNotNull(strArray20);
        assertTrue(str24.equals(""));
        assertTrue(str25.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray32);
        assertNotNull(strArray42);
        assertNotNull(wildcardClass44);
        assertNotNull(strArray51);
        assertNotNull(strArray61);
        assertTrue(str65.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str67.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray75);
        assertNotNull(strArray85);
        assertTrue(str89.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str91.equals(""));
        assertTrue(str92.equals("null output stream provided\r\nfail_echo_write"));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test498");
        sg.edu.nus.comp.cs4218.impl.app.ExitApplication exitApplication0 = new sg.edu.nus.comp.cs4218.impl.app.ExitApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication1 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication3 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray6 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream7 = null;
        java.io.OutputStream outputStream8 = null;
        mkdirApplication3.run(strArray6, inputStream7, outputStream8);
        java.lang.String str10 = findApplication1.findFolderContent("", strArray6);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication12 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication14 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray17 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream18 = null;
        java.io.OutputStream outputStream19 = null;
        mkdirApplication14.run(strArray17, inputStream18, outputStream19);
        java.lang.String str21 = findApplication12.findFolderContent("", strArray17);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication23 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication26 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication28 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray31 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream32 = null;
        java.io.OutputStream outputStream33 = null;
        mkdirApplication28.run(strArray31, inputStream32, outputStream33);
        java.lang.String str35 = findApplication26.findFolderContent("", strArray31);
        java.lang.String str36 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray31);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication39 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray42 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication39.createFolder(strArray42);
        java.lang.String str44 = lsApplication23.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) true, strArray42);
        java.lang.String str45 = findApplication12.findFolderContent("hi!", strArray42);
        java.lang.Class<?> wildcardClass46 = findApplication12.getClass();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication48 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication48.run(strArray55, inputStream56, outputStream57);
        java.lang.Class<?> wildcardClass59 = mkdirApplication48.getClass();
        java.lang.String[] strArray64 = new java.lang.String[] { "This is a directory", "Could not read stream", "Null Pointer Exception", "Exception Caught" };
        java.io.InputStream inputStream65 = null;
        java.io.OutputStream outputStream66 = null;
        mkdirApplication48.run(strArray64, inputStream65, outputStream66);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication68 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication70 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray73 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication70.createFolder(strArray73);
        java.lang.String str75 = findApplication68.findFolderContent("fail_sed_write", strArray73);
        java.io.InputStream inputStream76 = null;
        java.io.OutputStream outputStream77 = null;
        mkdirApplication48.run(strArray73, inputStream76, outputStream77);
        java.lang.String str79 = findApplication12.findFolderContent("fail_echo_write\r\nhi!", strArray73);
        java.lang.String str80 = findApplication1.findFolderContent("This is a directory:\r\n\r\n\r\nCould not read stream:\r\nNull Pointer Exception:\r\nException Caught:", strArray73);
        java.lang.Class<?> wildcardClass81 = strArray73.getClass();
        java.io.InputStream inputStream82 = null;
        java.io.OutputStream outputStream83 = null;
        try {
            exitApplication0.run(strArray73, inputStream82, outputStream83);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.ExitException; message: exit: Terminate process.");
        } catch (sg.edu.nus.comp.cs4218.exception.ExitException e) {
        }
        assertNotNull(strArray6);
        assertTrue(str10.equals(""));
        assertNotNull(strArray17);
        assertTrue(str21.equals(""));
        assertNotNull(strArray31);
        assertTrue(str35.equals(""));
        assertTrue(str36.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertNotNull(strArray42);
        assertTrue(str44.equals("fail_echo_write:\r\n\r\n\r\nhi!:"));
        assertTrue(str45.equals(""));
        assertNotNull(wildcardClass46);
        assertNotNull(strArray55);
        assertNotNull(wildcardClass59);
        assertNotNull(strArray64);
        assertNotNull(strArray73);
        assertTrue(str75.equals(""));
        assertTrue(str79.equals(""));
        assertTrue(str80.equals(""));
        assertNotNull(wildcardClass81);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test499");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.Class<?> wildcardClass3 = pwdApplication0.getClass();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        java.lang.String str7 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication8 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray16 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream17 = null;
        java.io.OutputStream outputStream18 = null;
        mkdirApplication9.run(strArray16, inputStream17, outputStream18);
        sg.edu.nus.comp.cs4218.impl.app.LsApplication lsApplication20 = new sg.edu.nus.comp.cs4218.impl.app.LsApplication();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication23 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication25 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray28 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream29 = null;
        java.io.OutputStream outputStream30 = null;
        mkdirApplication25.run(strArray28, inputStream29, outputStream30);
        java.lang.String str32 = findApplication23.findFolderContent("", strArray28);
        java.lang.String str33 = lsApplication20.listFolderContent((java.lang.Boolean) false, (java.lang.Boolean) false, strArray28);
        java.io.InputStream inputStream34 = null;
        java.io.OutputStream outputStream35 = null;
        mkdirApplication9.run(strArray28, inputStream34, outputStream35);
        java.lang.String str37 = echoApplication8.constructResult(strArray28);
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication38 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray45 = new java.lang.String[] { "Terminate process.", "fail_echo", "File doesn't exist.", "fail_echo", "", "File doesn't exist." };
        java.io.InputStream inputStream46 = null;
        java.io.OutputStream outputStream47 = null;
        mkdirApplication38.run(strArray45, inputStream46, outputStream47);
        java.lang.String str49 = echoApplication8.constructResult(strArray45);
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication50 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication52 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray55 = new java.lang.String[] { "null output stream provided", "fail_echo_write" };
        java.io.InputStream inputStream56 = null;
        java.io.OutputStream outputStream57 = null;
        mkdirApplication52.run(strArray55, inputStream56, outputStream57);
        java.lang.String str59 = findApplication50.findFolderContent("", strArray55);
        java.lang.String str60 = echoApplication8.constructResult(strArray55);
        java.io.InputStream inputStream61 = null;
        java.io.OutputStream outputStream62 = null;
        try {
            pwdApplication0.run(strArray55, inputStream61, outputStream62);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass2);
        assertNotNull(wildcardClass3);
        assertTrue(str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str6.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str7.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(strArray16);
        assertNotNull(strArray28);
        assertTrue(str32.equals(""));
        assertTrue(str33.equals("null output stream provided:\r\n\r\n\r\nfail_echo_write:"));
        assertTrue(str37.equals("null output stream provided fail_echo_write"));
        assertNotNull(strArray45);
        assertTrue(str49.equals("Terminate process. fail_echo File doesn't exist. fail_echo  File doesn't exist."));
        assertNotNull(strArray55);
        assertTrue(str59.equals(""));
        assertTrue(str60.equals("null output stream provided fail_echo_write"));
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test500");
        sg.edu.nus.comp.cs4218.impl.app.PwdApplication pwdApplication0 = new sg.edu.nus.comp.cs4218.impl.app.PwdApplication();
        java.lang.String str1 = pwdApplication0.getAbsolutePath();
        java.lang.Class<?> wildcardClass2 = pwdApplication0.getClass();
        java.lang.String str3 = pwdApplication0.getAbsolutePath();
        java.lang.String str4 = pwdApplication0.getAbsolutePath();
        java.lang.String str5 = pwdApplication0.getAbsolutePath();
        java.lang.String str6 = pwdApplication0.getAbsolutePath();
        sg.edu.nus.comp.cs4218.impl.app.FindApplication findApplication7 = new sg.edu.nus.comp.cs4218.impl.app.FindApplication();
        sg.edu.nus.comp.cs4218.impl.app.MkdirApplication mkdirApplication9 = new sg.edu.nus.comp.cs4218.impl.app.MkdirApplication();
        java.lang.String[] strArray12 = new java.lang.String[] { "fail_echo_write", "hi!" };
        mkdirApplication9.createFolder(strArray12);
        java.lang.String str14 = findApplication7.findFolderContent("fail_sed_write", strArray12);
        java.io.InputStream inputStream15 = null;
        java.io.OutputStream outputStream16 = null;
        try {
            pwdApplication0.run(strArray12, inputStream15, outputStream16);
            fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.PwdException; message: pwd: Null Pointer Exception");
        } catch (sg.edu.nus.comp.cs4218.exception.PwdException e) {
        }
        assertTrue(str1.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(wildcardClass2);
        assertTrue(str3.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str4.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str5.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertTrue(str6.equals("C:\\Users\\boman\\CS4218-team03-project\\randoop-4.1.1\\fail_echo_write"));
        assertNotNull(strArray12);
        assertTrue(str14.equals(""));
    }
}
